{"mappings":"2OAuBIA,EAAW,CACXC,QAAS,SAAUC,GACf,OAAO,IAAIC,EAAiBD,E,EAEhCE,kBAAmB,WACf,OAAO,IAAIC,C,GAInBC,EAAAC,QAAiBP,C,oECJjB,SAASQ,EAAiBN,GACA,MAAlBA,EAAOO,QACPC,KAAKC,SAAW,QAEhBD,KAAKC,SAAWT,EAAOO,O,CAQ/BD,EAAiBI,UAAUC,MAAQ,SAAUC,GAC5B,IAAIC,EAAiBL,KAAKC,UAChCK,MAAK,SAAUC,EAAKC,GACvBJ,EAASG,EAAK,IAAIE,EAAUD,G,KAWpCZ,EAAAC,QAAiBC,C,iFC/BbY,EAAW,MAOf,SAASC,EAAUH,GACfR,KAAKY,sBAAwBJ,EAAII,sBACjCZ,KAAKa,mBAAqBL,EAAIK,mBAC9Bb,KAAKc,gBAAkB,IAAIC,EAAeP,GAC1CR,KAAKgB,iBAAmB,IAAIC,EAAgBT,EAAIU,kBAChDlB,KAAKmB,UAAY,IAAIC,C,CAQzBT,EAAUU,mBAAqB,SAAUC,GAGrC,IAFA,IAAIC,EAAY,GACZC,EAAOF,EAEM,KAATE,GADK,CAIT,IAAIC,EAAQD,EAAKE,OAAOhB,GACxB,GAAIe,EAAQ,EAAG,CACXF,EAAUI,KAAKH,GACf,K,CAEJD,EAAUI,KAAKH,EAAKI,UAAU,EAAGH,EAAQ,IACzCD,EAAOA,EAAKI,UAAUH,EAAQ,E,CAElC,OAAOF,C,EAQXZ,EAAUT,UAAU2B,SAAW,SAAUC,GAGrC,IAFA,IAAIP,EAAYZ,EAAUU,mBAAmBS,GACzCC,EAAS,GACJC,EAAI,EAAGA,EAAIT,EAAUU,OAAQD,IAAK,CACvC,IAAIE,EAAWX,EAAUS,GACzBhC,KAAKmC,oBAAoBD,EAAUH,E,CAEvC,OAAOA,C,EAGXpB,EAAUT,UAAUiC,oBAAsB,SAAUD,EAAUH,GAC5C,MAAVA,IACAA,EAAS,IAEb,IAAIK,EAAUpC,KAAKqC,WAAWH,GAC1BI,EAAYtC,KAAKgB,iBAAiBU,OAAOU,GACzCG,EAAW,EACXR,EAAOE,OAAS,IAChBM,EAAWR,EAAOA,EAAOE,OAAS,GAAGO,eAGzC,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAUL,OAAQQ,IAAK,CACvC,IAEIC,EAAOC,EAAUC,EAFjBC,EAAOP,EAAUG,GAGH,UAAdI,EAAKC,MAGDH,EADiB,OADrBC,EAAgB5C,KAAKY,sBAAsBmC,YAAYF,EAAKG,OAE7C,GAEAJ,EAAcK,MAAM,KAEnCP,EAAQ1C,KAAKmB,UAAU+B,YAAYL,EAAKG,KAAMT,EAAWM,EAAKM,UAAWN,EAAKC,KAAMH,IAC/D,YAAdE,EAAKC,MAIRH,EADiB,OADrBC,EAAgB5C,KAAKa,mBAAmBkC,YAAYF,EAAKG,OAE1C,GAEAJ,EAAcK,MAAM,KAEnCP,EAAQ1C,KAAKmB,UAAUiC,mBAAmBP,EAAKG,KAAMT,EAAWM,EAAKM,UAAWN,EAAKC,KAAMH,EAAUE,EAAKQ,eAG1GX,EAAQ1C,KAAKmB,UAAU+B,YAAYL,EAAKG,KAAMT,EAAWM,EAAKM,UAAWN,EAAKC,KAAM,IAGxFf,EAAOJ,KAAKe,E,CAGhB,OAAOX,C,EAQXpB,EAAUT,UAAUmC,WAAa,SAAUP,GACvC,OAAO9B,KAAKc,gBAAgBX,MAAM2B,E,EAGtClC,EAAAC,QAAiBc,C,iFCpGjB,SAAS2C,EAAe9C,GACpBR,KAAKuD,KAAO/C,EAAI+C,KAChBvD,KAAKY,sBAAwBJ,EAAII,sBACjCZ,KAAKa,mBAAqBL,EAAIK,kB,CAQlCyC,EAAepD,UAAUC,MAAQ,SAAUqD,GAKvC,IAJA,IAGIC,EAAKC,EAASC,EAASC,EAAUC,EAHjCzB,EAAU,IAAI0B,EACd5B,EAAW,IAAI6B,EAAqBP,GAG/BQ,EAAM,EAAGA,EAAM9B,EAASD,OAAQ+B,IAAO,CAG5C,IAFA,IAAIxC,EAAOU,EAAS+B,MAAMD,GACtBE,EAAalE,KAAKuD,KAAKY,mBAAmB3C,GACrC4C,EAAI,EAAGA,EAAIF,EAAWjC,OAAQmC,IAAK,CACxCV,EAAUQ,EAAWE,GAAGC,EACxBZ,EAAMS,EAAWE,GAAGE,EAGpB,IADA,IAAIC,EAAiBvE,KAAKY,sBAAsB4D,WAAWd,GAClD1B,EAAI,EAAGA,EAAIuC,EAAetC,OAAQD,IAAK,CAC5C,IAAIyC,EAAgBC,SAASH,EAAevC,IAE5C2B,EAAU3D,KAAKY,sBAAsB+D,WAAWC,SAASH,GACzDb,EAAW5D,KAAKY,sBAAsB+D,WAAWC,SAASH,EAAgB,GAC1EZ,EAAY7D,KAAKY,sBAAsB+D,WAAWC,SAASH,EAAgB,GAG3ErC,EAAQyC,OAAO,IAAIC,EAAYL,EAAeZ,EAAWG,EAAM,EAAGP,EAAIxB,OAAQ,QAAS0B,EAASC,EAAUH,G,EAKlH,IAAIsB,EAAuB,IAAIhB,EAAqBvC,GAChDwD,EAAY,IAAIjB,EAAqBgB,EAAqBE,OAAO,IACjEC,EAAkBlF,KAAKa,mBAAmBsE,OAAOH,EAAUI,YAC/D,GAAkB,MAAdlB,GAA4C,IAAtBA,EAAWjC,QAAqD,IAArCiD,EAAgBG,iBAAwB,CAGzF,GADA5B,EAAMuB,EAC8B,IAAhCE,EAAgBI,aAAqB,EAAIP,EAAqB9C,OAC9D,IAAK,IAAIqC,EAAI,EAAGA,EAAIS,EAAqB9C,OAAQqC,IAAK,CAClD,IAAIiB,EAAYR,EAAqBE,OAAOX,GACxCkB,EAAkBxF,KAAKa,mBAAmBsE,OAAOI,GACrD,GAAIL,EAAgBO,aAAeD,EAAgBC,WAC/C,MAEJhC,GAAO8B,C,CAKf,IADA,IAAIG,EAAU1F,KAAKa,mBAAmB2D,WAAWU,EAAgBS,UACxDlD,EAAI,EAAGA,EAAIiD,EAAQzD,OAAQQ,IAAK,CACrC,IAAImD,EAASlB,SAASgB,EAAQjD,IAE9BkB,EAAU3D,KAAKa,mBAAmB8D,WAAWC,SAASgB,GACtDhC,EAAW5D,KAAKa,mBAAmB8D,WAAWC,SAASgB,EAAS,GAChE/B,EAAY7D,KAAKa,mBAAmB8D,WAAWC,SAASgB,EAAS,GAGjExD,EAAQyC,OAAO,IAAIC,EAAYc,EAAQ/B,EAAWG,EAAM,EAAGP,EAAIxB,OAAQ,UAAW0B,EAASC,EAAUH,EAAI2B,Y,GAMrH,OAFAhD,EAAQyD,YAEDzD,C,EAGXxC,EAAAC,QAAiByD,C,sCCpDjB1D,EAAAC,QAjBA,SAAqBiG,EAAWC,EAAW5C,EAAWlB,EAAQa,EAAMa,EAASC,EAAUP,GACnFrD,KAAKgD,KAAO8C,EACZ9F,KAAKgG,KAAOD,EACZ/F,KAAKmD,UAAYA,EACjBnD,KAAKiC,OAASA,EACdjC,KAAK2D,QAAUA,EACf3D,KAAK4D,SAAWA,EAChB5D,KAAKiG,KAAO,KACZjG,KAAKqD,aAAeA,EAEhBrD,KAAKkG,cADI,QAATpD,EACqB,EAEAqD,OAAOC,UAEhCpG,KAAK8C,KAAOA,C,wDCpBhB,SAASuD,IACLrG,KAAKsG,aAAe,GACpBtG,KAAKsG,aAAa,GAAK,CAAE,IAAIxB,GAAY,EAAI,EAAG,EAAG,EAAG,MAAO,EAAG,EAAG,KACnE9E,KAAKuG,QAAU,C,CAOnBF,EAAenG,UAAU2E,OAAS,SAAUhC,GACxC,IAAIN,EAAWM,EAAKM,UAAYN,EAAKZ,OAAS,EAC1CjC,KAAKuG,QAAUhE,IACfvC,KAAKuG,QAAUhE,GAGnB,IAAIiE,EAAaxG,KAAKsG,aAAa/D,GACjB,MAAdiE,IACAA,EAAa,IAEjBA,EAAW7E,KAAKkB,GAEhB7C,KAAKsG,aAAa/D,GAAYiE,C,EAMlCH,EAAenG,UAAU2F,UAAY,WACjC,IAAIY,EAAazG,KAAKsG,aAAarE,OACnCjC,KAAKuG,UACLvG,KAAKsG,aAAaG,GAAc,CAAE,IAAI3B,GAAY,EAAI,EAAG9E,KAAKuG,QAAS,EAAG,MAAO,EAAG,EAAG,I,EAG3F3G,EAAAC,QAAiBwG,C,sCCnCjB,SAASK,EAAqBC,GAC1B3G,KAAK2G,IAAMA,EACX3G,KAAK4G,cAAgB,GAErB,IAAK,IAAI5C,EAAM,EAAGA,EAAM2C,EAAI1E,OAAQ+B,IAAO,CACvC,IAAI6C,EAAKF,EAAI1B,OAAOjB,GACpBhE,KAAK4G,cAAcjF,KAAKqC,GACpB0C,EAAqBI,gBAAgBD,IACrC7C,G,CAIRhE,KAAKiC,OAASjC,KAAK4G,cAAc3E,M,CAGrCyE,EAAqBxG,UAAU+D,MAAQ,SAAUxC,GAC7C,GAAIzB,KAAK4G,cAAc3E,QAAUR,EAC7B,MAAO,GAEX,IAAIsF,EAAwB/G,KAAK4G,cAAcnF,GAC/C,OAAOzB,KAAK2G,IAAI1C,MAAM8C,E,EAG1BL,EAAqBxG,UAAU+E,OAAS,SAAUxD,GAC9C,GAAIzB,KAAK2G,IAAI1E,QAAUR,EACnB,MAAO,GAEX,IAAIuF,EAA8BhH,KAAK4G,cAAcnF,GACjDwF,EAA4BjH,KAAK4G,cAAcnF,EAAQ,GAE3D,OAAiC,MAA7BwF,EACOjH,KAAK2G,IAAI1C,MAAM+C,GAEnBhH,KAAK2G,IAAI1C,MAAM+C,EAA6BC,E,EAGvDP,EAAqBxG,UAAUgH,WAAa,SAAUzF,GAClD,GAAIzB,KAAK4G,cAAc3E,QAAUR,EAC7B,OAAO0F,IAEX,IAEIC,EAFAL,EAAwB/G,KAAK4G,cAAcnF,GAC3C4F,EAAQrH,KAAK2G,IAAIO,WAAWH,GAEhC,OAAIM,GAAS,OAAUA,GAAS,OAAUN,EAAwB/G,KAAK2G,IAAI1E,SACvEmF,EAAQpH,KAAK2G,IAAIO,WAAWH,EAAwB,KACvC,OAAUK,GAAS,MACF,MAAlBC,EAAQ,OAAkBD,EAAQ,MAAS,MAGpDC,C,EAGXX,EAAqBxG,UAAUkF,SAAW,WACtC,OAAOpF,KAAK2G,G,EAGhBD,EAAqBI,gBAAkB,SAAUD,GAC7C,IAAIS,EAAaT,EAAGK,WAAW,GAC/B,OAAII,GAAc,OAAUA,GAAc,K,EAQ9C1H,EAAAC,QAAiB6G,C,sCClEjB,SAASa,EAAgBrG,GACrBlB,KAAKkB,iBAAmBA,C,CAQ5BqG,EAAgBrH,UAAUwB,OAAS,SAAUU,GAEzC,OADAA,EAAUpC,KAAKwH,QAAQpF,GAChBpC,KAAKyH,SAASrF,E,EAGzBmF,EAAgBrH,UAAUsH,QAAU,SAAUpF,GAC1C,IAAIJ,EAAGS,EAAG6B,EACV,IAAKtC,EAAI,EAAGA,GAAKI,EAAQmE,QAASvE,IAAK,CACnC,IAAI0F,EAAQtF,EAAQkE,aAAatE,GACjC,GAAa,MAAT0F,EAGJ,IAAKjF,EAAI,EAAGA,EAAIiF,EAAMzF,OAAQQ,IAAK,CAC/B,IAEIkF,EAFA9E,EAAO6E,EAAMjF,GACbuD,EAAOG,OAAOC,UAGdI,EAAapE,EAAQkE,aAAazD,EAAKM,UAAY,GACvD,GAAkB,MAAdqD,EAAJ,CAIA,IAAKlC,EAAI,EAAGA,EAAIkC,EAAWvE,OAAQqC,IAAK,CACpC,IAEIsD,EAFAC,EAAYrB,EAAWlC,GAGP,MAAhBzB,EAAKc,SAAyC,MAAtBkE,EAAUjE,UAElCkE,QAAQC,IAAI,yBACZH,EAAY,GAEZA,EAAY5H,KAAKkB,iBAAiB8G,IAAIH,EAAUjE,SAAUf,EAAKc,SAGnE,IAAIsE,EAAQJ,EAAU3B,cAAgB0B,EAAY/E,EAAKmD,KACnDiC,EAAQjC,IACR2B,EAAqBE,EACrB7B,EAAOiC,E,CAIfpF,EAAKoD,KAAO0B,EACZ9E,EAAKqD,cAAgBF,CAtBjB,C,EAyBZ,OAAO5D,C,EAGXmF,EAAgBrH,UAAUuH,SAAW,SAAUrF,GAC3C,IAAI8F,EAAgB,GAGhBC,EAFM/F,EAAQkE,aAAalE,EAAQkE,aAAarE,OAAS,GAAG,GAE5CgE,KACpB,GAAiB,MAAbkC,EACA,MAAO,GAEX,KAA0B,QAAnBA,EAAUrF,MAAgB,CAE7B,GADAoF,EAAcvG,KAAKwG,GACG,MAAlBA,EAAUlC,KAEV,MAAO,GAEXkC,EAAYA,EAAUlC,I,CAG1B,OAAOiC,EAAcE,S,EAGzBxI,EAAAC,QAAiB0H,C,sCC9EjB,SAASc,IAAkB,CAG3BA,EAAgBnI,UAAUgD,YAAc,SAAUoF,EAASC,EAAUzF,EAAMH,GACvE,IAAID,EAAQ,GAgBZ,OAfAA,EAAM4F,QAAUA,EAChB5F,EAAM8F,UAAY1F,EAClBJ,EAAMF,cAAgB+F,EAEtB7F,EAAMW,aAAeV,EAAS,GAC9BD,EAAMsB,IAAMrB,EAAS,GACrBD,EAAM+F,aAAe9F,EAAS,GAC9BD,EAAMgG,aAAe/F,EAAS,GAC9BD,EAAMiG,aAAehG,EAAS,GAC9BD,EAAMkG,gBAAkBjG,EAAS,GACjCD,EAAMmG,gBAAkBlG,EAAS,GACjCD,EAAMoG,WAAanG,EAAS,GAC5BD,EAAMqG,QAAUpG,EAAS,GACzBD,EAAMsG,cAAgBrG,EAAS,GAExBD,C,EAGX2F,EAAgBnI,UAAUkD,mBAAqB,SAAUkF,EAASC,EAAUzF,EAAMH,EAAUU,GACxF,IAAIX,EAAQ,GAgBZ,OAfAA,EAAM4F,QAAUA,EAChB5F,EAAM8F,UAAY1F,EAClBJ,EAAMF,cAAgB+F,EAEtB7F,EAAMW,aAAeA,EACrBX,EAAMsB,IAAMrB,EAAS,GACrBD,EAAM+F,aAAe9F,EAAS,GAC9BD,EAAMgG,aAAe/F,EAAS,GAC9BD,EAAMiG,aAAehG,EAAS,GAC9BD,EAAMkG,gBAAkBjG,EAAS,GACjCD,EAAMmG,gBAAkBlG,EAAS,GACjCD,EAAMoG,WAAanG,EAAS,GAIrBD,C,EAGX9C,EAAAC,QAAiBwI,C,oECvCjB,SAASY,EAAwBhJ,GAC7BiJ,EAAAC,MAAuBnJ,KAAM,CAACC,G,CAGlCgJ,EAAwB/I,UAAYkJ,OAAOC,OAAOH,EAAAhJ,WAOlD+I,EAAwB/I,UAAUoJ,gBAAkB,SAAUC,EAAKnJ,GAC/D,IAAIoJ,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAOH,GAAK,GACrBC,EAAIG,aAAe,cACnBH,EAAII,OAAS,WACT,GAAI5J,KAAK6J,OAAS,GAAqB,MAAhB7J,KAAK6J,OACxBzJ,EAASoJ,EAAIM,WAAY,UAD7B,CAIA,IAAIC,EAAc/J,KAAKgK,SAGnBC,EADK,IAAIC,EAAAC,KAAUC,OAAO,IAAIC,WAAWN,IACxBO,aACrBlK,EAAS,KAAM6J,EAAYM,O,GAE/Bf,EAAIgB,QAAU,SAAUjK,GACpBH,EAASG,EAAK,K,EAElBiJ,EAAIiB,M,EAUR7K,EAAAC,QAAiBoJ,C;0FClEyE,WAAyB,SAAS7E,EAAEsG,GAAG,MAAMA,C,CAAG,IAAIC,OAAE,EAAOC,EAAG5K,KAAK,SAAS6K,EAAEH,EAAEI,GAAG,IAAqFC,EAAjFC,EAAEN,EAAEzH,MAAM,KAAKgI,EAAEL,IAAKI,EAAE,KAAKC,IAAIA,EAAEC,YAAYD,EAAEC,WAAW,OAAOF,EAAE,IAAI,KAAUA,EAAE/I,SAAS8I,EAAEC,EAAEG,UAAWH,EAAE/I,QAAQ6I,IAAIH,EAASM,EAAEA,EAAEF,GAAGE,EAAEF,GAAGE,EAAEF,GAAG,GAAxBE,EAAEF,GAAGD,C,CAAuB,IAA2KM,EAAvKC,EAAE,oBAAqBhB,YAAY,oBAAqBiB,aAAa,oBAAqBC,aAAa,oBAAqBC,SAA6C,IAApC,IAAKH,EAAEhB,WAAWoB,OAAO,KAAeL,EAAE,EAAE,IAAIA,IAAIA,EAAE,IAAI,IAAaM,GAATA,EAAEN,KAAa,EAAEM,EAAEA,KAAK,EAAE,EAAK,SAASC,EAAEjB,EAAEI,EAAEE,GAAG,IAAIC,EAAEF,EAAE,iBAAkBD,EAAEA,EAAEA,EAAE,EAAEc,EAAE,iBAAkBZ,EAAEA,EAAEN,EAAEzI,OAAY,IAALgJ,GAAE,EAAOF,EAAI,EAAFa,EAAIb,MAAMD,EAAEG,EAAEA,IAAI,EAAEY,EAAW,KAARZ,EAAEP,EAAEI,KAAS,IAAIC,EAAEa,GAAG,EAAEb,IAAID,GAAG,EAAsLG,GAA1BA,GAA1BA,GAA1BA,GAA1BA,GAA1BA,GAA1BA,GAAxBA,EAAEA,IAAI,EAAEY,EAAW,KAARZ,EAAEP,EAAEI,QAAe,EAAEe,EAAa,KAAVZ,EAAEP,EAAEI,EAAE,QAAe,EAAEe,EAAa,KAAVZ,EAAEP,EAAEI,EAAE,QAAe,EAAEe,EAAa,KAAVZ,EAAEP,EAAEI,EAAE,QAAe,EAAEe,EAAa,KAAVZ,EAAEP,EAAEI,EAAE,QAAe,EAAEe,EAAa,KAAVZ,EAAEP,EAAEI,EAAE,QAAe,EAAEe,EAAa,KAAVZ,EAAEP,EAAEI,EAAE,QAAe,EAAEe,EAAa,KAAVZ,EAAEP,EAAEI,EAAE,KAAS,OAAS,WAAFG,KAAgB,C,CAC/6B,IAAIa,EAAE,CAAC,EAAE,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAC9e,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAC9e,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAC9e,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAC/e,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAC9e,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,WAAWD,EAAER,EAAE,IAAIE,YAAYO,GAAGA,EAAE,SAASC,IAAG,CAA4I,SAASC,EAAEtB,GAAG,IAA8CK,EAAEa,EAAEtH,EAAE2H,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,EAAEjI,EAA5DyG,EAAEJ,EAAEzI,OAAO+I,EAAE,EAAEC,EAAE9E,OAAOoG,kBAAsC,IAAIF,EAAE,EAAEA,EAAEvB,IAAIuB,EAAE3B,EAAE2B,GAAGrB,IAAIA,EAAEN,EAAE2B,IAAI3B,EAAE2B,GAAGpB,IAAIA,EAAEP,EAAE2B,IAAkD,IAA9CtB,EAAE,GAAGC,EAAEY,EAAE,IAAKP,EAAEE,YAAYE,OAAOV,GAAGzG,EAAE,EAAE2H,EAAE,EAAMC,EAAE,EAAE5H,GAAG0G,GAAG,CAAC,IAAIqB,EAAE,EAAEA,EAAEvB,IAAIuB,EAAE,GAAG3B,EAAE2B,KAAK/H,EAAE,CAAS,IAAR6H,EAAE,EAAEC,EAAEH,EAAMK,EAAE,EAAEA,EAAEhI,IAAIgI,EAAEH,EAAEA,GAAG,EAAI,EAAFC,EAAIA,IAAI,EAAY,IAAV/H,EAAEC,GAAG,GAAG+H,EAAMC,EAAEH,EAAEG,EAAEvB,EAAEuB,GAAGJ,EAAEN,EAAEU,GAAGjI,IAAI4H,C,GAAI3H,EAAE2H,IAAI,EAAEC,IAAI,C,CAAE,MAAM,CAACN,EAAEZ,EAAEC,E,CAAhdc,EAAE7L,UAAUsM,QAAQ,WAAW,OAAOxM,KAAKgD,I,EAAM+I,EAAE7L,UAAUuM,QAAQ,WAAW,OAAOzM,KAAK0M,I,EAAMX,EAAE7L,UAAU8L,EAAE,WAAW,OAAOhM,KAAK2M,C,EAA6U,IAASC,EAALC,EAAE,GAAK,IAAID,EAAE,EAAE,IAAIA,EAAEA,IAAI,QAAO,GAAI,KAAK,KAAKA,EAAEC,EAAElL,KAAK,CAACiL,EAAE,GAAG,IAAI,MAAM,KAAK,KAAKA,EAAEC,EAAElL,KAAK,CAACiL,EAAE,IAAI,IAAI,IAAI,MAAM,KAAK,KAAKA,EAAEC,EAAElL,KAAK,CAACiL,EAAE,IAAI,EAAE,IAAI,MAAM,KAAK,KAAKA,EAAEC,EAAElL,KAAK,CAACiL,EAAE,IAAI,IAAI,IAAI,MAAM,QAAQxI,EAAE,oBAAoBwI,GAC37B,IAAIE,EAAG,WAAW,SAASpC,EAAEK,GAAG,QAAO,GAAI,KAAK,IAAIA,EAAE,MAAM,CAAC,IAAIA,EAAE,EAAE,GAAG,KAAK,IAAIA,EAAE,MAAM,CAAC,IAAIA,EAAE,EAAE,GAAG,KAAK,IAAIA,EAAE,MAAM,CAAC,IAAIA,EAAE,EAAE,GAAG,KAAK,IAAIA,EAAE,MAAM,CAAC,IAAIA,EAAE,EAAE,GAAG,KAAK,IAAIA,EAAE,MAAM,CAAC,IAAIA,EAAE,EAAE,GAAG,KAAK,IAAIA,EAAE,MAAM,CAAC,IAAIA,EAAE,EAAE,GAAG,KAAK,IAAIA,EAAE,MAAM,CAAC,IAAIA,EAAE,EAAE,GAAG,KAAK,KAAKA,EAAE,MAAM,CAAC,IAAIA,EAAE,GAAG,GAAG,KAAK,IAAIA,EAAE,MAAM,CAAC,IAAIA,EAAE,GAAG,GAAG,KAAK,IAAIA,EAAE,MAAM,CAAC,IAAIA,EAAE,GAAG,GAAG,KAAK,IAAIA,EAAE,MAAM,CAAC,IAAIA,EAAE,GAAG,GAAG,KAAK,IAAIA,EAAE,MAAM,CAAC,IAAIA,EAAE,GAAG,GAAG,KAAK,IAAIA,EAAE,MAAM,CAAC,IAAIA,EAAE,GAAG,GAAG,KAAK,IAAIA,EAAE,MAAM,CAAC,IAAIA,EAAE,GAAG,GAAG,KAAK,IAAIA,EAAE,MAAM,CAAC,IAAIA,EAAE,GAAG,GAAG,KAAK,IAAIA,EAAE,MAAM,CAAC,IACzfA,EAAE,GAAG,GAAG,KAAK,IAAIA,EAAE,MAAM,CAAC,IAAIA,EAAE,GAAG,GAAG,KAAK,IAAIA,EAAE,MAAM,CAAC,IAAIA,EAAE,GAAG,GAAG,KAAK,IAAIA,EAAE,MAAM,CAAC,IAAIA,EAAE,GAAG,GAAG,KAAK,IAAIA,EAAE,MAAM,CAAC,IAAIA,EAAE,GAAG,GAAG,KAAK,IAAIA,EAAE,MAAM,CAAC,IAAIA,EAAE,GAAG,GAAG,KAAK,IAAIA,EAAE,MAAM,CAAC,IAAIA,EAAE,GAAG,GAAG,KAAK,KAAKA,EAAE,MAAM,CAAC,IAAIA,EAAE,GAAG,GAAG,KAAK,KAAKA,EAAE,MAAM,CAAC,IAAIA,EAAE,IAAI,GAAG,KAAK,KAAKA,EAAE,MAAM,CAAC,IAAIA,EAAE,IAAI,GAAG,KAAK,KAAKA,EAAE,MAAM,CAAC,IAAIA,EAAE,IAAI,GAAG,KAAK,KAAKA,EAAE,MAAM,CAAC,IAAIA,EAAE,IAAI,GAAG,KAAK,KAAKA,EAAE,MAAM,CAAC,IAAIA,EAAE,IAAI,GAAG,KAAK,MAAMA,EAAE,MAAM,CAAC,IAAIA,EAAE,IAAI,GAAG,QAAQ3G,EAAE,mBAAmB2G,G,CAAI,IAASC,EAAEC,EAAPH,EAAE,GAAO,IAAIE,EAAE,EAAE,KAAKA,EAAEA,IAAIC,EAAEP,EAAEM,GAAGF,EAAEE,GAAGC,EAAE,IAAI,GAAGA,EAAE,IACpf,GAAGA,EAAE,GAAG,OAAOH,C,CAFR,GAEoC,SAASiC,EAAErC,EAAEI,GAAkQ,OAA/P9K,KAAKgC,EAAE,GAAGhC,KAAKyC,EAAE,MAAMzC,KAAKgL,EAAEhL,KAAK4L,EAAE5L,KAAKiL,EAAEjL,KAAKoE,EAAE,EAAEpE,KAAKsB,MAAM+J,EAAE,IAAIhB,WAAWK,GAAGA,EAAE1K,KAAKgN,GAAE,EAAGhN,KAAKsE,EAAE2I,EAAEjN,KAAKkN,GAAE,GAAMpC,IAAGA,EAAI,GAAJ,MAAQA,EAAErJ,QAAQzB,KAAKiL,EAAEH,EAAErJ,OAAOqJ,EAAEqC,aAAanN,KAAKyC,EAAEqI,EAAEqC,YAAYrC,EAAEsC,aAAapN,KAAKsE,EAAEwG,EAAEsC,YAAYtC,EAAEuC,SAASrN,KAAKkN,EAAEpC,EAAEuC,SAAerN,KAAKsE,GAAG,KAAKgJ,EAAEtN,KAAK+K,EAAE,MAAM/K,KAAK8K,EAAE,IAAKO,EAAEhB,WAAWoB,OAAO,MAAMzL,KAAKyC,EAAE,KAAK,MAAM,KAAKwK,EAAEjN,KAAK+K,EAAE,EAAE/K,KAAK8K,EAAE,IAAKO,EAAEhB,WAAWoB,OAAOzL,KAAKyC,GAAGzC,KAAK0K,EAAE1K,KAAK8L,EAAE9L,KAAKoM,EAAEpM,KAAK0L,EAAE1L,KAAKiM,EAAEjM,KAAK6L,EAAE,MAAM,QAAQzH,EAAEmJ,MAAM,yB,CAAzflC,GAAG,IAAIE,YAAYuB,GACvC,IAAIQ,EAAE,EAAEL,EAAE,EACVF,EAAE7M,UAAUmM,EAAE,WAAW,MAAMrM,KAAKgN,GAAG,CAAC,IAAItC,EAAE8C,EAAExN,KAAK,GAA2B,OAAtB,EAAF0K,IAAM1K,KAAKgN,GAAE,GAAItC,KAAK,GAAY,KAAK,EAAE,IAAII,EAAE9K,KAAKsB,MAAM0J,EAAEhL,KAAKiL,EAAEA,EAAEjL,KAAK8K,EAAEC,EAAE/K,KAAK+K,EAAEa,EAAEd,EAAE7I,OAAOqC,EAAEqG,EAAMuB,EAAEjB,EAAEhJ,OAAOkK,EAAExB,EAAqS,OAAnS3K,KAAKgL,EAAEhL,KAAK4L,EAAE,EAAEZ,EAAE,GAAGY,GAAGxH,EAAEmJ,MAAM,2CAA2CjJ,EAAEwG,EAAEE,KAAKF,EAAEE,MAAM,EAAEA,EAAE,GAAGY,GAAGxH,EAAEmJ,MAAM,4CAA+DjJ,MAAjBwG,EAAEE,KAAKF,EAAEE,MAAM,IAAU5G,EAAEmJ,MAAM,qDAAqDvC,EAAE1G,EAAEwG,EAAE7I,QAAQmC,EAAEmJ,MAAM,2BAAkCvN,KAAKsE,GAAG,KAAKgJ,EAAE,KAAKvC,EAAEzG,EAAE2G,EAAEhJ,QAAQ,CAClf,GAALqC,GADwf6H,EAC5fD,EAAEnB,EAAUM,EAAEJ,EAAEwC,IAAI3C,EAAE4C,SAAS1C,EAAEA,EAAEmB,GAAGpB,GAAGA,GAAGoB,EAAEnB,GAAGmB,OAAO,KAAKA,KAAKlB,EAAEF,KAAKD,EAAEE,KAAKhL,KAAK+K,EAAEA,EAAEE,EAAEjL,KAAK0K,IAAIK,EAAE/K,KAAK+K,C,CAAE,MAAM,KAAKkC,EAAE,KAAKlC,EAAEzG,EAAE2G,EAAEhJ,QAAQgJ,EAAEjL,KAAK0K,EAAE,CAACG,EAAE,IAAI,MAAM,QAAQzG,EAAEmJ,MAAM,yBAAyB,GAAGlC,EAAEJ,EAAEwC,IAAI3C,EAAE4C,SAAS1C,EAAEA,EAAE1G,GAAGyG,GAAGA,GAAGzG,EAAE0G,GAAG1G,OAAO,KAAKA,KAAK2G,EAAEF,KAAKD,EAAEE,KAAKhL,KAAKiL,EAAED,EAAEhL,KAAK+K,EAAEA,EAAE/K,KAAK8K,EAAEG,EAAE,MAAM,KAAK,EAAEjL,KAAKiM,EAAE0B,EAAGC,GAAI,MAAM,KAAK,EAAM,IAAqFC,EAAIC,EAAInB,EAAwBoB,EAAjH3B,EAAEoB,EAAExN,KAAK,GAAG,IAAIqM,EAAEmB,EAAExN,KAAK,GAAG,EAAEsM,EAAEkB,EAAExN,KAAK,GAAG,EAAEqE,EAAE,IAAKgH,EAAEhB,WAAWoB,OAAOuC,EAAE/L,QAAoBiL,EAAEvC,EAAEsD,EAAEtD,EAAEuD,EAAEvD,EAAEwD,EAAExD,EAAEyD,EAAEzD,EAAvH,IAA6HyD,EAAE,EAAEA,EAAE9B,IAAI8B,EAAE/J,EAAE2J,EAAEI,IAAIZ,EAAExN,KAAK,GAAG,IAAIqL,EACnf,IADsf+C,EACxf9B,EAAMA,EAAEjI,EAAEpC,OAAOmM,EAAE9B,IAAI8B,EAAE/J,EAAE2J,EAAEI,IAAI,EAA6C,IAA3CP,EAAE7B,EAAE3H,GAAG6I,EAAE,IAAK7B,EAAEhB,WAAWoB,OAAOW,EAAEC,GAAG+B,EAAE,EAAML,EAAE3B,EAAEC,EAAE+B,EAAEL,GAAG,OAAOE,EAAEI,EAAErO,KAAK6N,GAAGI,GAAG,KAAK,GAAG,IAAIE,EAAE,EAAEX,EAAExN,KAAK,GAAGmO,KAAKjB,EAAEkB,KAAKF,EAAE,MAAM,KAAK,GAAG,IAAIC,EAAE,EAAEX,EAAExN,KAAK,GAAGmO,KAAKjB,EAAEkB,KAAK,EAAEF,EAAE,EAAE,MAAM,KAAK,GAAG,IAAIC,EAAE,GAAGX,EAAExN,KAAK,GAAGmO,KAAKjB,EAAEkB,KAAK,EAAEF,EAAE,EAAE,MAAM,QAAQA,EAAEhB,EAAEkB,KAAKH,EAAEH,EAAI9B,EAAFX,EAAI6B,EAAEQ,SAAS,EAAEtB,GAAMc,EAAEjJ,MAAM,EAAEmI,IAAIO,EAAIX,EAAFX,EAAI6B,EAAEQ,SAAStB,GAAMc,EAAEjJ,MAAMmI,IAAIpM,KAAKiM,EAAE6B,EAAEnB,GAAG,MAAM,QAAQvI,EAAEmJ,MAAM,kBAAkB7C,I,CAAK,OAAO1K,KAAKoM,G,EACxa,IAC0EkC,EAAEC,EADxEC,EAAE,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAIR,EAAE3C,EAAE,IAAIC,YAAYkD,GAAGA,EAAEC,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAKC,EAAGrD,EAAE,IAAIC,YAAYmD,GAAIA,EAAGE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAGC,EAAEvD,EAAE,IAAIhB,WAAWsE,GAAIA,EAAGE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,OAAOC,EAAGzD,EAAE,IAAIC,YAAYuD,GAAIA,EAAGE,EAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GACnf,GAAG,GAAG,GAAG,GAAG,IAAIC,EAAE3D,EAAE,IAAIhB,WAAW0E,GAAIA,EAAGE,EAAE,IAAK5D,EAAEhB,WAAWoB,OAAO,KAAc,IAAJ6C,EAAE,EAAMC,EAAGU,EAAEhN,OAAOqM,EAAEC,IAAKD,EAAEW,EAAEX,GAAG,KAAKA,EAAE,EAAE,KAAKA,EAAE,EAAE,KAAKA,EAAE,EAAE,EAAE,IAA2CY,EAAEC,EAAzCxB,EAAG3B,EAAEiD,GAAGG,EAAE,IAAK/D,EAAEhB,WAAWoB,OAAO,IAAa,IAAJyD,EAAE,EAAMC,EAAGC,EAAEnN,OAAOiN,EAAEC,IAAKD,EAAEE,EAAEF,GAAG,EAAE,IAAItB,EAAG5B,EAAEoD,GAAG,SAAS5B,EAAE9C,EAAEI,GAAG,IAAI,IAA2CmB,EAAvCjB,EAAEN,EAAEkB,EAAEX,EAAEP,EAAEM,EAAED,EAAEL,EAAEpJ,MAAMsK,EAAElB,EAAEO,EAAE3G,EAAEyG,EAAE9I,OAASgJ,EAAEH,GAAGc,GAAGtH,GAAGF,EAAEmJ,MAAM,2BAA2BvC,GAAGD,EAAEa,MAAMX,EAAEA,GAAG,EAAuC,OAArCgB,EAAEjB,GAAG,GAAGF,GAAG,EAAEJ,EAAEkB,EAAEZ,IAAIF,EAAEJ,EAAEM,EAAEC,EAAEH,EAAEJ,EAAEO,EAAEW,EAASK,C,CAC3Z,SAASoC,EAAE3D,EAAEI,GAAG,IAAI,IAAyDqB,EAAEC,EAAvDpB,EAAEN,EAAEkB,EAAEX,EAAEP,EAAEM,EAAED,EAAEL,EAAEpJ,MAAMsK,EAAElB,EAAEO,EAAE3G,EAAEyG,EAAE9I,OAAOgK,EAAEnB,EAAE,GAAGoB,EAAEpB,EAAE,GAAOG,EAAEiB,KAAKN,GAAGtH,IAAI0G,GAAGD,EAAEa,MAAMX,EAAEA,GAAG,EAA2F,OAAzEmB,GAAhBD,EAAEF,EAAEjB,GAAG,GAAGkB,GAAG,MAAS,IAAKjB,GAAG7G,EAAEmJ,MAAM,wBAAwBnB,IAAI1B,EAAEkB,EAAEZ,GAAGoB,EAAE1B,EAAEM,EAAEC,EAAEmB,EAAE1B,EAAEO,EAAEW,EAAW,MAAFO,C,CAMnB,SAASkD,EAAE3E,GAAG1K,KAAKsB,MAAMoJ,EAAE1K,KAAKiL,EAAE,EAAEjL,KAAKkM,EAAE,GAAGlM,KAAK6N,GAAE,C,CALnPd,EAAE7M,UAAU+L,EAAE,SAASvB,EAAEI,GAAG,IAAIE,EAAEhL,KAAK8K,EAAEG,EAAEjL,KAAK+K,EAAE/K,KAAKmM,EAAEzB,EAAE,IAAI,IAAmBkB,EAAEtH,EAAE2H,EAAEC,EAArBnB,EAAEC,EAAE/I,OAAO,IAAY,OAAO2J,EAAEyC,EAAErO,KAAK0K,KAAK,GAAG,IAAIkB,EAAEX,GAAGF,IAAI/K,KAAK+K,EAAEE,EAAED,EAAEhL,KAAK0K,IAAIO,EAAEjL,KAAK+K,GAAGC,EAAEC,KAAKW,OAAoI,IAArHM,EAAEwC,EAAVpK,EAAEsH,EAAE,KAAY,EAAEgD,EAAEtK,KAAK4H,GAAGsB,EAAExN,KAAK4O,EAAEtK,KAAKsH,EAAEyC,EAAErO,KAAK8K,GAAGmB,EAAE6C,EAAGlD,GAAG,EAAEoD,EAAEpD,KAAKK,GAAGuB,EAAExN,KAAKgP,EAAEpD,KAAKX,GAAGF,IAAI/K,KAAK+K,EAAEE,EAAED,EAAEhL,KAAK0K,IAAIO,EAAEjL,KAAK+K,GAAQmB,KAAKlB,EAAEC,GAAGD,EAAEC,IAAIgB,GAAG,KAAK,GAAGjM,KAAKgL,GAAGhL,KAAKgL,GAAG,EAAEhL,KAAKiL,IAAIjL,KAAK+K,EAAEE,C,EAC1W8B,EAAE7M,UAAU2L,EAAE,SAASnB,EAAEI,GAAG,IAAIE,EAAEhL,KAAK8K,EAAEG,EAAEjL,KAAK+K,EAAE/K,KAAKmM,EAAEzB,EAAE,IAAI,IAAekB,EAAEtH,EAAE2H,EAAEC,EAAjBnB,EAAEC,EAAE/I,OAAe,OAAO2J,EAAEyC,EAAErO,KAAK0K,KAAK,GAAG,IAAIkB,EAAEX,GAAGF,IAAeA,GAAXC,EAAEhL,KAAK0K,KAAQzI,QAAQ+I,EAAEC,KAAKW,OAA8H,IAA/GM,EAAEwC,EAAVpK,EAAEsH,EAAE,KAAY,EAAEgD,EAAEtK,KAAK4H,GAAGsB,EAAExN,KAAK4O,EAAEtK,KAAKsH,EAAEyC,EAAErO,KAAK8K,GAAGmB,EAAE6C,EAAGlD,GAAG,EAAEoD,EAAEpD,KAAKK,GAAGuB,EAAExN,KAAKgP,EAAEpD,KAAKX,EAAEiB,EAAEnB,IAAeA,GAAXC,EAAEhL,KAAK0K,KAAQzI,QAAaiK,KAAKlB,EAAEC,GAAGD,EAAEC,IAAIgB,GAAG,KAAK,GAAGjM,KAAKgL,GAAGhL,KAAKgL,GAAG,EAAEhL,KAAKiL,IAAIjL,KAAK+K,EAAEE,C,EACzV8B,EAAE7M,UAAUwK,EAAE,WAAW,IAA4DM,EAAEC,EAA1DP,EAAE,IAAKW,EAAEhB,WAAWoB,OAAOzL,KAAK+K,EAAE,OAAOD,EAAE9K,KAAK+K,EAAE,MAAUA,EAAE/K,KAAK8K,EAAE,GAAGO,EAAEX,EAAE+C,IAAI1C,EAAE2C,SAAS,MAAMhD,EAAEzI,cAAkB,IAAJ+I,EAAE,EAAMC,EAAEP,EAAEzI,OAAO+I,EAAEC,IAAID,EAAEN,EAAEM,GAAGD,EAAEC,EAAE,OAAuC,GAAhChL,KAAKgC,EAAEL,KAAK+I,GAAG1K,KAAKoE,GAAGsG,EAAEzI,OAAUoJ,EAAEN,EAAE0C,IAAI1C,EAAE2C,SAAS5C,EAAEA,EAAE,aAAa,IAAIE,EAAE,EAAE,MAAMA,IAAIA,EAAED,EAAEC,GAAGD,EAAED,EAAEE,GAAgB,OAAbhL,KAAK+K,EAAE,MAAaA,C,EACpTgC,EAAE7M,UAAU4L,EAAE,SAASpB,GAAG,IAAII,EAAmCC,EAAEa,EAAnCZ,EAAEhL,KAAKsB,MAAMW,OAAOjC,KAAKiL,EAAE,EAAE,EAAQ3G,EAAEtE,KAAKsB,MAAM2K,EAAEjM,KAAK8K,EAA8M,OAA5MJ,IAAI,iBAAkBA,EAAEG,IAAIG,EAAEN,EAAEG,GAAG,iBAAkBH,EAAEuD,IAAIjD,GAAGN,EAAEuD,IAAI,EAAEjD,EAA+CD,GAAda,GAA3BtH,EAAErC,OAAOjC,KAAKiL,GAAGjL,KAAKmM,EAAE,GAAY,EAAP,IAAU,GAAMF,EAAEhK,OAAOgK,EAAEhK,OAAO2J,EAAEK,EAAEhK,QAAQ,EAAG8I,EAAEkB,EAAEhK,OAAO+I,EAAEK,GAAGP,EAAE,IAAIT,WAAWU,IAAK0C,IAAIxB,GAAInB,EAAEmB,EAASjM,KAAK8K,EAAEA,C,EACrTiC,EAAE7M,UAAUkM,EAAE,WAAW,IAA0BnB,EAAoDW,EAAEtH,EAAE2H,EAAEC,EAAhFxB,EAAE,EAAEI,EAAE9K,KAAK8K,EAAEE,EAAEhL,KAAKgC,EAAI+I,EAAE,IAAKM,EAAEhB,WAAWoB,OAAOzL,KAAKoE,GAAGpE,KAAK+K,EAAE,QAAgB,GAAG,IAAIC,EAAE/I,OAAO,OAAOoJ,EAAErL,KAAK8K,EAAE4C,SAAS,MAAM1N,KAAK+K,GAAG/K,KAAK8K,EAAE7G,MAAM,MAAMjE,KAAK+K,GAAO,IAAJa,EAAE,EAAMtH,EAAE0G,EAAE/I,OAAO2J,EAAEtH,IAAIsH,EAAc,IAAJK,EAAE,EAAMC,GAAfjB,EAAED,EAAEY,IAAe3J,OAAOgK,EAAEC,IAAID,EAAElB,EAAEL,KAAKO,EAAEgB,GAAW,IAARL,EAAE,MAAUtH,EAAEtE,KAAK+K,EAAEa,EAAEtH,IAAIsH,EAAEb,EAAEL,KAAKI,EAAEc,GAAa,OAAV5L,KAAKgC,EAAE,GAAUhC,KAAKuK,OAAOQ,C,EACjVgC,EAAE7M,UAAUwL,EAAE,WAAW,IAAIhB,EAAEI,EAAE9K,KAAK+K,EAAkI,OAAhIM,EAAErL,KAAKkN,GAAGxC,EAAE,IAAIL,WAAWS,IAAK2C,IAAIzN,KAAK8K,EAAE4C,SAAS,EAAE5C,IAAKJ,EAAE1K,KAAK8K,EAAE4C,SAAS,EAAE5C,IAAI9K,KAAK8K,EAAE7I,OAAO6I,IAAI9K,KAAK8K,EAAE7I,OAAO6I,GAAGJ,EAAE1K,KAAK8K,GAAU9K,KAAKuK,OAAOG,C,EAA2D2E,EAAEnP,UAAU4N,EAAE,WAA4B,OAAjB9N,KAAK6N,GAAG7N,KAAKqM,IAAWrM,KAAKkM,EAAEjI,O,EAC9SoL,EAAEnP,UAAUmM,EAAE,WAAW,IAAI,IAAI3B,EAAE1K,KAAKsB,MAAMW,OAAOjC,KAAKiL,EAAEP,GAAG,CAAC,IAAoBK,EAAoBoB,EAApCrB,EAAE,IAAIiB,EAAEf,EAAEL,EAAEM,EAAEN,EAAMiB,EAAEjB,EAAErG,EAAEqG,EAAEsB,EAAEtB,EAAEuB,EAAEvB,EAAMyB,EAAEzB,EAAE0B,EAAErM,KAAKsB,MAAMgL,EAAEtM,KAAKiL,EAA0G,GAAxGH,EAAEsD,EAAE/B,EAAEC,KAAKxB,EAAEzG,EAAEgI,EAAEC,MAAM,KAAKxB,EAAEsD,GAAG,MAAMtD,EAAEzG,IAAID,EAAEmJ,MAAM,0BAA0BzC,EAAEsD,EAAE,IAAItD,EAAEzG,IAAIyG,EAAEH,EAAE0B,EAAEC,KAAsB,IAAVxB,EAAEH,QAAwBvG,EAAEmJ,MAAM,+BAA+BzC,EAAEH,IAA2I,GAAvIG,EAAEwB,EAAED,EAAEC,KAAKH,EAAEE,EAAEC,KAAKD,EAAEC,MAAM,EAAED,EAAEC,MAAM,GAAGD,EAAEC,MAAM,GAAGxB,EAAE6B,EAAE,IAAI2C,KAAK,IAAInD,GAAGrB,EAAEwC,EAAEjB,EAAEC,KAAKxB,EAAEmC,EAAEZ,EAAEC,KAAK,GAAO,EAAJxB,EAAEwB,KAAOxB,EAAEqD,EAAE9B,EAAEC,KAAKD,EAAEC,MAAM,EAAEA,GAAGxB,EAAEqD,GAAM,GAAO,EAAJrD,EAAEwB,GAAK,CAAM,IAALJ,EAAE,GAAOD,EAAE,EAAE,GAAG3H,EAAE+H,EAAEC,OAAOJ,EAAED,KAAKsD,OAAOC,aAAalL,GACvgBwG,EAAE9H,KAAKkJ,EAAEuD,KAAK,G,CAAI,GAAG,GAAO,GAAJ3E,EAAEwB,GAAM,CAAM,IAALJ,EAAE,GAAOD,EAAE,EAAE,GAAG3H,EAAE+H,EAAEC,OAAOJ,EAAED,KAAKsD,OAAOC,aAAalL,GAAGwG,EAAE+B,EAAEX,EAAEuD,KAAK,G,CAAI,GAAO,EAAJ3E,EAAEwB,KAAOxB,EAAEa,EAAW,MAATA,EAAEU,EAAE,EAAEC,GAASxB,EAAEa,KAAKU,EAAEC,KAAKD,EAAEC,MAAM,IAAIlI,EAAEmJ,MAAM,0BAA0BvC,EAAEqB,EAAEA,EAAEpK,OAAO,GAAGoK,EAAEA,EAAEpK,OAAO,IAAI,EAAEoK,EAAEA,EAAEpK,OAAO,IAAI,GAAGoK,EAAEA,EAAEpK,OAAO,IAAI,GAAGoK,EAAEpK,OAAOqK,EAAE,EAAE,EAAE,IAAItB,IAAIY,EAAEZ,GAAGC,EAAE,IAAI8B,EAAEV,EAAE,CAAC5K,MAAM6K,EAAEa,WAAWvB,IAAId,EAAE4B,KAAK3B,EAAEE,EAAEoB,IAAIC,EAAErB,EAAEA,EAAEH,EAAE8B,EAAER,GAAGC,EAAEC,KAAKD,EAAEC,MAAM,EAAED,EAAEC,MAAM,GAAGD,EAAEC,MAAM,MAAM,EAAEX,EAAEZ,EAAEJ,EAAEA,KAAKyB,GAAGhI,EAAEmJ,MAAM,8BAA8B5B,EAAEZ,EAAEJ,EAAEA,GAAGvF,SAAS,IAAI,QAAQgH,EAAEhH,SAAS,MAAM0F,EAAEiC,EACpf/B,GAAGqB,EAAEC,KAAKD,EAAEC,MAAM,EAAED,EAAEC,MAAM,GAAGD,EAAEC,MAAM,MAAM,GAAY,WAATvB,EAAE9I,UAAqB+I,GAAG5G,EAAEmJ,MAAM,wBAAiC,WAATxC,EAAE9I,QAAmB,MAAM+I,IAAIhL,KAAKkM,EAAEvK,KAAKmJ,GAAG9K,KAAKiL,EAAEqB,C,CAAEtM,KAAK6N,GAAE,EAAG,IAAaA,EAAEC,EAAUG,EAArB5J,EAAErE,KAAKkM,EAAMS,EAAE,EAAEO,EAAE,EAAQ,IAAJW,EAAE,EAAMC,EAAEzJ,EAAEpC,OAAO4L,EAAEC,IAAID,EAAEX,GAAG7I,EAAEwJ,GAAGnB,KAAKzK,OAAO,GAAGoJ,EAAuB,IAApB4C,EAAE,IAAI5D,WAAW6C,GAAOW,EAAE,EAAEA,EAAEC,IAAID,EAAEI,EAAER,IAAIpJ,EAAEwJ,GAAGnB,KAAKC,GAAGA,GAAGtI,EAAEwJ,GAAGnB,KAAKzK,WAAW,CAAM,IAALgM,EAAE,GAAOJ,EAAE,EAAEA,EAAEC,IAAID,EAAEI,EAAEJ,GAAGxJ,EAAEwJ,GAAGnB,KAAKuB,EAAExC,MAAMvL,UAAUwP,OAAOvG,MAAM,GAAG8E,E,CAAG,OAAOA,C,EAAGpD,EAAE,cAAcwE,GAAGxE,EAAE,mCAAmCwE,EAAEnP,UAAUmM,GAAGxB,EAAE,mCAAmCwE,EAAEnP,UAAU4N,GAAGjD,EAAE,oBAAoBkB,GAAGlB,EAAE,sCAAsCkB,EAAE7L,UAAUsM,SAAS3B,EAAE,sCAAsCkB,EAAE7L,UAAUuM,SAAS5B,EAAE,uCAAuCkB,EAAE7L,UAAU8L,EAAI,GAAE2D,KAAK/P,EAAAC,Q,iFCG5uB,SAAS+P,EAAiB3P,GACtBD,KAAKQ,IAAM,IAAIqP,EACf7P,KAAKC,SAAWA,C,CAGpB2P,EAAiB1P,UAAUoJ,gBAAkB,SAAUwG,EAAM1P,GACzD,MAAM,IAAImN,MAAM,uD,EAOpBqC,EAAiB1P,UAAUI,KAAO,SAAUyP,GACxC,IAAIvP,EAAMR,KAAKQ,IACXP,EAAWD,KAAKC,SAChBqJ,EAAkBtJ,KAAKsJ,gBAE3B0G,EAAAC,SAAe,CAEX,SAAU7P,GACN4P,EAAAE,IAAU,CAAE,cAAe,iBAAkB,SAAUC,EAAUC,GAC7D9G,EAAgB+G,EAAAZ,KAAUxP,EAAUkQ,IAAW,SAAU5P,EAAKgK,GAC1D,GAAGhK,EACC,OAAO6P,EAAU7P,GAErB6P,EAAU,KAAM7F,E,OAErB,SAAUhK,EAAK+P,GACd,GAAG/P,EACC,OAAOH,EAASG,GAEpB,IAAIgQ,EAAc,IAAIC,WAAWF,EAAQ,IACrCG,EAAe,IAAID,WAAWF,EAAQ,IAE1C9P,EAAIkQ,SAASH,EAAaE,GAC1BrQ,EAAS,K,KAIjB,SAAUA,GACN4P,EAAAE,IAAU,CAAE,aAAc,iBAAkB,mBAAoB,SAAUC,EAAUC,GAChF9G,EAAgB+G,EAAAZ,KAAUxP,EAAUkQ,IAAW,SAAU5P,EAAKgK,GAC1D,GAAGhK,EACC,OAAO6P,EAAU7P,GAErB6P,EAAU,KAAM7F,E,OAErB,SAAUhK,EAAK+P,GACd,GAAG/P,EACC,OAAOH,EAASG,GAEpB,IAAIoQ,EAAoB,IAAItG,WAAWiG,EAAQ,IAC3CM,EAAa,IAAIvG,WAAWiG,EAAQ,IACpCO,EAAoB,IAAIxG,WAAWiG,EAAQ,IAE/C9P,EAAIsQ,0BAA0BH,EAAmBC,EAAYC,GAC7DzQ,EAAS,K,KAIjB,SAAUA,GACNkJ,EAAgB+G,EAAAZ,KAAUxP,EAAU,cAAc,SAAUM,EAAKgK,GAC7D,GAAGhK,EACC,OAAOH,EAASG,GAEpB,IAAIwQ,EAAY,IAAIC,WAAWzG,GAC/B/J,EAAIyQ,oBAAoBF,GACxB3Q,EAAS,K,KAIjB,SAAUA,GACN4P,EAAAE,IAAU,CAAE,aAAc,iBAAkB,iBAAkB,kBAAmB,oBAAqB,sBAAuB,SAAUC,EAAUC,GAC7I9G,EAAgB+G,EAAAZ,KAAUxP,EAAUkQ,IAAW,SAAU5P,EAAKgK,GAC1D,GAAGhK,EACC,OAAO6P,EAAU7P,GAErB6P,EAAU,KAAM7F,E,OAErB,SAAUhK,EAAK+P,GACd,GAAG/P,EACC,OAAOH,EAASG,GAEpB,IAAI2Q,EAAa,IAAI7G,WAAWiG,EAAQ,IACpCa,EAAiB,IAAI9G,WAAWiG,EAAQ,IACxCc,EAAiB,IAAI/G,WAAWiG,EAAQ,IACxCe,EAAiB,IAAIhH,WAAWiG,EAAQ,IACxCgB,EAAwB,IAAI/F,YAAY+E,EAAQ,IAChDiB,EAAoB,IAAIlH,WAAWiG,EAAQ,IAE/C9P,EAAIgR,wBAAwBN,EAAYC,EAAgBC,EAAgBC,EAAgBC,EAAuBC,GAE/GnR,EAAS,K,OAGlB,SAAUG,GACTwP,EAAcxP,EAAKC,E,KAW3BZ,EAAAC,QAAiB+P,C,uDC9GjB,SAAS6B,EAAWC,GAClB,GAAoB,iBAATA,EACT,MAAM,IAAIC,UAAU,mCAAqCC,KAAKC,UAAUH,G,CAK5E,SAASI,EAAqBJ,EAAMK,GAMlC,IALA,IAIIC,EAJAC,EAAM,GACNC,EAAoB,EACpBC,GAAY,EACZC,EAAO,EAEFpQ,EAAI,EAAGA,GAAK0P,EAAKzP,SAAUD,EAAG,CACrC,GAAIA,EAAI0P,EAAKzP,OACX+P,EAAON,EAAKxK,WAAWlF,OACpB,IAAa,KAATgQ,EACP,MAEAA,EAAO,EAAE,CACX,GAAa,KAATA,EAAmB,CACrB,GAAIG,IAAcnQ,EAAI,GAAc,IAAToQ,QAEpB,GAAID,IAAcnQ,EAAI,GAAc,IAAToQ,EAAY,CAC5C,GAAIH,EAAIhQ,OAAS,GAA2B,IAAtBiQ,GAA8D,KAAnCD,EAAI/K,WAAW+K,EAAIhQ,OAAS,IAAsD,KAAnCgQ,EAAI/K,WAAW+K,EAAIhQ,OAAS,GAC1H,GAAIgQ,EAAIhQ,OAAS,EAAG,CAClB,IAAIoQ,EAAiBJ,EAAIK,YAAY,KACrC,GAAID,IAAmBJ,EAAIhQ,OAAS,EAAG,EACd,IAAnBoQ,GACFJ,EAAM,GACNC,EAAoB,GAGpBA,GADAD,EAAMA,EAAIhO,MAAM,EAAGoO,IACKpQ,OAAS,EAAIgQ,EAAIK,YAAY,KAEvDH,EAAYnQ,EACZoQ,EAAO,EACP,Q,OAEG,GAAmB,IAAfH,EAAIhQ,QAA+B,IAAfgQ,EAAIhQ,OAAc,CAC/CgQ,EAAM,GACNC,EAAoB,EACpBC,EAAYnQ,EACZoQ,EAAO,EACP,Q,CAGAL,IACEE,EAAIhQ,OAAS,EACfgQ,GAAO,MAEPA,EAAM,KACRC,EAAoB,E,MAGlBD,EAAIhQ,OAAS,EACfgQ,GAAO,IAAMP,EAAKzN,MAAMkO,EAAY,EAAGnQ,GAEvCiQ,EAAMP,EAAKzN,MAAMkO,EAAY,EAAGnQ,GAClCkQ,EAAoBlQ,EAAImQ,EAAY,EAEtCA,EAAYnQ,EACZoQ,EAAO,C,MACW,KAATJ,IAA8B,IAATI,IAC5BA,EAEFA,GAAO,C,CAGX,OAAOH,C,CAeT,IAAIM,EAAQ,CAEVC,QAAS,WAKP,IAJA,IAEIC,EAFAC,EAAe,GACfC,GAAmB,EAGd3Q,EAAI4Q,UAAU3Q,OAAS,EAAGD,IAAK,IAAO2Q,EAAkB3Q,IAAK,CACpE,IAAI0P,EACA1P,GAAK,EACP0P,EAAOkB,UAAU5Q,SAEL6Q,IAARJ,IACFA,EAAMK,EAAAL,OACRf,EAAOe,GAGThB,EAAWC,GAGS,IAAhBA,EAAKzP,SAITyQ,EAAehB,EAAO,IAAMgB,EAC5BC,EAA0C,KAAvBjB,EAAKxK,WAAW,G,CASrC,OAFAwL,EAAeZ,EAAqBY,GAAeC,GAE/CA,EACED,EAAazQ,OAAS,EACjB,IAAMyQ,EAEN,IACAA,EAAazQ,OAAS,EACxByQ,EAEA,G,EAIXK,UAAW,SAAmBrB,GAG5B,GAFAD,EAAWC,GAES,IAAhBA,EAAKzP,OAAc,MAAO,IAE9B,IAAI+Q,EAAoC,KAAvBtB,EAAKxK,WAAW,GAC7B+L,EAAyD,KAArCvB,EAAKxK,WAAWwK,EAAKzP,OAAS,GAQtD,OAHoB,KAFpByP,EAAOI,EAAqBJ,GAAOsB,IAE1B/Q,QAAiB+Q,IAAYtB,EAAO,KACzCA,EAAKzP,OAAS,GAAKgR,IAAmBvB,GAAQ,KAE9CsB,EAAmB,IAAMtB,EACtBA,C,EAGTsB,WAAY,SAAoBtB,GAE9B,OADAD,EAAWC,GACJA,EAAKzP,OAAS,GAA4B,KAAvByP,EAAKxK,WAAW,E,EAG5CuI,KAAM,WACJ,GAAyB,IAArBmD,UAAU3Q,OACZ,MAAO,IAET,IADA,IAAIiR,EACKlR,EAAI,EAAGA,EAAI4Q,UAAU3Q,SAAUD,EAAG,CACzC,IAAImR,EAAMP,UAAU5Q,GACpByP,EAAW0B,GACPA,EAAIlR,OAAS,SACA4Q,IAAXK,EACFA,EAASC,EAETD,GAAU,IAAMC,E,CAGtB,YAAeN,IAAXK,EACK,IACFX,EAAMQ,UAAUG,E,EAGzBE,SAAU,SAAkBC,EAAMC,GAIhC,GAHA7B,EAAW4B,GACX5B,EAAW6B,GAEPD,IAASC,EAAI,MAAO,GAKxB,IAHAD,EAAOd,EAAMC,QAAQa,OACrBC,EAAKf,EAAMC,QAAQc,IAEF,MAAO,GAIxB,IADA,IAAIC,EAAY,EACTA,EAAYF,EAAKpR,QACa,KAA/BoR,EAAKnM,WAAWqM,KADYA,GASlC,IALA,IAAIC,EAAUH,EAAKpR,OACfwR,EAAUD,EAAUD,EAGpBG,EAAU,EACPA,EAAUJ,EAAGrR,QACa,KAA3BqR,EAAGpM,WAAWwM,KADUA,GAW9B,IAPA,IACIC,EADQL,EAAGrR,OACKyR,EAGhBzR,EAASwR,EAAUE,EAAQF,EAAUE,EACrCC,GAAgB,EAChB5R,EAAI,EACDA,GAAKC,IAAUD,EAAG,CACvB,GAAIA,IAAMC,EAAQ,CAChB,GAAI0R,EAAQ1R,EAAQ,CAClB,GAAmC,KAA/BqR,EAAGpM,WAAWwM,EAAU1R,GAG1B,OAAOsR,EAAGrP,MAAMyP,EAAU1R,EAAI,GACzB,GAAU,IAANA,EAGT,OAAOsR,EAAGrP,MAAMyP,EAAU1R,E,MAEnByR,EAAUxR,IACoB,KAAnCoR,EAAKnM,WAAWqM,EAAYvR,GAG9B4R,EAAgB5R,EACD,IAANA,IAGT4R,EAAgB,IAGpB,K,CAEF,IAAIC,EAAWR,EAAKnM,WAAWqM,EAAYvR,GAE3C,GAAI6R,IADSP,EAAGpM,WAAWwM,EAAU1R,GAEnC,MACoB,KAAb6R,IACPD,EAAgB5R,E,CAGpB,IAAI8R,EAAM,GAGV,IAAK9R,EAAIuR,EAAYK,EAAgB,EAAG5R,GAAKwR,IAAWxR,EAClDA,IAAMwR,GAAkC,KAAvBH,EAAKnM,WAAWlF,KAChB,IAAf8R,EAAI7R,OACN6R,GAAO,KAEPA,GAAO,OAMb,OAAIA,EAAI7R,OAAS,EACR6R,EAAMR,EAAGrP,MAAMyP,EAAUE,IAEhCF,GAAWE,EACoB,KAA3BN,EAAGpM,WAAWwM,MACdA,EACGJ,EAAGrP,MAAMyP,G,EAIpBK,UAAW,SAAmBrC,GAC5B,OAAOA,C,EAGTsC,QAAS,SAAiBtC,GAExB,GADAD,EAAWC,GACS,IAAhBA,EAAKzP,OAAc,MAAO,IAK9B,IAJA,IAAI+P,EAAON,EAAKxK,WAAW,GACvB+M,EAAmB,KAATjC,EACVkC,GAAM,EACNC,GAAe,EACVnS,EAAI0P,EAAKzP,OAAS,EAAGD,GAAK,IAAKA,EAEtC,GAAa,MADbgQ,EAAON,EAAKxK,WAAWlF,KAEnB,IAAKmS,EAAc,CACjBD,EAAMlS,EACN,K,OAIJmS,GAAe,EAInB,OAAY,IAARD,EAAmBD,EAAU,IAAM,IACnCA,GAAmB,IAARC,EAAkB,KAC1BxC,EAAKzN,MAAM,EAAGiQ,E,EAGvBE,SAAU,SAAkB1C,EAAM2C,GAChC,QAAYxB,IAARwB,GAAoC,iBAARA,EAAkB,MAAM,IAAI1C,UAAU,mCACtEF,EAAWC,GAEX,IAGI1P,EAHAsS,EAAQ,EACRJ,GAAM,EACNC,GAAe,EAGnB,QAAYtB,IAARwB,GAAqBA,EAAIpS,OAAS,GAAKoS,EAAIpS,QAAUyP,EAAKzP,OAAQ,CACpE,GAAIoS,EAAIpS,SAAWyP,EAAKzP,QAAUoS,IAAQ3C,EAAM,MAAO,GACvD,IAAI6C,EAASF,EAAIpS,OAAS,EACtBuS,GAAmB,EACvB,IAAKxS,EAAI0P,EAAKzP,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACrC,IAAIgQ,EAAON,EAAKxK,WAAWlF,GAC3B,GAAa,KAATgQ,GAGA,IAAKmC,EAAc,CACjBG,EAAQtS,EAAI,EACZ,K,OAGqB,IAArBwS,IAGFL,GAAe,EACfK,EAAmBxS,EAAI,GAErBuS,GAAU,IAERvC,IAASqC,EAAInN,WAAWqN,IACT,KAAXA,IAGJL,EAAMlS,IAKRuS,GAAS,EACTL,EAAMM,G,CAOd,OADIF,IAAUJ,EAAKA,EAAMM,GAAkC,IAARN,IAAYA,EAAMxC,EAAKzP,QACnEyP,EAAKzN,MAAMqQ,EAAOJ,E,CAEzB,IAAKlS,EAAI0P,EAAKzP,OAAS,EAAGD,GAAK,IAAKA,EAClC,GAA2B,KAAvB0P,EAAKxK,WAAWlF,IAGhB,IAAKmS,EAAc,CACjBG,EAAQtS,EAAI,EACZ,K,OAEe,IAARkS,IAGXC,GAAe,EACfD,EAAMlS,EAAI,GAId,OAAY,IAARkS,EAAmB,GAChBxC,EAAKzN,MAAMqQ,EAAOJ,E,EAI7BO,QAAS,SAAiB/C,GACxBD,EAAWC,GAQX,IAPA,IAAIgD,GAAW,EACXC,EAAY,EACZT,GAAM,EACNC,GAAe,EAGfS,EAAc,EACT5S,EAAI0P,EAAKzP,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACzC,IAAIgQ,EAAON,EAAKxK,WAAWlF,GAC3B,GAAa,KAATgQ,GASQ,IAARkC,IAGFC,GAAe,EACfD,EAAMlS,EAAI,GAEC,KAATgQ,GAEiB,IAAb0C,EACFA,EAAW1S,EACY,IAAhB4S,IACPA,EAAc,IACI,IAAbF,IAGTE,GAAc,QArBZ,IAAKT,EAAc,CACjBQ,EAAY3S,EAAI,EAChB,K,EAuBR,OAAiB,IAAb0S,IAA2B,IAARR,GAEH,IAAhBU,GAEgB,IAAhBA,GAAqBF,IAAaR,EAAM,GAAKQ,IAAaC,EAAY,EACjE,GAEFjD,EAAKzN,MAAMyQ,EAAUR,E,EAG9BW,OAAQ,SAAgBC,GACtB,GAAmB,OAAfA,GAA6C,iBAAfA,EAChC,MAAM,IAAInD,UAAU,0EAA4EmD,GAElG,OAvVJ,SAAiBC,EAAKD,GACpB,IAAIE,EAAMF,EAAWE,KAAOF,EAAWG,KACnCC,EAAOJ,EAAWI,OAASJ,EAAW9R,MAAQ,KAAO8R,EAAWT,KAAO,IAC3E,OAAKW,EAGDA,IAAQF,EAAWG,KACdD,EAAME,EAERF,EAAMD,EAAMG,EALVA,C,CAmVAC,CAAQ,IAAKL,E,EAGtBM,MAAO,SAAe1D,GACpBD,EAAWC,GAEX,IAAI2D,EAAM,CAAEJ,KAAM,GAAID,IAAK,GAAIE,KAAM,GAAIb,IAAK,GAAIrR,KAAM,IACxD,GAAoB,IAAhB0O,EAAKzP,OAAc,OAAOoT,EAC9B,IAEIf,EAFAtC,EAAON,EAAKxK,WAAW,GACvB8L,EAAsB,KAAThB,EAEbgB,GACFqC,EAAIJ,KAAO,IACXX,EAAQ,GAERA,EAAQ,EAaV,IAXA,IAAII,GAAW,EACXC,EAAY,EACZT,GAAM,EACNC,GAAe,EACfnS,EAAI0P,EAAKzP,OAAS,EAIlB2S,EAAc,EAGX5S,GAAKsS,IAAStS,EAEnB,GAAa,MADbgQ,EAAON,EAAKxK,WAAWlF,KAUX,IAARkS,IAGFC,GAAe,EACfD,EAAMlS,EAAI,GAEC,KAATgQ,GAEiB,IAAb0C,EAAiBA,EAAW1S,EAA2B,IAAhB4S,IAAmBA,EAAc,IACtD,IAAbF,IAGXE,GAAc,QAlBZ,IAAKT,EAAc,CACjBQ,EAAY3S,EAAI,EAChB,K,CAyCR,OArBiB,IAAb0S,IAA2B,IAARR,GAEP,IAAhBU,GAEgB,IAAhBA,GAAqBF,IAAaR,EAAM,GAAKQ,IAAaC,EAAY,GACxD,IAART,IACiCmB,EAAIH,KAAOG,EAAIrS,KAAhC,IAAd2R,GAAmB3B,EAAkCtB,EAAKzN,MAAM,EAAGiQ,GAAgCxC,EAAKzN,MAAM0Q,EAAWT,KAG7G,IAAdS,GAAmB3B,GACrBqC,EAAIrS,KAAO0O,EAAKzN,MAAM,EAAGyQ,GACzBW,EAAIH,KAAOxD,EAAKzN,MAAM,EAAGiQ,KAEzBmB,EAAIrS,KAAO0O,EAAKzN,MAAM0Q,EAAWD,GACjCW,EAAIH,KAAOxD,EAAKzN,MAAM0Q,EAAWT,IAEnCmB,EAAIhB,IAAM3C,EAAKzN,MAAMyQ,EAAUR,IAG7BS,EAAY,EAAGU,EAAIL,IAAMtD,EAAKzN,MAAM,EAAG0Q,EAAY,GAAY3B,IAAYqC,EAAIL,IAAM,KAElFK,C,EAGTN,IAAK,IACLO,UAAW,IACXC,MAAO,KACPC,MAAO,MAGTjD,EAAMiD,MAAQjD,EAEd3S,EAAAC,QAAiB0S,C,sCC/gBjB,IAOIkD,EACAC,EARAC,EAAU/V,EAAAC,QAAiB,GAU/B,SAAS+V,IACL,MAAM,IAAIrI,MAAM,kC,CAEpB,SAASsI,IACL,MAAM,IAAItI,MAAM,oC,CAsBpB,SAASuI,EAAWC,GAChB,GAAIN,IAAqBO,WAErB,OAAOA,WAAWD,EAAK,GAG3B,IAAKN,IAAqBG,IAAqBH,IAAqBO,WAEhE,OADAP,EAAmBO,WACZA,WAAWD,EAAK,GAE3B,IAEI,OAAON,EAAiBM,EAAK,E,CAC/B,MAAMrL,GACJ,IAEI,OAAO+K,EAAiB9F,KAAK,KAAMoG,EAAK,E,CAC1C,MAAME,GAEJ,OAAOR,EAAiB9F,KAAK3P,KAAM+V,EAAK,E,IAvCnD,WACG,IAEQN,EADsB,mBAAfO,WACYA,WAEAJ,C,CAEzB,MAAOlL,GACL+K,EAAmBG,C,CAEvB,IAEQF,EADwB,mBAAjBQ,aACcA,aAEAL,C,CAE3B,MAAOI,GACLP,EAAqBG,C,CAE5B,CAnBA,GAwED,IAEIM,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAa,EAEjB,SAASC,IACAF,GAAaF,IAGlBE,GAAW,EACPF,EAAalU,OACbmU,EAAQD,EAAazG,OAAO0G,GAE5BE,GAAa,EAEbF,EAAMnU,QACNuU,I,CAIR,SAASA,IACL,IAAIH,EAAJ,CAGA,IAAII,EAAUX,EAAWS,GACzBF,GAAW,EAGX,IADA,IAAIK,EAAMN,EAAMnU,OACVyU,GAAK,CAGP,IAFAP,EAAeC,EACfA,EAAQ,KACCE,EAAaI,GACdP,GACAA,EAAaG,GAAYK,MAGjCL,GAAa,EACbI,EAAMN,EAAMnU,M,CAEhBkU,EAAe,KACfE,GAAW,EAnEf,SAAyBO,GACrB,GAAIlB,IAAuBQ,aAEvB,OAAOA,aAAaU,GAGxB,IAAKlB,IAAuBG,IAAwBH,IAAuBQ,aAEvE,OADAR,EAAqBQ,aACdA,aAAaU,GAExB,IAEWlB,EAAmBkB,E,CAC5B,MAAOlM,GACL,IAEI,OAAOgL,EAAmB/F,KAAK,KAAMiH,E,CACvC,MAAOX,GAGL,OAAOP,EAAmB/F,KAAK3P,KAAM4W,E,GAgD7CC,CAAgBJ,EAnBZ,C,CAoCR,SAASK,EAAKf,EAAKgB,GACf/W,KAAK+V,IAAMA,EACX/V,KAAK+W,MAAQA,C,CAYjB,SAASC,IAAO,CA5BhBrB,EAAQsB,SAAW,SAAUlB,GACzB,IAAImB,EAAO,IAAIzL,MAAMmH,UAAU3Q,OAAS,GACxC,GAAI2Q,UAAU3Q,OAAS,EACnB,IAAK,IAAID,EAAI,EAAGA,EAAI4Q,UAAU3Q,OAAQD,IAClCkV,EAAKlV,EAAI,GAAK4Q,UAAU5Q,GAGhCoU,EAAMzU,KAAK,IAAImV,EAAKf,EAAKmB,IACJ,IAAjBd,EAAMnU,QAAiBoU,GACvBP,EAAWU,E,EASnBM,EAAK5W,UAAUyW,IAAM,WACjB3W,KAAK+V,IAAI5M,MAAM,KAAMnJ,KAAK+W,M,EAE9BpB,EAAQwB,MAAQ,UAChBxB,EAAQyB,SAAU,EAClBzB,EAAQ0B,IAAM,GACd1B,EAAQ2B,KAAO,GACf3B,EAAQ4B,QAAU,GAClB5B,EAAQ6B,SAAW,GAInB7B,EAAQ8B,GAAKT,EACbrB,EAAQ+B,YAAcV,EACtBrB,EAAQgC,KAAOX,EACfrB,EAAQiC,IAAMZ,EACdrB,EAAQkC,eAAiBb,EACzBrB,EAAQmC,mBAAqBd,EAC7BrB,EAAQoC,KAAOf,EACfrB,EAAQqC,gBAAkBhB,EAC1BrB,EAAQsC,oBAAsBjB,EAE9BrB,EAAQuC,UAAY,SAAUlV,GAAQ,MAAO,E,EAE7C2S,EAAQwC,QAAU,SAAUnV,GACxB,MAAM,IAAIuK,MAAM,mC,EAGpBoI,EAAQlD,IAAM,WAAc,MAAO,G,EACnCkD,EAAQyC,MAAQ,SAAUpD,GACtB,MAAM,IAAIzH,MAAM,iC,EAEpBoI,EAAQ0C,MAAQ,WAAa,OAAO,C,uCCvLpC,IAAAvF,EAAAwF,EAAA,UAIS,SAAUC,GAEnB,SAAStU,EAAMuU,EAAWlE,GACtBA,GAAc,EAGd,IAFA,IAAImE,EAASC,KAAKC,IAAIH,EAAUvW,OAASqS,EAAO,GAC5CsE,EAASnN,MAAMgN,GACXI,EAAM,EAAGA,EAAMJ,EAAQI,IAC3BD,EAAOC,GAAOL,EAAUlE,EAAQuE,GAEpC,OAAOD,C,CAgDX,IAAIzP,EAAQ,SAAS2P,GACjB,IAAI5B,EAAOjT,EAAM2O,UAAW,GAC5B,OAAO,WACH,IAAImG,EAAW9U,EAAM2O,WACrB,OAAOkG,EAAG3P,MAAM,KAAM+N,EAAKxH,OAAOqJ,G,GAItCC,EAAgB,SAAUF,GAC1B,OAAO,WACH,IAAI5B,EAAOjT,EAAM2O,WACbxS,EAAW8W,EAAK+B,MACpBH,EAAGnJ,KAAK3P,KAAMkX,EAAM9W,E,GA6B5B,SAAS8Y,EAASC,GAChB,IAAIrW,SAAcqW,EAClB,OAAgB,MAATA,IAA0B,UAARrW,GAA4B,YAARA,E,CAG/C,IAAIsW,EAA0C,mBAAjBC,cAA+BA,aACxDC,EAAiC,iBAAZxG,GAAoD,mBAArBA,EAAQmE,SAEhE,SAASsC,EAAST,GACd9C,WAAW8C,EAAI,E,CAGnB,SAASU,EAAKC,GACV,OAAO,SAAUX,GACb,IAAI5B,EAAOjT,EAAM2O,UAAW,GAC5B6G,GAAM,WACFX,EAAG3P,MAAM,KAAM+N,E,KAe3B,IAAIwC,EAAiBF,EARjBJ,EACSC,aACFC,EACExG,EAAQmE,SAERsC,GA6Db,SAASI,EAASC,GACd,OAAOZ,GAAc,SAAU9B,EAAM9W,GACjC,IAAIyZ,EACJ,IACIA,EAASD,EAAKzQ,MAAMnJ,KAAMkX,E,CAC5B,MAAOxM,GACL,OAAOtK,EAASsK,E,CAGhBwO,EAASW,IAAkC,mBAAhBA,EAAOC,KAClCD,EAAOC,MAAK,SAASX,GACjBY,EAAe3Z,EAAU,KAAM+Y,E,IAChC,SAAS5Y,GACRwZ,EAAe3Z,EAAUG,EAAIyZ,QAAUzZ,EAAM,IAAIgN,MAAMhN,G,IAG3DH,EAAS,KAAMyZ,E,IAK3B,SAASE,EAAe3Z,EAAU6Z,EAAOd,GACrC,IACI/Y,EAAS6Z,EAAOd,E,CAClB,MAAOzO,GACLgP,EAAeQ,EAASxP,E,EAIhC,SAASwP,EAAQD,GACb,MAAMA,C,CAGV,IAAIE,EAAmC,mBAAXC,OAE5B,SAASC,EAAQvB,GACb,OAAOqB,GAA6C,kBAA3BrB,EAAGsB,OAAOE,Y,CAGvC,SAASC,EAAUC,GACf,OAAOH,EAAQG,GAAWb,EAASa,GAAWA,C,CAGlD,SAASC,EAAYC,GACjB,OAAO,SAASC,GACZ,IAAIzD,EAAOjT,EAAM2O,UAAW,GACxBgI,EAAK5B,GAAc,SAAS9B,EAAM9W,GAClC,IAAIya,EAAO7a,KACX,OAAO0a,EAAOC,GAAK,SAAU7B,EAAIgC,GAC7BP,EAAUzB,GAAI3P,MAAM0R,EAAM3D,EAAKxH,OAAOoL,G,GACvC1a,E,IAEP,OAAI8W,EAAKjV,OACE2Y,EAAGzR,MAAMnJ,KAAMkX,GAGf0D,C,EAMnB,IAAIG,EAA8B,iBAAVC,GAAsBA,GAAUA,EAAO5R,SAAWA,QAAU4R,EAGhFC,EAA0B,iBAARC,MAAoBA,MAAQA,KAAK9R,SAAWA,QAAU8R,KAGxEjG,EAAO8F,GAAcE,GAAYE,SAAS,cAATA,GAGjCC,EAAWnG,EAAKmF,OAGhBiB,EAAcjS,OAAOlJ,UAGrBob,EAAiBD,EAAYC,eAO7BC,EAAuBF,EAAYjW,SAGnCoW,EAAmBJ,EAAWA,EAASd,iBAAczH,EASzD,SAAS4I,EAAUtC,GACjB,IAAIuC,EAAQJ,EAAe3L,KAAKwJ,EAAOqC,GACnCG,EAAMxC,EAAMqC,GAEhB,IACErC,EAAMqC,QAAoB3I,EAC1B,IAAI+I,GAAW,CACL,CAAV,MAAOlR,GAAG,CAEZ,IAAImP,EAAS0B,EAAqB5L,KAAKwJ,GAQvC,OAPIyC,IACEF,EACFvC,EAAMqC,GAAoBG,SAEnBxC,EAAMqC,IAGV3B,C,CAIT,IAOIgC,EAPgBzS,OAAOlJ,UAOgBkF,SAS3C,SAAS0W,EAAe3C,GACtB,OAAO0C,EAAuBlM,KAAKwJ,E,CAIrC,IAAI4C,EAAU,gBACVC,EAAe,qBAGfC,EAAiBb,EAAWA,EAASd,iBAAczH,EASvD,SAASqJ,EAAW/C,GAClB,OAAa,MAATA,OACetG,IAAVsG,EAAsB6C,EAAeD,EAEvCE,GAAmBA,KAAkB7S,OAAO+P,GAC/CsC,EAAUtC,GACV2C,EAAe3C,E,CAIrB,IAAIgD,EAAW,yBACXC,EAAU,oBACVC,EAAS,6BACTC,EAAW,iBAmBf,SAASC,EAAWpD,GAClB,IAAKD,EAASC,GACZ,OAAO,EAIT,IAAIwC,EAAMO,EAAW/C,GACrB,OAAOwC,GAAOS,GAAWT,GAAOU,GAAUV,GAAOQ,GAAYR,GAAOW,C,CAItE,IAAIE,EAAmB,iBA4BvB,SAASC,EAAStD,GAChB,MAAuB,iBAATA,GACZA,GAAQ,GAAMA,EAAQ,GAAK,GAAKA,GAASqD,C,CA4B7C,SAASE,EAAYvD,GACnB,OAAgB,MAATA,GAAiBsD,EAAStD,EAAMlX,UAAYsa,EAAWpD,E,CAKhE,IAAIwD,EAAY,GAchB,SAASC,I,CAIT,SAASjF,EAAKmB,GACV,OAAO,WACH,GAAW,OAAPA,EAAJ,CACA,IAAI+D,EAAS/D,EACbA,EAAK,KACL+D,EAAO1T,MAAMnJ,KAAM4S,UAHF,C,EAOzB,IAAIkK,EAAmC,mBAAX1C,QAAyBA,OAAO2C,SAExDC,EAAc,SAAUC,GACxB,OAAOH,GAAkBG,EAAKH,IAAmBG,EAAKH,I,EAY1D,SAASI,EAAU9Y,EAAG+Y,GAIpB,IAHA,IAAI1b,GAAQ,EACRoY,EAASpO,MAAMrH,KAEV3C,EAAQ2C,GACfyV,EAAOpY,GAAS0b,EAAS1b,GAE3B,OAAOoY,C,CA2BT,SAASuD,EAAajE,GACpB,OAAgB,MAATA,GAAiC,iBAATA,C,CAIjC,IAAIkE,EAAU,qBASd,SAASC,EAAgBnE,GACvB,OAAOiE,EAAajE,IAAU+C,EAAW/C,IAAUkE,C,CAIrD,IAAIE,EAAgBnU,OAAOlJ,UAGvBsd,EAAmBD,EAAcjC,eAGjCmC,GAAuBF,EAAcE,qBAoBrCC,GAAcJ,EAAgB,WAAa,OAAO1K,S,CAApB,IAAsC0K,EAAkB,SAASnE,GACjG,OAAOiE,EAAajE,IAAUqE,EAAiB7N,KAAKwJ,EAAO,YACxDsE,GAAqB9N,KAAKwJ,EAAO,S,EA0BlCwE,GAAUlS,MAAMkS,QAepB,SAASC,KACP,OAAO,C,CAIT,IAAIC,GAAgC,iBAAXtF,GAAuBA,IAAYA,EAAQuF,UAAYvF,EAG5EwF,GAAaF,IAA4Cje,IAAWA,EAAOke,UAAYle,EAMvFoe,GAHgBD,IAAcA,GAAWle,UAAYge,GAG5B5I,EAAK+I,YAASnL,EAsBvCoL,IAnBiBD,GAASA,GAAOC,cAAWpL,IAmBf+K,GAG7BM,GAAqB,iBAGrBC,GAAQ,mBAUZ,SAASC,GAAQjF,EAAOlX,GACtB,IAAIa,SAAcqW,EAGlB,SAFAlX,EAAmB,MAAVA,EAAiBic,GAAqBjc,KAGpC,UAARa,GACU,UAARA,GAAoBqb,GAASE,KAAKlF,KAChCA,GAAQ,GAAMA,EAAQ,GAAK,GAAKA,EAAQlX,C,CAIjD,IAAIqc,GAAY,qBACZC,GAAW,iBACXC,GAAU,mBACVC,GAAU,gBACVC,GAAW,iBACXC,GAAY,oBACZC,GAAS,eACTC,GAAY,kBACZC,GAAY,kBACZC,GAAY,kBACZC,GAAS,eACTC,GAAY,kBACZC,GAAa,mBAEbC,GAAiB,uBACjBC,GAAc,oBAEdC,GAAa,wBACbC,GAAU,qBACVC,GAAW,sBACXC,GAAW,sBACXC,GAAW,sBACXC,GAAkB,6BAClBC,GAAY,uBACZC,GAAY,uBAGZC,GAAiB,GAsBrB,SAASC,GAAiB3G,GACxB,OAAOiE,EAAajE,IAClBsD,EAAStD,EAAMlX,WAAa4d,GAAe3D,EAAW/C,G,CAU1D,SAAS4G,GAAUnG,GACjB,OAAO,SAAST,GACd,OAAOS,EAAKT,E,EAnChB0G,GAZiB,yBAYYA,GAAeR,IAC5CQ,GAAeP,IAAWO,GAAeN,IACzCM,GAAeL,IAAYK,GAAeJ,IAC1CI,GAAeH,IAAmBG,GAAeF,IACjDE,GAAeD,KAAa,EAC5BC,GAAevB,IAAauB,GAAetB,IAC3CsB,GAAeV,IAAkBU,GAAerB,IAChDqB,GAAeT,IAAeS,GAAepB,IAC7CoB,GAAenB,IAAYmB,GAAelB,IAC1CkB,GAAejB,IAAUiB,GAAehB,IACxCgB,GAAef,IAAae,GAAed,IAC3Cc,GAAeb,IAAUa,GAAeZ,IACxCY,GAAeX,KAAc,EA4B7B,IAAIc,GAAkC,iBAAXzH,GAAuBA,IAAYA,EAAQuF,UAAYvF,EAG9E0H,GAAeD,IAA8CpgB,IAAWA,EAAOke,UAAYle,EAM3FsgB,GAHkBD,IAAgBA,GAAapgB,UAAYmgB,IAG1BjF,EAAWoF,QAG5CC,GAAY,WACd,IAEE,IAAIC,EAAQJ,IAAgBA,GAAaK,SAAWL,GAAaK,QAAQ,QAAQD,MAEjF,OAAIA,GAKGH,IAAeA,GAAY/H,SAAW+H,GAAY/H,QAAQ,OACvD,CAAV,MAAOzN,GAAG,C,CAXE,GAeZ6V,GAAmBH,IAAYA,GAASI,aAmBxCA,GAAeD,GAAmBR,GAAUQ,IAAoBT,GAMhEW,GAHgBrX,OAAOlJ,UAGUob,eAUrC,SAASoF,GAAcvH,EAAOwH,GAC5B,IAAIC,EAAQjD,GAAQxE,GAChB0H,GAASD,GAASlD,GAAYvE,GAC9B2H,GAAUF,IAAUC,GAAS5C,GAAS9E,GACtC4H,GAAUH,IAAUC,IAAUC,GAAUN,GAAarH,GACrD6H,EAAcJ,GAASC,GAASC,GAAUC,EAC1ClH,EAASmH,EAAc9D,EAAU/D,EAAMlX,OAAQsN,QAAU,GACzDtN,EAAS4X,EAAO5X,OAEpB,IAAK,IAAIwB,KAAO0V,GACTwH,IAAaF,GAAiB9Q,KAAKwJ,EAAO1V,IACzCud,IAEQ,UAAPvd,GAECqd,IAAkB,UAAPrd,GAA0B,UAAPA,IAE9Bsd,IAAkB,UAAPtd,GAA0B,cAAPA,GAA8B,cAAPA,IAEtD2a,GAAQ3a,EAAKxB,KAElB4X,EAAOlY,KAAK8B,GAGhB,OAAOoW,C,CAIT,IAAIoH,GAAgB7X,OAAOlJ,UAS3B,SAASghB,GAAY/H,GACnB,IAAIgI,EAAOhI,GAASA,EAAMiI,YAG1B,OAAOjI,KAFqB,mBAARgI,GAAsBA,EAAKjhB,WAAc+gB,G,CAa/D,SAASI,GAAQzH,EAAM0H,GACrB,OAAO,SAASnO,GACd,OAAOyG,EAAK0H,EAAUnO,G,EAK1B,IAAIoO,GAAaF,GAAQjY,OAAOoY,KAAMpY,QAMlCqY,GAHgBrY,OAAOlJ,UAGUob,eASrC,SAASoG,GAASC,GAChB,IAAKT,GAAYS,GACf,OAAOJ,GAAWI,GAEpB,IAAI9H,EAAS,GACb,IAAK,IAAIpW,KAAO2F,OAAOuY,GACjBF,GAAiB9R,KAAKgS,EAAQle,IAAe,eAAPA,GACxCoW,EAAOlY,KAAK8B,GAGhB,OAAOoW,C,CA+BT,SAAS2H,GAAKG,GACZ,OAAOjF,EAAYiF,GAAUjB,GAAciB,GAAUD,GAASC,E,CAGhE,SAASC,GAAoB3E,GACzB,IAAIjb,GAAI,EACJ0U,EAAMuG,EAAKhb,OACf,OAAO,WACH,QAASD,EAAI0U,EAAM,CAACyC,MAAO8D,EAAKjb,GAAIyB,IAAKzB,GAAK,I,EAItD,SAAS6f,GAAqB9E,GAC1B,IAAI/a,GAAI,EACR,OAAO,WACH,IAAI8f,EAAO/E,EAASgF,OACpB,OAAID,EAAKE,KACE,MACXhgB,IACO,CAACmX,MAAO2I,EAAK3I,MAAO1V,IAAKzB,G,EAIxC,SAASigB,GAAqBC,GAC1B,IAAIC,EAAQX,GAAKU,GACblgB,GAAI,EACJ0U,EAAMyL,EAAMlgB,OAChB,OAAO,SAAS8f,IACZ,IAAIte,EAAM0e,IAAQngB,GAClB,MAAY,cAARyB,EACOse,IAEJ/f,EAAI0U,EAAM,CAACyC,MAAO+I,EAAIze,GAAMA,IAAKA,GAAO,I,EAIvD,SAASsZ,GAASE,GACd,GAAIP,EAAYO,GACZ,OAAO2E,GAAoB3E,GAG/B,IAAIF,EAAWC,EAAYC,GAC3B,OAAOF,EAAW8E,GAAqB9E,GAAYkF,GAAqBhF,E,CAG5E,SAASmF,GAAStJ,GACd,OAAO,WACH,GAAW,OAAPA,EAAa,MAAM,IAAIvL,MAAM,gCACjC,IAAIsP,EAAS/D,EACbA,EAAK,KACL+D,EAAO1T,MAAMnJ,KAAM4S,U,EAI3B,SAASyP,GAAaC,GAClB,OAAO,SAAUJ,EAAK/E,EAAU/c,GAE5B,GADAA,EAAWuX,EAAKvX,GAAYwc,GACxB0F,GAAS,IAAMJ,EACf,OAAO9hB,EAAS,MAEpB,IAAImiB,EAAWxF,GAASmF,GACpBF,GAAO,EACPQ,EAAU,EACVC,GAAU,EAEd,SAASC,EAAiBniB,EAAK4Y,GAE3B,GADAqJ,GAAW,EACPjiB,EACAyhB,GAAO,EACP5hB,EAASG,OAER,IAAI4Y,IAAUwD,GAAcqF,GAAQQ,GAAW,EAEhD,OADAR,GAAO,EACA5hB,EAAS,MAEVqiB,GACNE,GAAW,C,CAInB,SAASA,IAEL,IADAF,GAAU,EACHD,EAAUF,IAAUN,GAAM,CAC7B,IAAIY,EAAOL,IACX,GAAa,OAATK,EAKA,OAJAZ,GAAO,OACHQ,GAAW,GACXpiB,EAAS,OAIjBoiB,GAAW,EACXrF,EAASyF,EAAKzJ,MAAOyJ,EAAKnf,IAAK2e,GAASM,G,CAE5CD,GAAU,C,CAGdE,G,EAwBR,SAASE,GAAY5F,EAAMqF,EAAOnF,EAAU/c,GACxCiiB,GAAaC,EAAbD,CAAoBpF,EAAM1C,EAAU4C,GAAW/c,E,CAGnD,SAAS0iB,GAAQhK,EAAIwJ,GACjB,OAAO,SAAUS,EAAU5F,EAAU/c,GACjC,OAAO0Y,EAAGiK,EAAUT,EAAOnF,EAAU/c,E,EAK7C,SAAS4iB,GAAgB/F,EAAME,EAAU/c,GACrCA,EAAWuX,EAAKvX,GAAYwc,GAC5B,IAAInb,EAAQ,EACRwhB,EAAY,EACZhhB,EAASgb,EAAKhb,OAKlB,SAASihB,EAAiB3iB,EAAK4Y,GACvB5Y,EACAH,EAASG,KACC0iB,IAAchhB,GAAWkX,IAAUwD,GAC7Cvc,EAAS,K,CAIjB,IAZe,IAAX6B,GACA7B,EAAS,MAWNqB,EAAQQ,EAAQR,IACnB0b,EAASF,EAAKxb,GAAQA,EAAO2gB,GAASc,G,CAK9C,IAAIC,GAAgBL,GAAQD,GAAaO,KAyCrCC,GAAS,SAASpG,EAAME,EAAU/c,IACPsc,EAAYO,GAAQ+F,GAAkBG,IAC5ClG,EAAM1C,EAAU4C,GAAW/c,E,EAGpD,SAASkjB,GAAWxK,GAChB,OAAO,SAAUoJ,EAAK/E,EAAU/c,GAC5B,OAAO0Y,EAAGuK,GAAQnB,EAAK3H,EAAU4C,GAAW/c,E,EAIpD,SAASmjB,GAAU7I,EAAQ8I,EAAKrG,EAAU/c,GACtCA,EAAWA,GAAYwc,EACvB4G,EAAMA,GAAO,GACb,IAAIC,EAAU,GACVC,EAAU,EACVC,EAAYpJ,EAAU4C,GAE1BzC,EAAO8I,GAAK,SAAUrK,EAAOyK,EAAGxjB,GAC5B,IAAIqB,EAAQiiB,IACZC,EAAUxK,GAAO,SAAU5Y,EAAK8D,GAC5Bof,EAAQhiB,GAAS4C,EACjBjE,EAASG,E,OAEd,SAAUA,GACTH,EAASG,EAAKkjB,E,IAwCtB,IAAIvT,GAAMoT,GAAWC,IAmCjBM,GAAYpJ,EAAYvK,IAE5B,SAAS4T,GAAgBhL,GACrB,OAAO,SAAUoJ,EAAKI,EAAOnF,EAAU/c,GACnC,OAAO0Y,EAAGuJ,GAAaC,GAAQJ,EAAK3H,EAAU4C,GAAW/c,E,EAuBjE,IAAI2jB,GAAWD,GAAgBP,IAoB3BS,GAAYlB,GAAQiB,GAAU,GAqB9BE,GAAkBxJ,EAAYuJ,IAWlC,SAASE,GAAUnN,EAAOoG,GAIxB,IAHA,IAAI1b,GAAQ,EACRQ,EAAkB,MAAT8U,EAAgB,EAAIA,EAAM9U,SAE9BR,EAAQQ,IAC8B,IAAzCkb,EAASpG,EAAMtV,GAAQA,EAAOsV,KAIpC,OAAOA,C,CAUT,SAASoN,GAAcC,GACrB,OAAO,SAASzC,EAAQxE,EAAUkH,GAMhC,IALA,IAAI5iB,GAAQ,EACRshB,EAAW3Z,OAAOuY,GAClB2C,EAAQD,EAAS1C,GACjB1f,EAASqiB,EAAMriB,OAEZA,KAAU,CACf,IAAIwB,EAAM6gB,EAAMF,EAAYniB,IAAWR,GACvC,IAA+C,IAA3C0b,EAAS4F,EAAStf,GAAMA,EAAKsf,GAC/B,K,CAGJ,OAAOpB,C,EAeX,IAAI4C,GAAUJ,KAUd,SAASK,GAAW7C,EAAQxE,GAC1B,OAAOwE,GAAU4C,GAAQ5C,EAAQxE,EAAUqE,G,CAc7C,SAASiD,GAAc1N,EAAO2N,EAAWC,EAAWP,GAIlD,IAHA,IAAIniB,EAAS8U,EAAM9U,OACfR,EAAQkjB,GAAaP,EAAY,GAAI,GAEjCA,EAAY3iB,MAAYA,EAAQQ,GACtC,GAAIyiB,EAAU3N,EAAMtV,GAAQA,EAAOsV,GACjC,OAAOtV,EAGX,OAAO,C,CAUT,SAASmjB,GAAUzL,GACjB,OAAOA,GAAUA,C,CAanB,SAAS0L,GAAc9N,EAAOoC,EAAOwL,GAInC,IAHA,IAAIljB,EAAQkjB,EAAY,EACpB1iB,EAAS8U,EAAM9U,SAEVR,EAAQQ,GACf,GAAI8U,EAAMtV,KAAW0X,EACnB,OAAO1X,EAGX,OAAO,C,CAYT,SAASqjB,GAAY/N,EAAOoC,EAAOwL,GACjC,OAAOxL,GAAUA,EACb0L,GAAc9N,EAAOoC,EAAOwL,GAC5BF,GAAc1N,EAAO6N,GAAWD,E,CAkFtC,IAAII,GAAO,SAAUC,EAAOC,EAAa7kB,GACV,mBAAhB6kB,IAEP7kB,EAAW6kB,EACXA,EAAc,MAElB7kB,EAAWuX,EAAKvX,GAAYwc,GAC5B,IACIsI,EADU1D,GAAKwD,GACI/iB,OACvB,IAAKijB,EACD,OAAO9kB,EAAS,MAEf6kB,IACDA,EAAcC,GAGlB,IAAIzB,EAAU,GACV0B,EAAe,EACfC,GAAW,EAEXlN,EAAY9O,OAAOC,OAAO,MAE1Bgc,EAAa,GAGbC,EAAe,GAEfC,EAAwB,GAsC5B,SAASC,EAAY/hB,EAAKgiB,GACtBJ,EAAW1jB,MAAK,WACZ+jB,EAAQjiB,EAAKgiB,E,IAIrB,SAASE,IACL,GAA0B,IAAtBN,EAAWpjB,QAAiC,IAAjBkjB,EAC3B,OAAO/kB,EAAS,KAAMqjB,GAE1B,KAAM4B,EAAWpjB,QAAUkjB,EAAeF,GAC5BI,EAAWla,OACrBwL,E,CAKR,SAASe,EAAYkO,EAAU9M,GAC3B,IAAI+M,EAAgB3N,EAAU0N,GACzBC,IACDA,EAAgB3N,EAAU0N,GAAY,IAG1CC,EAAclkB,KAAKmX,E,CAGvB,SAASgN,EAAaF,GAElB1B,GADoBhM,EAAU0N,IAAa,IAClB,SAAU9M,GAC/BA,G,IAEJ6M,G,CAIJ,SAASD,EAAQjiB,EAAKgiB,GAClB,IAAIL,EAAJ,CAEA,IAAIW,EAAe3D,IAAS,SAAS7hB,EAAKsZ,GAKtC,GAJAsL,IACIvS,UAAU3Q,OAAS,IACnB4X,EAAS5V,EAAM2O,UAAW,IAE1BrS,EAAK,CACL,IAAIylB,EAAc,GAClBxB,GAAWf,GAAS,SAASwC,EAAKC,GAC9BF,EAAYE,GAAQD,C,IAExBD,EAAYviB,GAAOoW,EACnBuL,GAAW,EACXlN,EAAY9O,OAAOC,OAAO,MAE1BjJ,EAASG,EAAKylB,E,MAEdvC,EAAQhgB,GAAOoW,EACfiM,EAAariB,E,IAIrB0hB,IACA,IAAIgB,EAAS5L,EAAUkL,EAAKA,EAAKxjB,OAAS,IACtCwjB,EAAKxjB,OAAS,EACdkkB,EAAO1C,EAASsC,GAEhBI,EAAOJ,EA5BG,C,CAgClB,SAASK,IAML,IAFA,IACI1C,EAAU,EACP4B,EAAarjB,QAEhByhB,IACAQ,GAAUmC,EAFIf,EAAarM,QAEW,SAAUqN,GACD,KAArCf,EAAsBe,IACxBhB,EAAa3jB,KAAK2kB,E,IAK9B,GAAI5C,IAAYwB,EACZ,MAAM,IAAI3X,MACN,gE,CAKZ,SAAS8Y,EAAcT,GACnB,IAAI/L,EAAS,GAMb,OALA2K,GAAWQ,GAAO,SAAUS,EAAMhiB,GAC1Bka,GAAQ8H,IAASX,GAAYW,EAAMG,EAAU,IAAM,GACnD/L,EAAOlY,KAAK8B,E,IAGboW,C,CAtIX2K,GAAWQ,GAAO,SAAUS,EAAMhiB,GAC9B,IAAKka,GAAQ8H,GAIT,OAFAD,EAAY/hB,EAAK,CAACgiB,SAClBH,EAAa3jB,KAAK8B,GAItB,IAAI8iB,EAAed,EAAKxhB,MAAM,EAAGwhB,EAAKxjB,OAAS,GAC3CukB,EAAwBD,EAAatkB,OACzC,GAA8B,IAA1BukB,EAGA,OAFAhB,EAAY/hB,EAAKgiB,QACjBH,EAAa3jB,KAAK8B,GAGtB8hB,EAAsB9hB,GAAO+iB,EAE7BtC,GAAUqC,GAAc,SAAUE,GAC9B,IAAKzB,EAAMyB,GACP,MAAM,IAAIlZ,MAAM,oBAAsB9J,EAClC,oCACAgjB,EAAiB,QACjBF,EAAa9W,KAAK,OAE1BiI,EAAY+O,GAAgB,WAEM,KAD9BD,GAEIhB,EAAY/hB,EAAKgiB,E,UAMjCW,IACAT,G,EAiHJ,SAASe,GAAS3P,EAAOoG,GAKvB,IAJA,IAAI1b,GAAQ,EACRQ,EAAkB,MAAT8U,EAAgB,EAAIA,EAAM9U,OACnC4X,EAASpO,MAAMxJ,KAEVR,EAAQQ,GACf4X,EAAOpY,GAAS0b,EAASpG,EAAMtV,GAAQA,EAAOsV,GAEhD,OAAO8C,C,CAIT,IAAI8M,GAAY,kBAmBhB,SAASC,GAASzN,GAChB,MAAuB,iBAATA,GACXiE,EAAajE,IAAU+C,EAAW/C,IAAUwN,E,CAIjD,IAAIE,GAAW,IAGXC,GAAc1L,EAAWA,EAASlb,eAAY2S,EAC9CkU,GAAiBD,GAAcA,GAAY1hB,cAAWyN,EAU1D,SAASmU,GAAa7N,GAEpB,GAAoB,iBAATA,EACT,OAAOA,EAET,GAAIwE,GAAQxE,GAEV,OAAOuN,GAASvN,EAAO6N,IAAgB,GAEzC,GAAIJ,GAASzN,GACX,OAAO4N,GAAiBA,GAAepX,KAAKwJ,GAAS,GAEvD,IAAIU,EAAUV,EAAQ,GACtB,MAAkB,KAAXU,GAAkB,EAAKV,IAAW0N,GAAY,KAAOhN,C,CAY9D,SAASoN,GAAUlQ,EAAOzC,EAAOJ,GAC/B,IAAIzS,GAAQ,EACRQ,EAAS8U,EAAM9U,OAEfqS,EAAQ,IACVA,GAASA,EAAQrS,EAAS,EAAKA,EAASqS,IAE1CJ,EAAMA,EAAMjS,EAASA,EAASiS,GACpB,IACRA,GAAOjS,GAETA,EAASqS,EAAQJ,EAAM,EAAKA,EAAOI,IAAW,EAC9CA,KAAW,EAGX,IADA,IAAIuF,EAASpO,MAAMxJ,KACVR,EAAQQ,GACf4X,EAAOpY,GAASsV,EAAMtV,EAAQ6S,GAEhC,OAAOuF,C,CAYT,SAASqN,GAAUnQ,EAAOzC,EAAOJ,GAC/B,IAAIjS,EAAS8U,EAAM9U,OAEnB,OADAiS,OAAcrB,IAARqB,EAAoBjS,EAASiS,GAC1BI,GAASJ,GAAOjS,EAAU8U,EAAQkQ,GAAUlQ,EAAOzC,EAAOJ,E,CAYrE,SAASiT,GAAcC,EAAYC,GAGjC,IAFA,IAAI5lB,EAAQ2lB,EAAWnlB,OAEhBR,KAAWqjB,GAAYuC,EAAYD,EAAW3lB,GAAQ,IAAK,IAClE,OAAOA,C,CAYT,SAAS6lB,GAAgBF,EAAYC,GAInC,IAHA,IAAI5lB,GAAQ,EACRQ,EAASmlB,EAAWnlB,SAEfR,EAAQQ,GAAU6iB,GAAYuC,EAAYD,EAAW3lB,GAAQ,IAAK,IAC3E,OAAOA,C,CAUT,SAAS8lB,GAAaC,GACpB,OAAOA,EAAOvkB,MAAM,G,CAItB,IAWIwkB,GAAeC,OAAO,qFAS1B,SAASC,GAAWH,GAClB,OAAOC,GAAapJ,KAAKmJ,E,CAI3B,IAAII,GAAkB,gBAQlBC,GAAW,IAAMD,GAAkB,IACnCE,GAAU,kDACVC,GAAS,wBAETC,GAAc,KAAOJ,GAAkB,IACvCK,GAAa,+BACbC,GAAa,iCAIbC,GAPa,MAAQL,GAAU,IAAMC,GAO1BK,KACXC,GAAW,oBACXC,GAAY,gBAA0B,CAACN,GAAaC,GAAYC,IAAYzY,KAAK,KAAO,IAAM4Y,GAAWF,GAAW,KACpHI,GAAQF,GAAWF,GAAWG,GAC9BE,GAAW,MAAQ,CAACR,GAAcF,GAAU,IAAKA,GAASG,GAAYC,GAAYL,IAAUpY,KAAK,KAAO,IAGxGgZ,GAAYf,OAAOK,GAAS,MAAQA,GAAS,KAAOS,GAAWD,GAAO,KAS1E,SAASG,GAAelB,GACtB,OAAOA,EAAOmB,MAAMF,KAAc,E,CAUpC,SAASG,GAAcpB,GACrB,OAAOG,GAAWH,GACdkB,GAAelB,GACfD,GAAaC,E,CAwBnB,SAASpiB,GAAS+T,GAChB,OAAgB,MAATA,EAAgB,GAAK6N,GAAa7N,E,CAI3C,IAAI0P,GAAM,aAwBV,SAASC,GAAKtB,EAAQuB,EAAOC,GAE3B,IADAxB,EAASpiB,GAASoiB,MACHwB,QAAmBnW,IAAVkW,GACtB,OAAOvB,EAAOyB,QAAQJ,GAAQ,IAEhC,IAAKrB,KAAYuB,EAAQ/B,GAAa+B,IACpC,OAAOvB,EAET,IAAIJ,EAAawB,GAAcpB,GAC3BH,EAAauB,GAAcG,GAI/B,OAAO7B,GAAUE,EAHLE,GAAgBF,EAAYC,GAC9BF,GAAcC,EAAYC,GAAc,GAET5X,KAAK,G,CAGhD,IAAIyZ,GAAO,qDACPC,GAAY,IACZC,GAAM,eACNC,GAAc,mCAElB,SAASC,GAAY1P,GAOjB,OAHAA,GADAA,GADAA,GADAA,EAAOA,EAAKxU,WAAW6jB,QAAQI,GAAgB,KACnCV,MAAMO,IAAS,GAAGD,QAAQ,IAAK,KAC7BrP,EAAK3W,MAAMkmB,IAAgB,IAC7BjZ,KAAI,SAAUiD,GACtB,OAAO2V,GAAK3V,EAAI8V,QAAQG,GAAQ,I,IAuFxC,SAASG,GAAWvE,EAAO5kB,GACvB,IAAIopB,EAAW,GAEfhF,GAAWQ,GAAO,SAAUmB,EAAQ1iB,GAChC,IAAIgmB,EACAC,EAAYrP,EAAQ8L,GACpBwD,GACED,GAA+B,IAAlBvD,EAAOlkB,QACrBynB,GAA+B,IAAlBvD,EAAOlkB,OAEzB,GAAI0b,GAAQwI,GACRsD,EAAStD,EAAOliB,MAAM,GAAG,GACzBkiB,EAASA,EAAOA,EAAOlkB,OAAS,GAEhCunB,EAAS/lB,GAAOgmB,EAAO/Z,OAAO+Z,EAAOxnB,OAAS,EAAI2nB,EAAUzD,QACzD,GAAIwD,EAEPH,EAAS/lB,GAAO0iB,MACb,CAEH,GADAsD,EAASH,GAAYnD,GACC,IAAlBA,EAAOlkB,SAAiBynB,GAA+B,IAAlBD,EAAOxnB,OAC5C,MAAM,IAAIsL,MAAM,0DAIfmc,GAAWD,EAAOxQ,MAEvBuQ,EAAS/lB,GAAOgmB,EAAO/Z,OAAOka,E,CAGlC,SAASA,EAAQnG,EAASoG,GACtB,IAAIC,EAAUpD,GAAS+C,GAAQ,SAAUzmB,GACrC,OAAOygB,EAAQzgB,E,IAEnB8mB,EAAQnoB,KAAKkoB,GACbtP,EAAU4L,GAAQhd,MAAM,KAAM2gB,E,KAItC/E,GAAKyE,EAAUppB,E,CAOnB,SAAS2pB,KACL/pB,KAAKgqB,KAAOhqB,KAAKwB,KAAO,KACxBxB,KAAKiC,OAAS,C,CAGlB,SAASgoB,GAAWC,EAAKrnB,GACrBqnB,EAAIjoB,OAAS,EACbioB,EAAIF,KAAOE,EAAI1oB,KAAOqB,C,CA6E1B,SAASsnB,GAAMC,EAAQnF,EAAaoF,GAChC,GAAmB,MAAfpF,EACAA,EAAc,OAEb,GAAmB,IAAhBA,EACJ,MAAM,IAAI1X,MAAM,gCAGpB,IAAI+c,EAAU/P,EAAU6P,GACpBG,EAAa,EACbC,EAAc,GAEdC,GAAsB,EAC1B,SAASC,EAAQhe,EAAMie,EAAevqB,GAClC,GAAgB,MAAZA,GAAwC,mBAAbA,EAC3B,MAAM,IAAImN,MAAM,oCAMpB,GAJAnB,EAAEwe,SAAU,EACPjN,GAAQjR,KACTA,EAAO,CAACA,IAEQ,IAAhBA,EAAKzK,QAAgBmK,EAAEye,OAEvB,OAAOnR,GAAe,WAClBtN,EAAE0e,O,IAIV,IAAK,IAAI9oB,EAAI,EAAGiK,EAAIS,EAAKzK,OAAQD,EAAIiK,EAAGjK,IAAK,CACzC,IAAI8f,EAAO,CACPpV,KAAMA,EAAK1K,GACX5B,SAAUA,GAAYwc,GAGtB+N,EACAve,EAAE2e,OAAOC,QAAQlJ,GAEjB1V,EAAE2e,OAAOppB,KAAKmgB,E,CAIjB2I,IACDA,GAAsB,EACtB/Q,GAAe,WACX+Q,GAAsB,EACtBre,EAAE+T,S,KAKd,SAAS8K,EAAMjG,GACX,OAAO,SAASzkB,GACZgqB,GAAc,EAEd,IAAK,IAAIvoB,EAAI,EAAGiK,EAAI+Y,EAAM/iB,OAAQD,EAAIiK,EAAGjK,IAAK,CAC1C,IAAIyjB,EAAOT,EAAMhjB,GAEbP,EAAQqjB,GAAY0F,EAAa/E,EAAM,GAC7B,IAAVhkB,EACA+oB,EAAYrf,QACL1J,EAAQ,GACf+oB,EAAYU,OAAOzpB,EAAO,GAG9BgkB,EAAKrlB,SAAS+I,MAAMsc,EAAM7S,WAEf,MAAPrS,GACA6L,EAAE6N,MAAM1Z,EAAKklB,EAAK/Y,K,CAItB6d,GAAene,EAAE6Y,YAAc7Y,EAAE7B,QACjC6B,EAAE+e,cAGF/e,EAAEye,QACFze,EAAE0e,QAEN1e,EAAE+T,S,EAIV,IAAIiL,GAAe,EACfhf,EAAI,CACJ2e,OAAQ,IAAIhB,GACZ9E,YAAaA,EACboF,QAASA,EACTgB,UAAWzO,EACXuO,YAAYvO,EACZrS,OAAQ0a,EAAc,EACtBqG,MAAO1O,EACPkO,MAAOlO,EACP3C,MAAO2C,EACPgO,SAAS,EACTW,QAAQ,EACR5pB,KAAM,SAAU+K,EAAMtM,GAClBsqB,EAAQhe,GAAM,EAAOtM,E,EAEzBorB,KAAM,WACFpf,EAAE0e,MAAQlO,EACVxQ,EAAE2e,OAAOO,O,EAEbN,QAAS,SAAUte,EAAMtM,GACrBsqB,EAAQhe,GAAM,EAAMtM,E,EAExBqrB,OAAQ,SAAUC,GACdtf,EAAE2e,OAAOU,OAAOC,E,EAEpBvL,QAAS,WAGL,IAAIiL,EAAJ,CAIA,IADAA,GAAe,GACRhf,EAAEmf,QAAUhB,EAAane,EAAE6Y,aAAe7Y,EAAE2e,OAAO9oB,QAAO,CAC7D,IAAI+iB,EAAQ,GAAItY,EAAO,GACnBT,EAAIG,EAAE2e,OAAO9oB,OACbmK,EAAEie,UAASpe,EAAIyM,KAAKiT,IAAI1f,EAAGG,EAAEie,UACjC,IAAK,IAAIroB,EAAI,EAAGA,EAAIiK,EAAGjK,IAAK,CACxB,IAAIa,EAAOuJ,EAAE2e,OAAO5f,QACpB6Z,EAAMrjB,KAAKkB,GACX2nB,EAAY7oB,KAAKkB,GACjB6J,EAAK/K,KAAKkB,EAAK6J,K,CAGnB6d,GAAc,EAEU,IAApBne,EAAE2e,OAAO9oB,QACTmK,EAAEkf,QAGFf,IAAene,EAAE6Y,aACjB7Y,EAAEif,YAGN,IAAIvQ,EAAKsH,GAAS6I,EAAMjG,IACxBsF,EAAQ5d,EAAMoO,E,CAElBsQ,GAAe,CA3BX,C,EA6BRnpB,OAAQ,WACJ,OAAOmK,EAAE2e,OAAO9oB,M,EAEpBugB,QAAS,WACL,OAAO+H,C,EAEXC,YAAa,WACT,OAAOA,C,EAEXK,KAAM,WACF,OAAOze,EAAE2e,OAAO9oB,OAASsoB,IAAe,C,EAE5CqB,MAAO,WACHxf,EAAEmf,QAAS,C,EAEfM,OAAQ,YACa,IAAbzf,EAAEmf,SACNnf,EAAEmf,QAAS,EACX7R,EAAetN,EAAE+T,S,GAGzB,OAAO/T,C,CAgFX,SAAS0f,GAAM1B,EAAQC,GACnB,OAAOF,GAAMC,EAAQ,EAAGC,E,CA7T5BN,GAAI7pB,UAAU6rB,WAAa,SAASlpB,GAQhC,OAPIA,EAAKoD,KAAMpD,EAAKoD,KAAK8b,KAAOlf,EAAKkf,KAChC/hB,KAAKgqB,KAAOnnB,EAAKkf,KAClBlf,EAAKkf,KAAMlf,EAAKkf,KAAK9b,KAAOpD,EAAKoD,KAChCjG,KAAKwB,KAAOqB,EAAKoD,KAEtBpD,EAAKoD,KAAOpD,EAAKkf,KAAO,KACxB/hB,KAAKiC,QAAU,EACRY,C,EAGXknB,GAAI7pB,UAAUorB,MAAQ,WAClB,KAAMtrB,KAAKgqB,MAAMhqB,KAAKmL,QACtB,OAAOnL,I,EAGX+pB,GAAI7pB,UAAU8rB,YAAc,SAASnpB,EAAMopB,GACvCA,EAAQhmB,KAAOpD,EACfopB,EAAQlK,KAAOlf,EAAKkf,KAChBlf,EAAKkf,KAAMlf,EAAKkf,KAAK9b,KAAOgmB,EAC3BjsB,KAAKwB,KAAOyqB,EACjBppB,EAAKkf,KAAOkK,EACZjsB,KAAKiC,QAAU,C,EAGnB8nB,GAAI7pB,UAAUgsB,aAAe,SAASrpB,EAAMopB,GACxCA,EAAQhmB,KAAOpD,EAAKoD,KACpBgmB,EAAQlK,KAAOlf,EACXA,EAAKoD,KAAMpD,EAAKoD,KAAK8b,KAAOkK,EAC3BjsB,KAAKgqB,KAAOiC,EACjBppB,EAAKoD,KAAOgmB,EACZjsB,KAAKiC,QAAU,C,EAGnB8nB,GAAI7pB,UAAU8qB,QAAU,SAASnoB,GACzB7C,KAAKgqB,KAAMhqB,KAAKksB,aAAalsB,KAAKgqB,KAAMnnB,GACvConB,GAAWjqB,KAAM6C,E,EAG1BknB,GAAI7pB,UAAUyB,KAAO,SAASkB,GACtB7C,KAAKwB,KAAMxB,KAAKgsB,YAAYhsB,KAAKwB,KAAMqB,GACtConB,GAAWjqB,KAAM6C,E,EAG1BknB,GAAI7pB,UAAUiL,MAAQ,WAClB,OAAOnL,KAAKgqB,MAAQhqB,KAAK+rB,WAAW/rB,KAAKgqB,K,EAG7CD,GAAI7pB,UAAU+Y,IAAM,WAChB,OAAOjZ,KAAKwB,MAAQxB,KAAK+rB,WAAW/rB,KAAKwB,K,EAG7CuoB,GAAI7pB,UAAUisB,QAAU,WAGpB,IAFA,IAAI3I,EAAM/X,MAAMzL,KAAKiC,QACjBmqB,EAAOpsB,KAAKgqB,KACRnR,EAAM,EAAGA,EAAM7Y,KAAKiC,OAAQ4W,IAChC2K,EAAI3K,GAAOuT,EAAK1f,KAChB0f,EAAOA,EAAKrK,KAEhB,OAAOyB,C,EAGXuG,GAAI7pB,UAAUurB,OAAS,SAAUC,GAE7B,IADA,IAAIU,EAAOpsB,KAAKgqB,KACRoC,GAAM,CACV,IAAIrK,EAAOqK,EAAKrK,KACZ2J,EAAOU,IACPpsB,KAAK+rB,WAAWK,GAEpBA,EAAOrK,C,CAEX,OAAO/hB,I,EA0QX,IAAIqsB,GAAevJ,GAAQD,GAAa,GA0CxC,SAASyJ,GAAOrP,EAAMsP,EAAMpP,EAAU/c,GAClCA,EAAWuX,EAAKvX,GAAYwc,GAC5B,IAAI+G,EAAYpJ,EAAU4C,GAC1BkP,GAAapP,GAAM,SAAS5R,EAAGrJ,EAAG5B,GAC9BujB,EAAU4I,EAAMlhB,GAAG,SAAS9K,EAAK8D,GAC7BkoB,EAAOloB,EACPjE,EAASG,E,OAEd,SAASA,GACRH,EAASG,EAAKgsB,E,IA0CtB,SAASC,KACL,IAAIC,EAAa/F,GAAS9T,UAAW2H,GACrC,OAAO,WACH,IAAIrD,EAAOjT,EAAM2O,WACbiI,EAAO7a,KAEP8a,EAAK5D,EAAKA,EAAKjV,OAAS,GACX,mBAAN6Y,EACP5D,EAAK+B,MAEL6B,EAAK8B,EAGT0P,GAAOG,EAAYvV,GAAM,SAASwV,EAAS5T,EAAIgC,GAC3ChC,EAAG3P,MAAM0R,EAAM6R,EAAQhd,QAAO,SAASnP,GACnC,IAAIosB,EAAW1oB,EAAM2O,UAAW,GAChCkI,EAAGva,EAAKosB,E,QAGhB,SAASpsB,EAAKkjB,GACV3I,EAAG3R,MAAM0R,EAAM,CAACta,GAAKmP,OAAO+T,G,KAwCxC,IAAImJ,GAAU,WACV,OAAOJ,GAAIrjB,MAAM,KAAMlF,EAAM2O,WAAWxK,U,EAGxCykB,GAAUphB,MAAMvL,UAAUwP,OAoB1Bod,GAAc,SAAS7P,EAAMqF,EAAOnF,EAAU/c,GAC9CA,EAAWA,GAAYwc,EACvB,IAAI+G,EAAYpJ,EAAU4C,GAC1B4G,GAAS9G,EAAMqF,GAAO,SAAS2D,EAAK7lB,GAChCujB,EAAUsC,GAAK,SAAS1lB,GACpB,OAAIA,EAAYH,EAASG,GAClBH,EAAS,KAAM6D,EAAM2O,UAAW,G,OAE5C,SAASrS,EAAKwsB,GAEb,IADA,IAAIlT,EAAS,GACJ7X,EAAI,EAAGA,EAAI+qB,EAAW9qB,OAAQD,IAC/B+qB,EAAW/qB,KACX6X,EAASgT,GAAQ1jB,MAAM0Q,EAAQkT,EAAW/qB,KAIlD,OAAO5B,EAASG,EAAKsZ,E,KA6BzBnK,GAASoT,GAAQgK,GAAa1J,KAoB9B4J,GAAelK,GAAQgK,GAAa,GA4CpCG,GAAW,WACX,IAAIC,EAASjpB,EAAM2O,WACfsE,EAAO,CAAC,MAAMxH,OAAOwd,GACzB,OAAO,WAEH,OADeta,UAAUA,UAAU3Q,OAAS,GAC5BkH,MAAMnJ,KAAMkX,E,GAoBpC,SAASiW,GAAShU,GAChB,OAAOA,C,CAGT,SAASiU,GAAcC,EAAOC,GAC1B,OAAO,SAAS5S,EAAQ8I,EAAKrG,EAAUrC,GACnCA,EAAKA,GAAM8B,EACX,IACI2Q,EADAC,GAAa,EAEjB9S,EAAO8I,GAAK,SAASrK,EAAOyK,EAAGxjB,GAC3B+c,EAAShE,GAAO,SAAS5Y,EAAKsZ,GACtBtZ,EACAH,EAASG,GACF8sB,EAAMxT,KAAY0T,GACzBC,GAAa,EACbD,EAAaD,GAAU,EAAMnU,GAC7B/Y,EAAS,KAAMuc,IAEfvc,G,OAGT,SAASG,GACJA,EACAua,EAAGva,GAEHua,EAAG,KAAM0S,EAAaD,EAAaD,GAAU,G,KAM7D,SAASG,GAAeppB,EAAGgH,GACvB,OAAOA,C,CAsCX,IAAIqiB,GAASpK,GAAW8J,GAAcD,GAAUM,KAwB5CE,GAAc7J,GAAgBsJ,GAAcD,GAAUM,KAsBtDG,GAAe9K,GAAQ6K,GAAa,GAExC,SAASE,GAAY7qB,GACjB,OAAO,SAAU8V,GACb,IAAI5B,EAAOjT,EAAM2O,UAAW,GAC5BsE,EAAKvV,MAAK,SAAUpB,GAChB,IAAI2W,EAAOjT,EAAM2O,UAAW,GACL,iBAAZ9K,UACHvH,EACIuH,QAAQmS,OACRnS,QAAQmS,MAAM1Z,GAEXuH,QAAQ9E,IACfkhB,GAAUhN,GAAM,SAAU7L,GACtBvD,QAAQ9E,GAAMqI,E,QAK9BkP,EAAUzB,GAAI3P,MAAM,KAAM+N,E,EAiClC,IAAIlC,GAAM6Y,GAAY,OAsBtB,SAASC,GAAShV,EAAIuF,EAAMje,GACxBA,EAAWgiB,GAAShiB,GAAYwc,GAChC,IAAImR,EAAMxT,EAAUzB,GAChBkV,EAAQzT,EAAU8D,GAEtB,SAAS0D,EAAKxhB,GACV,GAAIA,EAAK,OAAOH,EAASG,GACzB,IAAI2W,EAAOjT,EAAM2O,UAAW,GAC5BsE,EAAKvV,KAAK0rB,GACVW,EAAM7kB,MAAMnJ,KAAMkX,E,CAGtB,SAASmW,EAAM9sB,EAAK0tB,GAChB,OAAI1tB,EAAYH,EAASG,GACpB0tB,OACLF,EAAIhM,GADe3hB,EAAS,K,CAIhCitB,EAAM,MAAM,E,CA0BhB,SAASa,GAAS/Q,EAAUkB,EAAMje,GAC9BA,EAAWgiB,GAAShiB,GAAYwc,GAChC,IAAI+G,EAAYpJ,EAAU4C,GACtB4E,EAAO,SAASxhB,GAChB,GAAIA,EAAK,OAAOH,EAASG,GACzB,IAAI2W,EAAOjT,EAAM2O,UAAW,GAC5B,GAAIyL,EAAKlV,MAAMnJ,KAAMkX,GAAO,OAAOyM,EAAU5B,GAC7C3hB,EAAS+I,MAAM,KAAM,CAAC,MAAMuG,OAAOwH,G,EAEvCyM,EAAU5B,E,CAuBd,SAASoM,GAAQhR,EAAUkB,EAAMje,GAC7B8tB,GAAS/Q,GAAU,WACf,OAAQkB,EAAKlV,MAAMnJ,KAAM4S,U,GAC1BxS,E,CAuCP,SAASguB,GAAO/P,EAAMvF,EAAI1Y,GACtBA,EAAWgiB,GAAShiB,GAAYwc,GAChC,IAAImR,EAAMxT,EAAUzB,GAChBkV,EAAQzT,EAAU8D,GAEtB,SAAS0D,EAAKxhB,GACV,GAAIA,EAAK,OAAOH,EAASG,GACzBytB,EAAMX,E,CAGV,SAASA,EAAM9sB,EAAK0tB,GAChB,OAAI1tB,EAAYH,EAASG,GACpB0tB,OACLF,EAAIhM,GADe3hB,EAAS,K,CAIhC4tB,EAAMX,E,CAGV,SAASgB,GAAclR,GACnB,OAAO,SAAUhE,EAAO1X,EAAOrB,GAC3B,OAAO+c,EAAShE,EAAO/Y,E,EA6D/B,SAASkuB,GAAUrR,EAAME,EAAU/c,GAC/BijB,GAAOpG,EAAMoR,GAAc9T,EAAU4C,IAAY/c,E,CAuBrD,SAASmuB,GAAYtR,EAAMqF,EAAOnF,EAAU/c,GACxCiiB,GAAaC,EAAbD,CAAoBpF,EAAMoR,GAAc9T,EAAU4C,IAAY/c,E,CAsBlE,IAAIouB,GAAa1L,GAAQyL,GAAa,GAqCtC,SAASE,GAAY3V,GACjB,OAAIuB,EAAQvB,GAAYA,EACjBE,GAAc,SAAU9B,EAAM9W,GACjC,IAAIsuB,GAAO,EACXxX,EAAKvV,MAAK,WACN,IAAIgtB,EAAY/b,UACZ8b,EACAhV,GAAe,WACXtZ,EAAS+I,MAAM,KAAMwlB,E,IAGzBvuB,EAAS+I,MAAM,KAAMwlB,E,IAG7B7V,EAAG3P,MAAMnJ,KAAMkX,GACfwX,GAAO,C,IAIf,SAASE,GAAMvqB,GACX,OAAQA,C,CA+BZ,IAAIwqB,GAAQvL,GAAW8J,GAAcwB,GAAOA,KAsBxCE,GAAahL,GAAgBsJ,GAAcwB,GAAOA,KAqBlDG,GAAcjM,GAAQgM,GAAY,GAStC,SAASE,GAAavrB,GACpB,OAAO,SAASke,GACd,OAAiB,MAAVA,OAAiB9O,EAAY8O,EAAOle,E,EAI/C,SAASwrB,GAAYvU,EAAQ8I,EAAKrG,EAAU/c,GACxC,IAAI8uB,EAAc,IAAIzjB,MAAM+X,EAAIvhB,QAChCyY,EAAO8I,GAAK,SAAUnY,EAAG5J,EAAOrB,GAC5B+c,EAAS9R,GAAG,SAAU9K,EAAK8D,GACvB6qB,EAAYztB,KAAW4C,EACvBjE,EAASG,E,OAEd,SAAUA,GACT,GAAIA,EAAK,OAAOH,EAASG,GAEzB,IADA,IAAIkjB,EAAU,GACLzhB,EAAI,EAAGA,EAAIwhB,EAAIvhB,OAAQD,IACxBktB,EAAYltB,IAAIyhB,EAAQ9hB,KAAK6hB,EAAIxhB,IAEzC5B,EAAS,KAAMqjB,E,IAIvB,SAAS0L,GAAczU,EAAQuC,EAAME,EAAU/c,GAC3C,IAAIqjB,EAAU,GACd/I,EAAOuC,GAAM,SAAU5R,EAAG5J,EAAOrB,GAC7B+c,EAAS9R,GAAG,SAAU9K,EAAK8D,GACnB9D,EACAH,EAASG,IAEL8D,GACAof,EAAQ9hB,KAAK,CAACF,MAAOA,EAAO0X,MAAO9N,IAEvCjL,I,OAGT,SAAUG,GACLA,EACAH,EAASG,GAETH,EAAS,KAAMsmB,GAASjD,EAAQ2L,MAAK,SAAUrkB,EAAGD,GAC9C,OAAOC,EAAEtJ,MAAQqJ,EAAErJ,K,IACnButB,GAAa,U,IAK7B,SAASK,GAAQ3U,EAAQuC,EAAME,EAAU/c,IACxBsc,EAAYO,GAAQgS,GAAcE,IACxCzU,EAAQuC,EAAM1C,EAAU4C,GAAW/c,GAAYwc,E,CA8B1D,IAAI0S,GAAShM,GAAW+L,IAqBpBE,GAAczL,GAAgBuL,IAmB9BG,GAAe1M,GAAQyM,GAAa,GA+BxC,SAASE,GAAQ3W,EAAI4W,GACjB,IAAI1N,EAAOI,GAASsN,GAAW9S,GAC3B6I,EAAOlL,EAAUkU,GAAY3V,IAEjC,SAASiJ,EAAKxhB,GACV,GAAIA,EAAK,OAAOyhB,EAAKzhB,GACrBklB,EAAK1D,E,CAETA,G,CAsBJ,IAAI4N,GAAe,SAAS1S,EAAMqF,EAAOnF,EAAU/c,GAC/CA,EAAWA,GAAYwc,EACvB,IAAI+G,EAAYpJ,EAAU4C,GAC1B4G,GAAS9G,EAAMqF,GAAO,SAAS2D,EAAK7lB,GAChCujB,EAAUsC,GAAK,SAAS1lB,EAAKkD,GACzB,OAAIlD,EAAYH,EAASG,GAClBH,EAAS,KAAM,CAACqD,IAAKA,EAAKwiB,IAAKA,G,OAE3C,SAAS1lB,EAAKwsB,GAKb,IAJA,IAAIlT,EAAS,GAETyB,EAAiBlS,OAAOlJ,UAAUob,eAE7BtZ,EAAI,EAAGA,EAAI+qB,EAAW9qB,OAAQD,IACnC,GAAI+qB,EAAW/qB,GAAI,CACf,IAAIyB,EAAMspB,EAAW/qB,GAAGyB,IACpBwiB,EAAM8G,EAAW/qB,GAAGikB,IAEpB3K,EAAe3L,KAAKkK,EAAQpW,GAC5BoW,EAAOpW,GAAK9B,KAAKskB,GAEjBpM,EAAOpW,GAAO,CAACwiB,E,CAK3B,OAAO7lB,EAASG,EAAKsZ,E,KAwCzB+V,GAAU9M,GAAQ6M,GAAcvM,KAqBhCyM,GAAgB/M,GAAQ6M,GAAc,GA6BtC5nB,GAAM8lB,GAAY,OAuBtB,SAASiC,GAAe5N,EAAKI,EAAOnF,EAAU/c,GAC1CA,EAAWuX,EAAKvX,GAAYwc,GAC5B,IAAImT,EAAS,GACTpM,EAAYpJ,EAAU4C,GAC1B0F,GAAYX,EAAKI,GAAO,SAAS2D,EAAKxiB,EAAKse,GACvC4B,EAAUsC,EAAKxiB,GAAK,SAAUlD,EAAKsZ,GAC/B,GAAItZ,EAAK,OAAOwhB,EAAKxhB,GACrBwvB,EAAOtsB,GAAOoW,EACdkI,G,OAEL,SAAUxhB,GACTH,EAASG,EAAKwvB,E,IAiDtB,IAAIC,GAAYlN,GAAQgN,GAAgB1M,KAqBpC6M,GAAkBnN,GAAQgN,GAAgB,GAE9C,SAASI,GAAIhO,EAAKze,GACd,OAAOA,KAAOye,C,CAwClB,SAASiO,GAAQrX,EAAIsX,GACjB,IAAI7D,EAAOnjB,OAAOC,OAAO,MACrBgnB,EAASjnB,OAAOC,OAAO,MAC3B+mB,EAASA,GAAUjD,GACnB,IAAIY,EAAMxT,EAAUzB,GAChBwX,EAAWtX,GAAc,SAAkB9B,EAAM9W,GACjD,IAAIqD,EAAM2sB,EAAOjnB,MAAM,KAAM+N,GACzBgZ,GAAI3D,EAAM9oB,GACViW,GAAe,WACXtZ,EAAS+I,MAAM,KAAMojB,EAAK9oB,G,IAEvBysB,GAAIG,EAAQ5sB,GACnB4sB,EAAO5sB,GAAK9B,KAAKvB,IAEjBiwB,EAAO5sB,GAAO,CAACrD,GACf2tB,EAAI5kB,MAAM,KAAM+N,EAAKxH,QAAO,WACxB,IAAIwH,EAAOjT,EAAM2O,WACjB2Z,EAAK9oB,GAAOyT,EACZ,IAAI9K,EAAIikB,EAAO5sB,UACR4sB,EAAO5sB,GACd,IAAK,IAAIzB,EAAI,EAAGiK,EAAIG,EAAEnK,OAAQD,EAAIiK,EAAGjK,IACjCoK,EAAEpK,GAAGmH,MAAM,KAAM+N,E,SAOjC,OAFAoZ,EAAS/D,KAAOA,EAChB+D,EAASC,WAAazX,EACfwX,C,CA4CX,IAAIrZ,GAAWuC,EARXF,EACWxG,EAAQmE,SACZmC,EACIC,aAEAE,GAKf,SAASiX,GAAU9V,EAAQsK,EAAO5kB,GAC9BA,EAAWA,GAAYwc,EACvB,IAAI6G,EAAU/G,EAAYsI,GAAS,GAAK,GAExCtK,EAAOsK,GAAO,SAAUS,EAAMhiB,EAAKrD,GAC/Bma,EAAUkL,EAAVlL,EAAgB,SAAUha,EAAKsZ,GACvBjH,UAAU3Q,OAAS,IACnB4X,EAAS5V,EAAM2O,UAAW,IAE9B6Q,EAAQhgB,GAAOoW,EACfzZ,EAASG,E,OAEd,SAAUA,GACTH,EAASG,EAAKkjB,E,IAyEtB,SAASgN,GAAczL,EAAO5kB,GAC1BowB,GAAUnN,GAAQ2B,EAAO5kB,E,CAsB7B,SAASswB,GAAgB1L,EAAO1C,EAAOliB,GACnCowB,GAAUnO,GAAaC,GAAQ0C,EAAO5kB,E,CA4G1C,IAAIuwB,GAAU,SAAUvG,EAAQnF,GAC5B,IAAIqF,EAAU/P,EAAU6P,GACxB,OAAOD,IAAM,SAAUyG,EAAO9V,GAC1BwP,EAAQsG,EAAM,GAAI9V,E,GACnBmK,EAAa,E,EA0BhB4L,GAAgB,SAASzG,EAAQnF,GAEjC,IAAI7Y,EAAIukB,GAAQvG,EAAQnF,GA4CxB,OAzCA7Y,EAAEzK,KAAO,SAAS+K,EAAMokB,EAAU1wB,GAE9B,GADgB,MAAZA,IAAkBA,EAAWwc,GACT,mBAAbxc,EACP,MAAM,IAAImN,MAAM,oCAMpB,GAJAnB,EAAEwe,SAAU,EACPjN,GAAQjR,KACTA,EAAO,CAACA,IAEQ,IAAhBA,EAAKzK,OAEL,OAAOyX,GAAe,WAClBtN,EAAE0e,O,IAIVgG,EAAWA,GAAY,EAEvB,IADA,IAAIC,EAAW3kB,EAAE2e,OAAOf,KACjB+G,GAAYD,GAAYC,EAASD,UACpCC,EAAWA,EAAShP,KAGxB,IAAK,IAAI/f,EAAI,EAAGiK,EAAIS,EAAKzK,OAAQD,EAAIiK,EAAGjK,IAAK,CACzC,IAAI8f,EAAO,CACPpV,KAAMA,EAAK1K,GACX8uB,SAAUA,EACV1wB,SAAUA,GAGV2wB,EACA3kB,EAAE2e,OAAOmB,aAAa6E,EAAUjP,GAEhC1V,EAAE2e,OAAOppB,KAAKmgB,E,CAGtBpI,EAAetN,EAAE+T,Q,SAId/T,EAAE4e,QAEF5e,C,EAuCX,SAAS4kB,GAAKhM,EAAO5kB,GAEjB,GADAA,EAAWuX,EAAKvX,GAAYwc,IACvBe,GAAQqH,GAAQ,OAAO5kB,EAAS,IAAIuR,UAAU,yDACnD,IAAKqT,EAAM/iB,OAAQ,OAAO7B,IAC1B,IAAK,IAAI4B,EAAI,EAAGiK,EAAI+Y,EAAM/iB,OAAQD,EAAIiK,EAAGjK,IACrCuY,EAAUyK,EAAMhjB,GAAhBuY,CAAoBna,E,CA0B5B,SAAS6wB,GAAala,EAAOwV,EAAMpP,EAAU/c,GAEzCksB,GADeroB,EAAM8S,GAAO3O,UACXmkB,EAAMpP,EAAU/c,E,CA0CrC,SAAS8wB,GAAQpY,GACb,IAAIiV,EAAMxT,EAAUzB,GACpB,OAAOE,GAAc,SAAmB9B,EAAMia,GAe1C,OAdAja,EAAKvV,MAAK,SAAkBsY,EAAOmX,GAI3B,IAAIjY,EAHJc,EACAkX,EAAgB,KAAM,CAAElX,MAAOA,KAI3Bd,EADAvG,UAAU3Q,QAAU,EACZmvB,EAEAntB,EAAM2O,UAAW,GAE7Bue,EAAgB,KAAM,CAAEhY,MAAOA,I,IAIhC4U,EAAI5kB,MAAMnJ,KAAMkX,E,IAuE/B,SAASma,GAAWrM,GAChB,IAAIvB,EASJ,OARI9F,GAAQqH,GACRvB,EAAUiD,GAAS1B,EAAOkM,KAE1BzN,EAAU,GACVe,GAAWQ,GAAO,SAASS,EAAMhiB,GAC7BggB,EAAQhgB,GAAOytB,GAAQvhB,KAAK3P,KAAMylB,E,KAGnChC,C,CAGX,SAAS6N,GAAS5W,EAAQ8I,EAAKrG,EAAU/c,GACrCivB,GAAQ3U,EAAQ8I,GAAK,SAASrK,EAAO2B,GACjCqC,EAAShE,GAAO,SAAS5Y,EAAK8D,GAC1ByW,EAAGva,GAAM8D,E,MAEdjE,E,CA8BP,IAAImxB,GAASjO,GAAWgO,IAqBpBE,GAAc1N,GAAgBwN,IAmB9BG,GAAe3O,GAAQ0O,GAAa,GAqBxC,SAASE,GAAWvY,GAClB,OAAO,WACL,OAAOA,C,EAwFX,SAASwY,GAAMC,EAAMnM,EAAMrlB,GACvB,IAAIyxB,EAAgB,EAChBC,EAAmB,EAEnBC,EAAU,CACVC,MAAOH,EACPI,aAAcP,GAAWI,IAG7B,SAASI,EAAWC,EAAKtnB,GACrB,GAAiB,iBAANA,EACPsnB,EAAIH,OAASnnB,EAAEmnB,OAASH,EAExBM,EAAIF,aAAqC,mBAAfpnB,EAAEunB,SACxBvnB,EAAEunB,SACFV,IAAY7mB,EAAEunB,UAAYN,GAE9BK,EAAIE,YAAcxnB,EAAEwnB,gBACjB,IAAiB,iBAANxnB,GAA+B,iBAANA,EAGvC,MAAM,IAAI0C,MAAM,qCAFhB4kB,EAAIH,OAASnnB,GAAKgnB,CAEkC,C,CAY5D,GARIjf,UAAU3Q,OAAS,GAAqB,mBAAT2vB,GAC/BxxB,EAAWqlB,GAAQ7I,EACnB6I,EAAOmM,IAEPM,EAAWH,EAASH,GACpBxxB,EAAWA,GAAYwc,GAGP,mBAAT6I,EACP,MAAM,IAAIlY,MAAM,qCAGpB,IAAI+kB,EAAQ/X,EAAUkL,GAElB8M,EAAU,EACd,SAASC,IACLF,GAAM,SAAS/xB,GACPA,GAAOgyB,IAAYR,EAAQC,QACI,mBAAvBD,EAAQM,aACZN,EAAQM,YAAY9xB,IACxByV,WAAWwc,EAAcT,EAAQE,aAAaM,IAE9CnyB,EAAS+I,MAAM,KAAMyJ,U,IAKjC4f,G,CA+BJ,IAAIC,GAAY,SAAUb,EAAMnM,GACvBA,IACDA,EAAOmM,EACPA,EAAO,MAEX,IAAIU,EAAQ/X,EAAUkL,GACtB,OAAOzM,GAAc,SAAU9B,EAAM9W,GACjC,SAAS+lB,EAAOrL,GACZwX,EAAMnpB,MAAM,KAAM+N,EAAKxH,OAAOoL,G,CAG9B8W,EAAMD,GAAMC,EAAMzL,EAAQ/lB,GACzBuxB,GAAMxL,EAAQ/lB,E,KAqE3B,SAASsyB,GAAO1N,EAAO5kB,GACnBowB,GAAUnE,GAAcrH,EAAO5kB,E,CAiCnC,IAAIuyB,GAAOrP,GAAW8J,GAAcwF,QAASzF,KAuBzC0F,GAAY/O,GAAgBsJ,GAAcwF,QAASzF,KAsBnD2F,GAAahQ,GAAQ+P,GAAW,GAiDpC,SAASE,GAAQ9V,EAAME,EAAU/c,GAC7B,IAAIujB,EAAYpJ,EAAU4C,GAW1B,SAAS6V,EAAWC,EAAMC,GACtB,IAAInoB,EAAIkoB,EAAKE,SAAUroB,EAAIooB,EAAMC,SACjC,OAAOpoB,EAAID,GAAI,EAAKC,EAAID,EAAI,EAAI,C,CAZpCoF,GAAI+M,GAAM,SAAU5R,EAAGjL,GACnBujB,EAAUtY,GAAG,SAAU9K,EAAK4yB,GACxB,GAAI5yB,EAAK,OAAOH,EAASG,GACzBH,EAAS,KAAM,CAAC+Y,MAAO9N,EAAG8nB,SAAUA,G,OAEzC,SAAU5yB,EAAKkjB,GACd,GAAIljB,EAAK,OAAOH,EAASG,GACzBH,EAAS,KAAMsmB,GAASjD,EAAQ2L,KAAK4D,GAAahE,GAAa,U,IAkDvE,SAASvY,GAAQ+D,EAAS4Y,EAAcC,GACpC,IAAIva,EAAKyB,EAAUC,GAEnB,OAAOxB,GAAc,SAAU9B,EAAM9W,GACjC,IACIkzB,EADAC,GAAW,EAGf,SAASC,IACL,IAAIxwB,EAAOwX,EAAQxX,MAAQ,YACvBiX,EAAS,IAAI1M,MAAM,sBAAwBvK,EAAO,gBACtDiX,EAAMjI,KAAO,YACTqhB,IACApZ,EAAMoZ,KAAOA,GAEjBE,GAAW,EACXnzB,EAAS6Z,E,CAGb/C,EAAKvV,MAAK,WACD4xB,IACDnzB,EAAS+I,MAAM,KAAMyJ,WACrBsD,aAAaod,G,IAKrBA,EAAQtd,WAAWwd,EAAiBJ,GACpCta,EAAG3P,MAAM,KAAM+N,E,IAKvB,IAAIuc,GAAa/a,KAAKgb,KAClBC,GAAYjb,KAAKC,IAarB,SAASib,GAAUtf,EAAOJ,EAAK2f,EAAMzP,GAKnC,IAJA,IAAI3iB,GAAQ,EACRQ,EAAS0xB,GAAUF,IAAYvf,EAAMI,IAAUuf,GAAQ,IAAK,GAC5Dha,EAASpO,MAAMxJ,GAEZA,KACL4X,EAAOuK,EAAYniB,IAAWR,GAAS6S,EACvCA,GAASuf,EAEX,OAAOha,C,CAmBT,SAASia,GAAUC,EAAOzR,EAAOnF,EAAU/c,GACvC,IAAIujB,EAAYpJ,EAAU4C,GAC1B4G,GAAS6P,GAAU,EAAGG,EAAO,GAAIzR,EAAOqB,EAAWvjB,E,CAmCvD,IAAI4xB,GAAQlP,GAAQgR,GAAW1Q,KAgB3B4Q,GAAclR,GAAQgR,GAAW,GA4CrC,SAASxS,GAAWrE,EAAMgX,EAAa9W,EAAU/c,GACzCwS,UAAU3Q,QAAU,IACpB7B,EAAW+c,EACXA,EAAW8W,EACXA,EAActW,GAAQV,GAAQ,GAAK,IAEvC7c,EAAWuX,EAAKvX,GAAYwc,GAC5B,IAAI+G,EAAYpJ,EAAU4C,GAE1BkG,GAAOpG,GAAM,SAAS5Y,EAAGC,EAAGwW,GACxB6I,EAAUsQ,EAAa5vB,EAAGC,EAAGwW,E,IAC9B,SAASva,GACRH,EAASG,EAAK0zB,E,IAyCtB,SAASC,GAAQlP,EAAO5kB,GACpB,IACIyZ,EADAI,EAAQ,KAEZ7Z,EAAWA,GAAYwc,EACvB4R,GAAWxJ,GAAO,SAASS,EAAMrlB,GAC7Bma,EAAUkL,EAAVlL,EAAgB,SAAUha,EAAK0R,GAEvB4H,EADAjH,UAAU3Q,OAAS,EACVgC,EAAM2O,UAAW,GAEjBX,EAEbgI,EAAQ1Z,EACRH,GAAUG,E,OAEf,WACCH,EAAS6Z,EAAOJ,E,IAiBxB,SAASsa,GAAUrb,GACf,OAAO,WACH,OAAQA,EAAGyX,YAAczX,GAAI3P,MAAM,KAAMyJ,U,EAsCjD,SAASwhB,GAAO/V,EAAMlB,EAAU/c,GAC5BA,EAAWgiB,GAAShiB,GAAYwc,GAChC,IAAI+G,EAAYpJ,EAAU4C,GAC1B,IAAKkB,IAAQ,OAAOje,EAAS,MAC7B,IAAI2hB,EAAO,SAASxhB,GAChB,GAAIA,EAAK,OAAOH,EAASG,GACzB,GAAI8d,IAAQ,OAAOsF,EAAU5B,GAC7B,IAAI7K,EAAOjT,EAAM2O,UAAW,GAC5BxS,EAAS+I,MAAM,KAAM,CAAC,MAAMuG,OAAOwH,G,EAEvCyM,EAAU5B,E,CAyBd,SAASsS,GAAMhW,EAAMlB,EAAU/c,GAC3Bg0B,IAAO,WACH,OAAQ/V,EAAKlV,MAAMnJ,KAAM4S,U,GAC1BuK,EAAU/c,E,CA4DjB,IAAIk0B,GAAY,SAAStP,EAAO5kB,GAE5B,GADAA,EAAWuX,EAAKvX,GAAYwc,IACvBe,GAAQqH,GAAQ,OAAO5kB,EAAS,IAAImN,MAAM,8DAC/C,IAAKyX,EAAM/iB,OAAQ,OAAO7B,IAC1B,IAAIm0B,EAAY,EAEhB,SAASC,EAAStd,GACd,IAAIuO,EAAOlL,EAAUyK,EAAMuP,MAC3Brd,EAAKvV,KAAKygB,GAASL,IACnB0D,EAAKtc,MAAM,KAAM+N,E,CAGrB,SAAS6K,EAAKxhB,GACV,GAAIA,GAAOg0B,IAAcvP,EAAM/iB,OAC3B,OAAO7B,EAAS+I,MAAM,KAAMyJ,WAEhC4hB,EAASvwB,EAAM2O,UAAW,G,CAG9B4hB,EAAS,G,EAoET/yB,GAAQ,CACR0H,MAAOA,EACP0a,UAAWA,GACXI,gBAAiBA,GACjBtK,SAAUA,EACVoL,KAAMA,GACNwE,WAAYA,GACZuC,MAAOA,GACPc,QAASA,GACTld,OAAQA,GACRod,YAAaA,GACbE,aAAcA,GACdC,SAAUA,GACVS,OAAQA,GACRC,YAAaA,GACbC,aAAcA,GACd5Y,IAAKA,GACL8Y,SAAUA,GACVK,QAASA,GACTD,SAAUA,GACVE,OAAQA,GACRqG,KAAMnG,GACNA,UAAWC,GACXlL,OAAQA,GACRR,YAAaA,GACbwJ,aAAcA,GACdmC,WAAYA,GACZC,YAAaA,GACbI,MAAOA,GACPC,WAAYA,GACZC,YAAaA,GACbO,OAAQA,GACRC,YAAaA,GACbC,aAAcA,GACdC,QAASA,GACTG,QAASA,GACTD,aAAcA,GACdE,cAAeA,GACf9nB,IAAKA,GACLmI,IAAKA,GACL6T,SAAUA,GACVC,UAAWA,GACXgM,UAAWA,GACXF,eAAgBA,GAChBG,gBAAiBA,GACjBE,QAASA,GACTlZ,SAAUA,GACVhH,SAAUwgB,GACVA,cAAeC,GACfG,cAAeA,GACf1G,MAAOwG,GACPK,KAAMA,GACN1E,OAAQA,GACR2E,YAAaA,GACbC,QAASA,GACTG,WAAYA,GACZE,OAAQA,GACRC,YAAaA,GACbC,aAAcA,GACdE,MAAOA,GACPc,UAAWA,GACXjG,IAAKA,GACLkG,OAAQA,GACRrZ,aAAcK,EACdiZ,KAAMA,GACNE,UAAWA,GACXC,WAAYA,GACZC,OAAQA,GACRtc,QAASA,GACTub,MAAOA,GACP0C,WAAYZ,GACZE,YAAaA,GACb1S,UAAWA,GACX4S,QAASA,GACTC,UAAWA,GACXE,MAAOA,GACPC,UAAWA,GACXF,OAAQA,GAGRO,IAAK9F,GACL+F,SAAU9F,GACV+F,UAAW9F,GACX+F,IAAKnC,GACLoC,SAAUlC,GACVmC,UAAWlC,GACXmC,KAAMvH,GACNwH,UAAWvH,GACXwH,WAAYvH,GACZwH,QAAS9G,GACT+G,cAAe7G,GACf8G,aAAc/G,GACdgH,UAAWlS,GACXmS,gBAAiBnJ,GACjBoJ,eAAgB5S,GAChB6S,OAAQpJ,GACRqJ,MAAOrJ,GACPsJ,MAAO3E,GACP4E,OAAQvG,GACRwG,YAAavG,GACbwG,aAAcvG,GACdwG,SAAUrc,GAGdpB,EAAiB,QAAI9W,GACrB8W,EAAQpP,MAAQA,EAChBoP,EAAQsL,UAAYA,GACpBtL,EAAQ0L,gBAAkBA,GAC1B1L,EAAQoB,SAAWA,EACnBpB,EAAQwM,KAAOA,GACfxM,EAAQgR,WAAaA,GACrBhR,EAAQuT,MAAQA,GAChBvT,EAAQqU,QAAUA,GAClBrU,EAAQ7I,OAASA,GACjB6I,EAAQuU,YAAcA,GACtBvU,EAAQyU,aAAeA,GACvBzU,EAAQ0U,SAAWA,GACnB1U,EAAQmV,OAASA,GACjBnV,EAAQoV,YAAcA,GACtBpV,EAAQqV,aAAeA,GACvBrV,EAAQvD,IAAMA,GACduD,EAAQuV,SAAWA,GACnBvV,EAAQ4V,QAAUA,GAClB5V,EAAQ2V,SAAWA,GACnB3V,EAAQ6V,OAASA,GACjB7V,EAAQkc,KAAOnG,GACf/V,EAAQ+V,UAAYC,GACpBhW,EAAQ8K,OAASA,GACjB9K,EAAQsK,YAAcA,GACtBtK,EAAQ8T,aAAeA,GACvB9T,EAAQiW,WAAaA,GACrBjW,EAAQkW,YAAcA,GACtBlW,EAAQsW,MAAQA,GAChBtW,EAAQuW,WAAaA,GACrBvW,EAAQwW,YAAcA,GACtBxW,EAAQ+W,OAASA,GACjB/W,EAAQgX,YAAcA,GACtBhX,EAAQiX,aAAeA,GACvBjX,EAAQkX,QAAUA,GAClBlX,EAAQqX,QAAUA,GAClBrX,EAAQoX,aAAeA,GACvBpX,EAAQsX,cAAgBA,GACxBtX,EAAQxQ,IAAMA,GACdwQ,EAAQrI,IAAMA,GACdqI,EAAQwL,SAAWA,GACnBxL,EAAQyL,UAAYA,GACpBzL,EAAQyX,UAAYA,GACpBzX,EAAQuX,eAAiBA,GACzBvX,EAAQ0X,gBAAkBA,GAC1B1X,EAAQ4X,QAAUA,GAClB5X,EAAQtB,SAAWA,GACnBsB,EAAQtI,SAAWwgB,GACnBlY,EAAQkY,cAAgBC,GACxBnY,EAAQsY,cAAgBA,GACxBtY,EAAQ4R,MAAQwG,GAChBpY,EAAQyY,KAAOA,GACfzY,EAAQ+T,OAASA,GACjB/T,EAAQ0Y,YAAcA,GACtB1Y,EAAQ2Y,QAAUA,GAClB3Y,EAAQ8Y,WAAaA,GACrB9Y,EAAQgZ,OAASA,GACjBhZ,EAAQiZ,YAAcA,GACtBjZ,EAAQkZ,aAAeA,GACvBlZ,EAAQoZ,MAAQA,GAChBpZ,EAAQka,UAAYA,GACpBla,EAAQiU,IAAMA,GACdjU,EAAQma,OAASA,GACjBna,EAAQc,aAAeK,EACvBnB,EAAQoa,KAAOA,GACfpa,EAAQsa,UAAYA,GACpBta,EAAQua,WAAaA,GACrBva,EAAQwa,OAASA,GACjBxa,EAAQ9B,QAAUA,GAClB8B,EAAQyZ,MAAQA,GAChBzZ,EAAQmc,WAAaZ,GACrBvb,EAAQyb,YAAcA,GACtBzb,EAAQ+I,UAAYA,GACpB/I,EAAQ2b,QAAUA,GAClB3b,EAAQ4b,UAAYA,GACpB5b,EAAQ8b,MAAQA,GAChB9b,EAAQ+b,UAAYA,GACpB/b,EAAQ6b,OAASA,GACjB7b,EAAQoc,IAAM9F,GACdtW,EAAQqc,SAAW9F,GACnBvW,EAAQsc,UAAY9F,GACpBxW,EAAQuc,IAAMnC,GACdpa,EAAQwc,SAAWlC,GACnBta,EAAQyc,UAAYlC,GACpBva,EAAQ0c,KAAOvH,GACfnV,EAAQ2c,UAAYvH,GACpBpV,EAAQ4c,WAAavH,GACrBrV,EAAQ6c,QAAU9G,GAClB/V,EAAQ8c,cAAgB7G,GACxBjW,EAAQ+c,aAAe/G,GACvBhW,EAAQgd,UAAYlS,GACpB9K,EAAQid,gBAAkBnJ,GAC1B9T,EAAQkd,eAAiB5S,GACzBtK,EAAQmd,OAASpJ,GACjB/T,EAAQod,MAAQrJ,GAChB/T,EAAQqd,MAAQ3E,GAChB1Y,EAAQsd,OAASvG,GACjB/W,EAAQud,YAAcvG,GACtBhX,EAAQwd,aAAevG,GACvBjX,EAAQyd,SAAWrc,EAEnBvQ,OAAO6sB,eAAe1d,EAAS,aAAc,CAAEY,OAAO,G,CAx+KW+c,CAAQr2B,E,8FC+BzE,SAASs2B,EAAoB5yB,EAAM3C,EAAuBM,EAAkBL,GAEpEb,KAAKuD,KADG,MAARA,EACYA,EAEA6yB,EAAA72B,QAAoB,GAAGY,MAAM,CACrC,CAACmE,EAAG,GAAID,EAAG,KAIfrE,KAAKY,sBADoB,MAAzBA,EAC6BA,EAEA,IAAIy1B,EAGjCr2B,KAAKkB,iBADe,MAApBA,EACwBA,EAGA,IAAIo1B,EAAgB,EAAG,GAG/Ct2B,KAAKa,mBADiB,MAAtBA,EAC0BA,EAEA,IAAI01B,C,CAKtCJ,EAAoBj2B,UAAUwQ,SAAW,SAAUH,EAAaE,GAE5D,OADAzQ,KAAKuD,KAAO6yB,EAAA91B,KAAiBiQ,EAAaE,GACnCzQ,I,EAGXm2B,EAAoBj2B,UAAU4Q,0BAA4B,SAAUH,EAAmBC,EAAYC,GAI/F,OAHA7Q,KAAKY,sBAAsB41B,eAAe7lB,GAC1C3Q,KAAKY,sBAAsB61B,cAAc7lB,GACzC5Q,KAAKY,sBAAsB81B,cAAc7lB,GAClC7Q,I,EAGXm2B,EAAoBj2B,UAAU+Q,oBAAsB,SAAUF,GAE1D,OADA/Q,KAAKkB,iBAAiB+P,oBAAoBF,GACnC/Q,I,EAGXm2B,EAAoBj2B,UAAUsR,wBAA0B,SAAUN,EAAYC,EAAgBC,EAAgBC,EAAgBC,EAAuBC,GAEjJ,OADAvR,KAAKa,mBAAmB2Q,wBAAwBN,EAAYC,EAAgBC,EAAgBC,EAAgBC,EAAuBC,GAC5HvR,I,EAGXJ,EAAAC,QAAiBs2B,C,uCC/EhB,WAIG,IAGIQ,GAAY,EAQZC,EAAQ,SAAUC,GAEE,MAAhBA,IACAA,EAAe,MAGnB,IAAIC,EAAW,SAAUC,EAAOziB,EAAOJ,GACnC,IAAK,IAAIlS,EAAIsS,EAAOtS,EAAIkS,EAAKlS,IACzB+0B,EAAM/0B,GAAW,EAAJA,EAEjB,GAAI,EAAIqrB,EAAMtW,MAAMsW,EAAMtW,MAAM9U,OAAS,GAAI,CAEzC,IADA,IAAI+0B,EAAe3J,EAAMtW,MAAM9U,OAAS,EACjC,EAAIorB,EAAMtW,MAAMigB,IACnBA,IAEJD,EAAMziB,IAAW0iB,C,GAIrBC,EAAY,SAAUC,EAAQ5iB,EAAOJ,GACrC,IAAK,IAAIlS,EAAIsS,EAAOtS,EAAIkS,EAAKlS,IACzBk1B,EAAOl1B,IAAOA,EAAI,C,EAItBm1B,EAAU,SAAUC,GAEpB,IAAIC,EA9Bc,EA8BHD,EAGXE,EAAiBC,EAAeriB,EAAKsiB,OAAQtiB,EAAKuiB,MAAOJ,GAC7DP,EAASQ,EAAgBpiB,EAAK6B,MAAM9U,OAAQo1B,GAC5CC,EAAe7pB,IAAIyH,EAAK6B,OACxB7B,EAAK6B,MAAQ,KACb7B,EAAK6B,MAAQugB,EAEb,IAAII,EAAkBH,EAAelK,EAAMmK,OAAQnK,EAAMoK,MAAOJ,GAChEJ,EAAUS,EAAiBrK,EAAMtW,MAAM9U,OAAQo1B,GAC/CK,EAAgBjqB,IAAI4f,EAAMtW,OAC1BsW,EAAMtW,MAAQ,KACdsW,EAAMtW,MAAQ2gB,C,EAGdC,EAAoBC,EAEpB1iB,EAAO,CACPsiB,OArDU,KAsDVC,MApDS,EAqDT1gB,MAAOwgB,EAvDG,KAED,EAqDsCV,IAG/CxJ,EAAQ,CACRmK,OA1DW,KA2DXC,MAzDU,EA0DV1gB,MAAOwgB,EA5DI,KAED,EA0DuCV,IAarD,OATA3hB,EAAK6B,MAnEK,GAmEY,EACtBsW,EAAMtW,MApEI,KAuEV+f,EAAS5hB,EAAK6B,MAAO6gB,EAAa1iB,EAAK6B,MAAM9U,QAG7Cg1B,EAAU5J,EAAMtW,MAAO6gB,EAAavK,EAAMtW,MAAM9U,QAEzC,CACH41B,cAAe,WACX,OAAO3iB,EAAK6B,K,EAEhB+gB,eAAgB,WACZ,OAAOzK,EAAMtW,K,EAEjBghB,eAAgB,SAAUxnB,GAEtB,OADA2E,EAAK6B,MAAQxG,EACNvQ,I,EAEXg4B,gBAAiB,SAAUvnB,GAEvB,OADA4c,EAAMtW,MAAQtG,EACPzQ,I,EAEXi4B,KAAM,WACF,OAAOvf,KAAKC,IAAIzD,EAAK6B,MAAM9U,OAAQorB,EAAMtW,MAAM9U,O,EAEnDi2B,QAAS,SAAUz2B,GACf,OAAIyT,EAAK6B,MAAM9U,OAAS,EAAIR,EACP,EAARA,EAONyT,EAAK6B,MAAMtV,E,EAEtB02B,SAAU,SAAU12B,GAChB,OAAI4rB,EAAMtW,MAAM9U,OAAS,EAAIR,GAChBA,EAAQ,EAOd4rB,EAAMtW,MAAMtV,E,EAEvB22B,QAAS,SAAU32B,EAAO42B,GAClBnjB,EAAK6B,MAAM9U,OAAS,EAAIR,GACxB01B,EAAQ11B,GAEZyT,EAAK6B,MAAMtV,GAAS42B,C,EAExBC,SAAU,SAAU72B,EAAO82B,GACnBlL,EAAMtW,MAAM9U,OAAS,EAAIR,GACzB01B,EAAQ11B,GAEZ4rB,EAAMtW,MAAMtV,GAAS82B,C,EAEzBC,mBAAoB,SAAU/2B,GAI1Bk2B,EAAoBl2B,C,EAExBg3B,mBAAoB,WAIhB,OAAOd,C,EAEXe,OAAQ,WAEJ,IADA,IAAIjyB,EAAazG,KAAKi4B,OAAS,IAEvB,GAAK5K,EAAMtW,MAAMtQ,KAGrBA,IAEJyO,EAAK6B,MAAQ7B,EAAK6B,MAAMrJ,SAAS,EAAGjH,EAAa,GACjD4mB,EAAMtW,MAAQsW,EAAMtW,MAAMrJ,SAAS,EAAGjH,EAAa,E,EAEvDkyB,KAAM,WAGF,IAFA,IAAIC,EAAe,EACfX,EAAO5K,EAAMtW,MAAM9U,OACdD,EAAI,EAAGA,EAAIi2B,EAAMj2B,IAClBqrB,EAAMtW,MAAM/U,GAAK,GACjB42B,IAGR,MAAO,CACHjE,IAAKsD,EACLY,OAAQD,EACRE,YAAab,EAAOW,GAAgBX,E,EAG5Cc,KAAM,WAEF,IAGI/2B,EAHAg3B,EAAY,GACZC,EAAa,GAGjB,IAAKj3B,EAAI,EAAGA,EAAIkT,EAAK6B,MAAM9U,OAAQD,IAC/Bg3B,EAAYA,EAAY,IAAMh5B,KAAKk4B,QAAQl2B,GAE/C,IAAKA,EAAI,EAAGA,EAAIqrB,EAAMtW,MAAM9U,OAAQD,IAChCi3B,EAAaA,EAAa,IAAMj5B,KAAKm4B,SAASn2B,GAMlD,OAHA8F,QAAQC,IAAI,QAAUixB,GACtBlxB,QAAQC,IAAI,QAAUkxB,GAEf,QAAUD,EAAY,SAAWC,C,IASpD,SAASC,EAAmBrC,GACxB72B,KAAKm5B,GAAKvC,EAAMC,GAChB72B,KAAKwhB,KAAO,E,CAyQhB,SAAS4X,EAAYD,GACjBn5B,KAAKm5B,GAAKA,EACVn5B,KAAKm5B,GAAGT,Q,CAhQZQ,EAAmBh5B,UAAU2E,OAAS,SAAUpB,EAAK41B,GAEjD,OADAr5B,KAAKwhB,KAAK7f,KAAK,CAAE2C,EAAGb,EAAKY,EAAGg1B,IACrBr5B,I,EAUXk5B,EAAmBh5B,UAAUC,MAAQ,SAAUqhB,EAAM8X,GAMjD,GAJY,MAAR9X,IACAA,EAAOxhB,KAAKwhB,MAGJ,MAARA,EACA,OAAO,IAAI4X,EAAYp5B,KAAKm5B,IAGlB,MAAVG,IACAA,GAAS,GAIb,IAAIC,EACA/X,EAAKtR,KAAI,SAAU5L,GACf,MAAO,CACHA,EAAGk1B,EAAkBl1B,EAAEA,EA3OvB,MA4OAD,EAAGC,EAAED,E,IA0BjB,OApBIrE,KAAKwhB,KADL8X,EACYC,EAGRA,EAAUnK,MAAK,SAAUqK,EAAIC,GAIzB,IAHA,IAAIC,EAAKF,EAAGn1B,EACRs1B,EAAKF,EAAGp1B,EACRu1B,EAAanhB,KAAKiT,IAAIgO,EAAG13B,OAAQ23B,EAAG33B,QAC/B+B,EAAM,EAAGA,EAAM61B,EAAY71B,IAChC,GAAI21B,EAAG31B,KAAS41B,EAAG51B,GAGnB,OAAO21B,EAAG31B,GAAO41B,EAAG51B,GAExB,OAAO21B,EAAG13B,OAAS23B,EAAG33B,M,IAIlCs3B,EAAY,KAEZv5B,KAAK85B,OAnQK,EAmQW,EAAG,EAAG95B,KAAKwhB,KAAKvf,QAC9B,IAAIm3B,EAAYp5B,KAAKm5B,G,EAMhCD,EAAmBh5B,UAAU45B,OAAS,SAAUC,EAAcxxB,EAAU+L,EAAOrS,GAE3E,IAAI+3B,EAAgBh6B,KAAKi6B,gBAAgB1xB,EAAU+L,EAAOrS,GACtD80B,EAAQ/2B,KAAKk6B,oBAAoBF,GAErCh6B,KAAKm6B,MAAMJ,EAAcC,EAAejD,GAExC,IAAK,IAAI/0B,EAAI,EAAGA,EAAIg4B,EAAc/3B,OAAQD,GAAQ,EAAG,CACjD,IAAIo4B,EAAaJ,EAAch4B,GAC/B,GApRQ,IAoRJo4B,EAAJ,CAGA,IAAIC,EAAcL,EAAch4B,EAAI,GAChCs4B,EAAYN,EAAch4B,EAAI,GAC9Bu4B,EAAcxD,EAAQqD,EAC1Bp6B,KAAK85B,OAAOS,EAAahyB,EAAW,EAAG8xB,EAAaC,EALhD,C,GASZpB,EAAmBh5B,UAAU+5B,gBAAkB,SAAU1xB,EAAU+L,EAAOrS,GACtE,IAAIu4B,EAAex6B,KAAKwhB,KAAKlN,GAAOhQ,EAAEiE,GAClCvG,EAAI,EACJg4B,EAAgB,IAAIxpB,WAAoB,EAATvO,GAEnC+3B,EAAch4B,KAAOw4B,EACrBR,EAAch4B,KAAOsS,EAIrB,IAFA,IAAImmB,EAAWnmB,EACXnR,EAAYmR,EACTmmB,EAAWnmB,EAAQrS,EAAQw4B,IAAY,CAC1C,IAAIl1B,EAAYvF,KAAKwhB,KAAKiZ,GAAUn2B,EAAEiE,GAClCiyB,IAAiBj1B,IACjBy0B,EAAch4B,KAAOy4B,EAAWt3B,EAEhC62B,EAAch4B,KAAOuD,EACrBy0B,EAAch4B,KAAOy4B,EACrBD,EAAej1B,EACfpC,EAAYs3B,E,CAMpB,OAHAT,EAAch4B,KAAOy4B,EAAWt3B,EAChC62B,EAAgBA,EAActsB,SAAS,EAAG1L,E,EAK9Ck3B,EAAmBh5B,UAAUi6B,MAAQ,SAAUO,EAAWV,EAAejD,GAErE,IAII/0B,EAJAm3B,EAAKn5B,KAAKm5B,GAKd,IAHAA,EAAGf,QAAQsC,EAAW3D,GAGjB/0B,EAAI,EAAGA,EAAIg4B,EAAc/3B,OAAQD,GAAQ,EAAG,CAC7C,IAAIgQ,EAAOgoB,EAAch4B,GACrB24B,EAAW5D,EAAQ/kB,EASnB4oB,GAAmBzB,EAAGjB,QAAQyC,GAC9BE,GAAmB1B,EAAGhB,SAASwC,GAO/BA,IAAaxB,EAAGV,qBAChBU,EAAGb,SAASsC,GAAkBC,GAG9B1B,EAAGX,mBAAmBqC,GAE1B1B,EAAGf,QAAQyC,GAAkBD,GAE7B,IAAIvN,EAAQqN,EAIZ,GAHAvB,EAAGb,SAASqC,EAAUtN,GA5Vd,IA+VJrb,EAAoB,CACpB,IAAI7O,EAAY62B,EAAch4B,EAAI,GAK9BmX,EAAQnZ,KAAKwhB,KAAKre,GAAWkB,EAEpB,MAAT8U,IACAA,EAAQ,GAGZ,IAAIjE,GAASiE,EAAQ,EACrBggB,EAAGf,QAAQuC,EAAUzlB,E,IASjCgkB,EAAmBh5B,UAAUg6B,oBAAsB,SAAUF,GAoBzD,IAlBA,IAYIjD,EAZAoC,EAAKn5B,KAAKm5B,GAaV/M,EAAO+M,EAAGV,uBAQV,IAFA1B,EAAQ3K,EAAO4N,EAAc,IAEjB,EACR5N,GAAS+M,EAAGhB,SAAS/L,OADzB,CAWA,IADA,IAAI0O,GAAmB,EACd94B,EAAI,EAAGA,EAAIg4B,EAAc/3B,OAAQD,GAAQ,EAAG,CACjD,IACI+4B,EAAehE,EADRiD,EAAch4B,GAGzB,IAAKhC,KAAKg7B,aAAaD,GAAe,CAGlC3O,GAAS+M,EAAGhB,SAAS/L,GAKrB0O,GAAmB,EACnB,K,EAGR,GAAIA,EAEA,OAAO/D,C,GAQnBmC,EAAmBh5B,UAAU86B,aAAe,SAAUv5B,GAClD,IACI4rB,EADKrtB,KAAKm5B,GACChB,SAAS12B,GAMxB,OAxbU,IAwbNA,GAIA4rB,EAAQ,C,EAyBhB+L,EAAYl5B,UAAU+6B,QAAU,SAAUx3B,GAUtC,IARA,IAAI01B,EAAKn5B,KAAKm5B,GAGV5uB,EAASivB,EADb/1B,GA3dY,MA8dRy3B,EA5dM,EA6dNC,EAAQxE,EAEH30B,EAAI,EAAGA,EAAIuI,EAAOtI,OAAQD,IAAK,CACpC,IAAIgQ,EAAOzH,EAAOvI,GAGlB,IADAm5B,EAAQn7B,KAAKo7B,SAASF,EAAQlpB,MAChB2kB,EACV,OAAO,EAGX,GAAIwC,EAAGjB,QAAQiD,IAAU,EAErB,OAAO,EAGPD,EAASC,C,CAIjB,OAAO,C,EAUX/B,EAAYl5B,UAAUiF,OAAS,SAAU1B,GAQrC,IALA,IAAI8G,EAASivB,EADb/1B,GA9fY,MAigBRy3B,EA/fM,EAggBNC,EAAQxE,EAEH30B,EAAI,EAAGA,EAAIuI,EAAOtI,OAAQD,IAAK,CACpC,IAAIgQ,EAAOzH,EAAOvI,GAElB,IADAm5B,EAAQn7B,KAAKo7B,SAASF,EAAQlpB,MAChB2kB,EACV,OAAOA,EAEXuE,EAASC,C,CAGb,IAAIjmB,EAAOlV,KAAKm5B,GAAGjB,QAAQiD,GAC3B,OAAIjmB,GAAQ,GAECA,EAAO,EAGTyhB,C,EAYfyC,EAAYl5B,UAAUiE,mBAAqB,SAAUV,GASjD,IAPA,IAAI8G,EAASivB,EAAkB/1B,GAE3By3B,EAjiBM,EAkiBNC,EAAQxE,EAER9c,EAAS,GAEJ7X,EAAI,EAAGA,EAAIuI,EAAOtI,OAAQD,IAAK,CACpC,IAAIgQ,EAAOzH,EAAOvI,GAIlB,IAFAm5B,EAAQn7B,KAAKo7B,SAASF,EAAQlpB,MAEhB2kB,EAuBV,MAtBAuE,EAASC,EAGT,IAAIE,EAAcr7B,KAAKo7B,SAASD,EAhjB5B,GAkjBJ,GAAIE,IAAgB1E,EAAW,CAC3B,IAAIzhB,EAAOlV,KAAKm5B,GAAGjB,QAAQmD,GAEvBlvB,EAAI,GAEJ+I,GAAQ,IAER/I,EAAE9H,GAAM6Q,EAAO,GAInB/I,EAAE7H,EAAIg3B,EAAkBC,EAAUhxB,EAAQ,EAAGvI,EAAI,IAEjD6X,EAAOlY,KAAKwK,E,EAQxB,OAAO0N,C,EAGXuf,EAAYl5B,UAAUk7B,SAAW,SAAUF,EAAQlpB,GAC/C,IAAImpB,EAAQn7B,KAAKm5B,GAAGjB,QAAQgD,GAAUlpB,EACtC,OAAIhS,KAAKm5B,GAAGhB,SAASgD,KAAWD,EACrBC,EAEAxE,C,EAIfyC,EAAYl5B,UAAU+3B,KAAO,WACzB,OAAOj4B,KAAKm5B,GAAGlB,M,EAGnBmB,EAAYl5B,UAAUy4B,KAAO,WACzB,OAAO34B,KAAKm5B,GAAGR,M,EAGnBS,EAAYl5B,UAAU64B,KAAO,WACzB,OAAO/4B,KAAKm5B,GAAGJ,M,EAMnB,IAAIxB,EAAiB,SAAUC,EAAQC,EAAOQ,GAC1C,GAAIT,EACA,OAAOC,GACH,KAAK,EACL,OAAO,IAAI+D,UAAUvD,GACrB,KAAK,EACL,OAAO,IAAIjnB,WAAWinB,GACtB,KAAK,EACL,OAAO,IAAIznB,WAAWynB,GACtB,QACA,MAAM,IAAIwD,WAAW,4CAA8ChE,QAGvE,OAAOA,GACH,KAAK,EACL,OAAO,IAAIptB,WAAW4tB,GACtB,KAAK,EACL,OAAO,IAAI3sB,YAAY2sB,GACvB,KAAK,EACL,OAAO,IAAI1sB,YAAY0sB,GACvB,QACA,MAAM,IAAIwD,WAAW,4CAA8ChE,G,EAK3E8D,EAAY,SAAUG,EAAKC,EAAY15B,GACvC,IAAIsI,EAAS,IAAIqxB,YAAY35B,GACzB45B,EAAQ,IAAIxxB,WAAWE,EAAQ,EAAGtI,GAClC65B,EAAQJ,EAAIhuB,SAASiuB,EAAY15B,GAErC,OADA45B,EAAMpuB,IAAIquB,GACHD,C,EAUPrC,EAAoB,SAAU7yB,GAO9B,IAJA,IAAI8wB,EAAQ,IAAIptB,WAAW,IAAIuxB,YAAyB,EAAbj1B,EAAI1E,SAE3CD,EAAI,EAAGS,EAAI,EAERT,EAAI2E,EAAI1E,QAAQ,CACnB,IAAI85B,EAEAz0B,EAAaX,EAAIO,WAAWlF,KAChC,GAAIsF,GAAc,OAAUA,GAAc,MAAQ,CAE9C,IAAID,EAAQC,EACRF,EAAQT,EAAIO,WAAWlF,KAE3B,KAAIoF,GAAS,OAAUA,GAAS,OAM5B,OAAO,KALP20B,EACwB,MAAnB10B,EAAQ,OAAuB,OAC/BD,EAAQ,M,MAOjB20B,EAAez0B,EAGfy0B,EAAe,IAEftE,EAAMh1B,KAAOs5B,EAENA,EAAgB,MAEvBtE,EAAMh1B,KAAOs5B,IAAkB,EAAK,IACpCtE,EAAMh1B,KAAuB,GAAhBs5B,EAAwB,KAE9BA,EAAgB,OAEvBtE,EAAMh1B,KAAOs5B,IAAkB,GAAM,IACrCtE,EAAMh1B,KAAOs5B,GAAkB,EAAK,GAAQ,IAC5CtE,EAAMh1B,KAAuB,GAAhBs5B,EAAwB,KAE9BA,EAAgB,UAEvBtE,EAAMh1B,KAAOs5B,IAAkB,GAAM,IACrCtE,EAAMh1B,KAAOs5B,GAAkB,GAAM,GAAQ,IAC7CtE,EAAMh1B,KAAOs5B,GAAkB,EAAK,GAAQ,IAC5CtE,EAAMh1B,KAAuB,GAAhBs5B,EAAwB,I,CAO7C,OAAOtE,EAAM/pB,SAAS,EAAGjL,E,EAUzB64B,EAAoB,SAAU7D,GAM9B,IAJA,IACIzlB,EAAM2nB,EAAgBtyB,EAAOD,EAD7BT,EAAM,GAEN3E,EAAI,EAEDA,EAAIy1B,EAAMx1B,SAMT+P,GAJJ2nB,EAAKlC,EAAMz1B,MAEF,IAEE23B,EACAA,GAAO,GAAO,GAGP,GAALA,IAAc,EAAW,GAD7BlC,EAAMz1B,KAEJ23B,GAAO,GAAO,IAIP,GAALA,IAAc,IAAa,GAF/BlC,EAAMz1B,OAEkC,EAAW,GADnDy1B,EAAMz1B,MAOG,EAAL23B,IAAc,IAAa,GAH/BlC,EAAMz1B,OAGkC,IAAa,GAFrDy1B,EAAMz1B,OAEwD,EAAW,GADzEy1B,EAAMz1B,MAIJ,MACV2E,GAAO4I,OAAOC,aAAawC,IAI3B3K,EAAS,OADT2K,GAAQ,QACmB,GAC3B5K,EAAS,MAAiB,KAAP4K,EACnBrL,GAAO4I,OAAOC,aAAanI,EAAOD,IAIvC,OAAOT,C,EAKPq1B,EAAc,CACdz8B,QAAS,SAAUs3B,GACf,OAAO,IAAIqC,EAAmBrC,E,EAElCv2B,KAAM,SAAUiQ,EAAaE,GACzB,IAAI0oB,EAAKvC,EAAM,GAGf,OAFAuC,EAAGpB,eAAexnB,GAClB4oB,EAAGnB,gBAAgBvnB,GACZ,IAAI2oB,EAAYD,E,GAS3Bv5B,EAAAC,QAAiBm8B,CAGxB,CApxBA,E,uDCuBD,SAASC,IACLj8B,KAAK2E,WAAa,IAAIu3B,EAAW,UACjCl8B,KAAKwE,WAAa,GAClBxE,KAAK4Q,WAAa,IAAIsrB,EAAW,S,CAKrCD,EAAoB/7B,UAAUi8B,gBAAkB,SAAUC,GAGtD,IAFA,IAAIC,EAAqB,GAEhBr6B,EAAI,EAAGA,EAAIo6B,EAAQn6B,OAAQD,IAAK,CACrC,IAAIs6B,EAAQF,EAAQp6B,GAEpB,KAAIs6B,EAAMr6B,OAAS,GAAnB,CAIA,IAAIoB,EAAei5B,EAAM,GACrB34B,EAAU24B,EAAM,GAChB14B,EAAW04B,EAAM,GACjBz4B,EAAYy4B,EAAM,GAClBC,EAAUD,EAAMr4B,MAAM,GAAGwL,KAAK,KAG7B+sB,SAAS74B,IAAa64B,SAAS54B,IAAc44B,SAAS34B,IACvDiE,QAAQC,IAAIu0B,GAIhBD,EADoBr8B,KAAKy8B,IAAI94B,EAASC,EAAUC,EAAWR,EAAck5B,IACrCl5B,CAfhC,C,CAsBR,OAHArD,KAAK2E,WAAW+zB,SAChB14B,KAAK4Q,WAAW8nB,SAET2D,C,EAGXJ,EAAoB/7B,UAAUu8B,IAAM,SAAU94B,EAASC,EAAUC,EAAWR,EAAck5B,GACtF,IAAI93B,EAAgBzE,KAAK2E,WAAW4D,SAChCm0B,EAAS18B,KAAK4Q,WAAWrI,SAQ7B,OANAvI,KAAK2E,WAAWg4B,SAASh5B,GACzB3D,KAAK2E,WAAWg4B,SAAS/4B,GACzB5D,KAAK2E,WAAWg4B,SAAS94B,GACzB7D,KAAK2E,WAAWi4B,OAAOF,GACvB18B,KAAK4Q,WAAWisB,UAAUx5B,EAAe,IAAMk5B,GAExC93B,C,EAGXw3B,EAAoB/7B,UAAU48B,WAAa,SAAUC,EAAQC,GACzD,IAAIC,EAAUj9B,KAAKwE,WAAWu4B,GACf,MAAXE,IACAA,EAAU,IAEdA,EAAQt7B,KAAKq7B,GAEbh9B,KAAKwE,WAAWu4B,GAAUE,C,EAG9BhB,EAAoB/7B,UAAUg9B,kBAAoB,WAC9C,IAAI3yB,EAAS,IAAI2xB,EACbiB,EAAgB/zB,OAAOoY,KAAKxhB,KAAKwE,YAAYvC,OAEjD,IAAK,IAAIwB,KADT8G,EAAOqyB,OAAOO,GACEn9B,KAAKwE,WAAY,CAC7B,IAAI0oB,EAASltB,KAAKwE,WAAWf,GACzB25B,EAAkBlQ,EAAOjrB,OAC7BsI,EAAOqyB,OAAOl4B,SAASjB,IACvB8G,EAAOqyB,OAAOQ,GACd,IAAK,IAAIp7B,EAAI,EAAGA,EAAIkrB,EAAOjrB,OAAQD,IAC/BuI,EAAOqyB,OAAO1P,EAAOlrB,G,CAG7B,OAAOuI,EAAOmuB,Q,EAIlBuD,EAAoB/7B,UAAUs2B,eAAiB,SAAU6G,GAErD,OADAr9B,KAAK2E,WAAa,IAAIu3B,EAAWmB,GAC1Br9B,I,EAIXi8B,EAAoB/7B,UAAUu2B,cAAgB,SAAU4G,GAEpD,OADAr9B,KAAK4Q,WAAa,IAAIsrB,EAAWmB,GAC1Br9B,I,EAIXi8B,EAAoB/7B,UAAUw2B,cAAgB,SAAU2G,GACpD,IAAI9yB,EAAS,IAAI2xB,EAAWmB,GAI5B,IAHA9yB,EAAOhC,SAAW,EAClBvI,KAAKwE,WAAa,GAClB+F,EAAO+yB,YAEC/yB,EAAOA,OAAOtI,OAASsI,EAAOhC,SAAW,IAK7C,IAFA,IAAI9E,EAAM8G,EAAO+yB,UACbF,EAAkB7yB,EAAO+yB,UACpBt7B,EAAI,EAAGA,EAAIo7B,EAAiBp7B,IAAK,CACtC,IAAImX,EAAQ5O,EAAO+yB,UACnBt9B,KAAK88B,WAAWr5B,EAAK0V,E,CAG7B,OAAOnZ,I,EAQXi8B,EAAoB/7B,UAAU6C,YAAc,SAAUw6B,GAClD,IAAI94B,EAAgBC,SAAS64B,GAC7B,GAAIC,MAAM/4B,GAEN,MAAO,GAEX,IAAIi4B,EAAS18B,KAAK2E,WAAW84B,OAAOh5B,EAAgB,GACpD,OAAOzE,KAAK4Q,WAAW8sB,UAAUhB,E,EAGrC98B,EAAAC,QAAiBo8B,C,sCCZjB,SAAS0B,EAAWxqB,GAChB,IAAI0jB,EACJ,GAAW,MAAP1jB,EACA0jB,EAAe,YACZ,IAAmB,iBAAR1jB,EAEX,IAAIA,aAAe9I,WAGtB,OAFArK,KAAKuK,OAAS4I,OACdnT,KAAKuI,SAAW,GAIhB,aAAa4K,EAAM,uDAAuD,CAP1E0jB,EAAe1jB,CAO2D,CAG9EnT,KAAKuK,OAAS,IAAIF,WAAWwsB,GAC7B72B,KAAKuI,SAAW,C,CAGpBo1B,EAAWz9B,UAAU+3B,KAAO,WACxB,OAAOj4B,KAAKuK,OAAOtI,M,EAGvB07B,EAAWz9B,UAAU09B,WAAa,WAC9B,IAAIC,EAAY,IAAIxzB,WAAgC,EAArBrK,KAAKuK,OAAOtI,QAC3C47B,EAAUpwB,IAAIzN,KAAKuK,QACnBvK,KAAKuK,OAASszB,C,EAGlBF,EAAWz9B,UAAUw4B,OAAS,WAE1B,OADA14B,KAAKuK,OAASvK,KAAKuK,OAAOmD,SAAS,EAAG1N,KAAKuI,UACpCvI,KAAKuK,M,EAGhBozB,EAAWz9B,UAAUu8B,IAAM,SAAU3xB,GAC7B9K,KAAKuK,OAAOtI,OAASjC,KAAKuI,SAAW,GACrCvI,KAAK49B,aAET59B,KAAKuK,OAAOvK,KAAKuI,YAAcuC,C,EAGnC6yB,EAAWz9B,UAAU8H,IAAM,SAAUvG,GAKjC,OAJa,MAATA,IACAA,EAAQzB,KAAKuI,SACbvI,KAAKuI,UAAY,GAEjBvI,KAAKuK,OAAOtI,OAASR,EAAQ,EACtB,EAEJzB,KAAKuK,OAAO9I,E,EAIvBk8B,EAAWz9B,UAAUy8B,SAAW,SAAUmB,GACtC,GAAI,MAASA,EACT,MAAMA,EAAM,uBAEhB,IAAI12B,EAAS,IAAS02B,EAClBz2B,GAAS,MAASy2B,IAAQ,EAC9B99B,KAAKy8B,IAAIr1B,GACTpH,KAAKy8B,IAAIp1B,E,EAIbs2B,EAAWz9B,UAAU0E,SAAW,SAAUnD,GAKtC,GAJa,MAATA,IACAA,EAAQzB,KAAKuI,SACbvI,KAAKuI,UAAY,GAEjBvI,KAAKuK,OAAOtI,OAASR,EAAQ,EAC7B,OAAO,EAEX,IAAI2F,EAAQpH,KAAKuK,OAAO9I,GAEpB0X,GADQnZ,KAAKuK,OAAO9I,EAAQ,IACV,GAAK2F,EAI3B,OAHY,MAAR+R,IACPA,IAAUA,EAAS,EAAK,QAEdA,C,EAIXwkB,EAAWz9B,UAAU08B,OAAS,SAAUkB,GACpC,GAAI,WAAaA,EACb,MAAMA,EAAM,yBAEhB,IAAIC,EAAM,IAAaD,EACnBnE,GAAM,MAAamE,IAAQ,EAC3BlE,GAAM,SAAakE,IAAQ,GAC3BE,GAAM,WAAaF,IAAQ,GAC/B99B,KAAKy8B,IAAIsB,GACT/9B,KAAKy8B,IAAI9C,GACT35B,KAAKy8B,IAAI7C,GACT55B,KAAKy8B,IAAIuB,E,EAIbL,EAAWz9B,UAAUu9B,OAAS,SAAUh8B,GAKpC,GAJa,MAATA,IACAA,EAAQzB,KAAKuI,SACbvI,KAAKuI,UAAY,GAEjBvI,KAAKuK,OAAOtI,OAASR,EAAQ,EAC7B,OAAO,EAEX,IAAIs8B,EAAK/9B,KAAKuK,OAAO9I,GACjBk4B,EAAK35B,KAAKuK,OAAO9I,EAAQ,GACzBm4B,EAAK55B,KAAKuK,OAAO9I,EAAQ,GAG7B,OAFSzB,KAAKuK,OAAO9I,EAAQ,IAEf,KAAOm4B,GAAM,KAAOD,GAAM,GAAKoE,C,EAGjDJ,EAAWz9B,UAAUo9B,QAAU,WAC3B,IAAIt5B,EAAMhE,KAAKuI,SAEf,OADAvI,KAAKuI,UAAY,EACVvI,KAAKy9B,OAAOz5B,E,EAGvB25B,EAAWz9B,UAAU28B,UAAY,SAAUl2B,GAEvC,IADA,IAAI8wB,EA1OgB,SAAU9wB,GAO9B,IAJA,IAAI8wB,EAAQ,IAAIptB,WAAwB,EAAb1D,EAAI1E,QAE3BD,EAAI,EAAGS,EAAI,EAERT,EAAI2E,EAAI1E,QAAQ,CACnB,IAAI85B,EAEAz0B,EAAaX,EAAIO,WAAWlF,KAChC,GAAIsF,GAAc,OAAUA,GAAc,MAAQ,CAE9C,IAAID,EAAQC,EACRF,EAAQT,EAAIO,WAAWlF,KAE3B,KAAIoF,GAAS,OAAUA,GAAS,OAM5B,OAAO,KALP20B,EACwB,MAAnB10B,EAAQ,OAAuB,OAC/BD,EAAQ,M,MAOjB20B,EAAez0B,EAGfy0B,EAAe,IAEftE,EAAMh1B,KAAOs5B,EAENA,EAAgB,MAEvBtE,EAAMh1B,KAAOs5B,IAAkB,EAAK,IACpCtE,EAAMh1B,KAAuB,GAAhBs5B,EAAwB,KAE9BA,EAAgB,OAEvBtE,EAAMh1B,KAAOs5B,IAAkB,GAAM,IACrCtE,EAAMh1B,KAAOs5B,GAAkB,EAAK,GAAQ,IAC5CtE,EAAMh1B,KAAuB,GAAhBs5B,EAAwB,KAE9BA,EAAgB,UAEvBtE,EAAMh1B,KAAOs5B,IAAkB,GAAM,IACrCtE,EAAMh1B,KAAOs5B,GAAkB,GAAM,GAAQ,IAC7CtE,EAAMh1B,KAAOs5B,GAAkB,EAAK,GAAQ,IAC5CtE,EAAMh1B,KAAuB,GAAhBs5B,EAAwB,I,CAO7C,OAAOtE,EAAM/pB,SAAS,EAAGjL,E,CAkLbw7B,CAAkBt3B,GACrB3E,EAAI,EAAGA,EAAIy1B,EAAMx1B,OAAQD,IAC9BhC,KAAKy8B,IAAIhF,EAAMz1B,IAGnBhC,KAAKy8B,IAAI,E,EAGbkB,EAAWz9B,UAAUw9B,UAAY,SAAUj8B,GACvC,IACIoF,EADAq3B,EAAM,GAKV,IAHa,MAATz8B,IACAA,EAAQzB,KAAKuI,YAGTvI,KAAKuK,OAAOtI,OAASR,EAAQ,IAItB,KADXoF,EAAK7G,KAAKgI,IAAIvG,OAIVy8B,EAAIv8B,KAAKkF,GAIjB,OADA7G,KAAKuI,SAAW9G,EAlMI,SAAUg2B,GAM9B,IAJA,IACIzlB,EAAM2nB,EAAgBtyB,EAAOD,EAD7BT,EAAM,GAEN3E,EAAI,EAEDA,EAAIy1B,EAAMx1B,SAMT+P,GAJJ2nB,EAAKlC,EAAMz1B,MAEF,IAEE23B,EACAA,GAAO,GAAO,GAGP,GAALA,IAAc,EAAW,GAD7BlC,EAAMz1B,KAEJ23B,GAAO,GAAO,IAIP,GAALA,IAAc,IAAa,GAF/BlC,EAAMz1B,OAEkC,EAAW,GADnDy1B,EAAMz1B,MAOG,EAAL23B,IAAc,IAAa,GAH/BlC,EAAMz1B,OAGkC,IAAa,GAFrDy1B,EAAMz1B,OAEwD,EAAW,GADzEy1B,EAAMz1B,MAIJ,MACP2E,GAAO4I,OAAOC,aAAawC,IAI3B3K,EAAS,OADT2K,GAAQ,QACmB,GAC3B5K,EAAS,MAAiB,KAAP4K,EACnBrL,GAAO4I,OAAOC,aAAanI,EAAOD,IAI1C,OAAOT,C,CA0JAw3B,CAAkBD,E,EAG7Bt+B,EAAAC,QAAiB89B,C,sCCtQjB,SAASS,EAAgBC,EAAmBC,GACxCt+B,KAAKq+B,kBAAoBA,EACzBr+B,KAAKs+B,mBAAqBA,EAG1Bt+B,KAAKuK,OAAS,IAAIyG,WAAWqtB,EAAoBC,EAAqB,GACtEt+B,KAAKuK,OAAO,GAAK8zB,EACjBr+B,KAAKuK,OAAO,GAAK+zB,C,CAGrBF,EAAgBl+B,UAAUu8B,IAAM,SAAU8B,EAAYC,EAAax4B,GAC/D,IAAIvE,EAAQ88B,EAAav+B,KAAKs+B,mBAAqBE,EAAc,EACjE,GAAIx+B,KAAKuK,OAAOtI,OAASR,EAAQ,EAC7B,KAAM,kCAEVzB,KAAKuK,OAAO9I,GAASuE,C,EAGzBo4B,EAAgBl+B,UAAU8H,IAAM,SAAUu2B,EAAYC,GAClD,IAAI/8B,EAAQ88B,EAAav+B,KAAKs+B,mBAAqBE,EAAc,EACjE,GAAIx+B,KAAKuK,OAAOtI,OAASR,EAAQ,EAC7B,KAAM,kCAEV,OAAOzB,KAAKuK,OAAO9I,E,EAGvB28B,EAAgBl+B,UAAU+Q,oBAAsB,SAAUwtB,GACtDz+B,KAAKq+B,kBAAoBI,EAAwB,GACjDz+B,KAAKs+B,mBAAqBG,EAAwB,GAClDz+B,KAAKuK,OAASk0B,C,EAGlB7+B,EAAAC,QAAiBu+B,C,iFC/BjB,SAASM,IACL1+B,KAAK2E,WAAa,IAAIu3B,EAAW,UACjCl8B,KAAKwE,WAAa,GAClBxE,KAAK4Q,WAAa,IAAIsrB,EAAW,UACjCl8B,KAAK2+B,qBAAuB,I,CAIhCD,EAAkBx+B,UAAYkJ,OAAOC,OAAOgtB,EAAAn2B,WAE5Cw+B,EAAkBx+B,UAAU0+B,oBAAsB,SAAUD,GAExD,OADA3+B,KAAK2+B,qBAAuBA,EACrB3+B,I,EAGX0+B,EAAkBx+B,UAAUiF,OAAS,SAAU0B,GAC3C,OAAO7G,KAAK2+B,qBAAqBx5B,OAAO0B,E,EAG5C63B,EAAkBx+B,UAAU2+B,yBAA2B,SAAUh4B,GAC7D,OAAO7G,KAAK2+B,qBAAqBE,yBAAyBh4B,E,EAG9D63B,EAAkBx+B,UAAUsR,wBAA0B,SAAUN,EAAYC,EAAgBC,EAAgBC,EAAgBC,EAAuBC,GAC/IvR,KAAKw2B,eAAetlB,GACpBlR,KAAKy2B,cAActlB,GACnBnR,KAAK02B,cAActlB,GACnBpR,KAAK2+B,qBAAuBG,EAAAx+B,KAAyB+Q,EAAgBC,EAAuBC,E,EAGhG3R,EAAAC,QAAiB6+B,C,iFClCbK,EAAmB,UAOvB,SAASC,IACLh/B,KAAKi/B,uBAAyB,IAAI50B,WAAW,OAC7CrK,KAAKk/B,wBAA0B,IAAI3zB,YAAY,OAC/CvL,KAAKm/B,sBAAwB,I,CAUjCH,EAAoB1+B,KAAO,SAAU+Q,EAAgBC,EAAuBC,GACxE,IAAI6tB,EAAW,IAAIJ,EAInB,OAHAI,EAASH,uBAAyB5tB,EAClC+tB,EAASF,wBAA0B5tB,EACnC8tB,EAASD,sBAAwBE,EAAA/+B,KAAyBiR,GACnD6tB,C,EAGXJ,EAAoBM,kBAAoB,SAAU35B,EAAU45B,GACxD,IAAIC,EAAWD,EAAoB,GAC/BE,EAAS/6B,SAAS66B,EAAoB,IACtCG,EAAWh7B,SAAS66B,EAAoB,IACxCI,EAAaj7B,SAAS66B,EAAoB,IAC9C,OAAK/C,SAASiD,IAAuB,IAAXA,GAA2B,IAAXA,GACtC33B,QAAQC,IAAI,6CAA+C03B,GACpD,OAENjD,SAASkD,IAA2B,IAAbA,GAA+B,IAAbA,GAC1C53B,QAAQC,IAAI,4CAA8C23B,GACnD,OAENlD,SAASmD,IAAeA,EAAa,GACtC73B,QAAQC,IAAI,0CAA4C43B,GACjD,MAKJ,IAAIC,EAAej6B,EAAU65B,EAHR,IAAXC,EACe,IAAbC,EAEmDC,E,EAG1EX,EAAoBa,qBAAuB,SAAUC,GACjD,IAAIxrB,EAAQ5P,SAASo7B,EAAwB,IACzCC,EAAmBD,EAAwB,GAC3CE,EAAsB,EAAKF,EAAwB79B,OAAU69B,EAAwB77B,MAAM,GAAK,GAIpG,QAHKu4B,SAASloB,IAAUA,EAAQ,GAAKA,EAAQ,QACzCxM,QAAQC,IAAI,yCAA2CuM,GAEpD,CAAEA,MAAOA,EAAO2rB,QAASF,EAAkBG,WAAYF,E,EAGlEhB,EAAoBmB,0BAA4B,SAAUL,GACtD,IAAIxrB,EAAQ5P,SAASo7B,EAAwB,IACzC5rB,EAAMxP,SAASo7B,EAAwB,IACvCC,EAAmBD,EAAwB,GAC3CE,EAAsB,EAAKF,EAAwB79B,OAAU69B,EAAwB77B,MAAM,GAAK,GAOpG,QANKu4B,SAASloB,IAAUA,EAAQ,GAAKA,EAAQ,QACzCxM,QAAQC,IAAI,yCAA2CuM,KAEtDkoB,SAAStoB,IAAQA,EAAM,GAAKA,EAAM,QACnCpM,QAAQC,IAAI,yCAA2CmM,GAEpD,CAAEI,MAAOA,EAAOJ,IAAKA,EAAK+rB,QAASF,EAAkBG,WAAYF,E,EAO5EhB,EAAoB9+B,UAAUkgC,qBAAuB,SAAUC,GAE3D,IAAIC,EACJ,GAAwB,MAApBD,EACA,IAAK,IAAIr+B,EAAI,EAAGA,EAAIq+B,EAAiBp+B,OAAQD,IAAK,CAC9C,IAAIi7B,EAAUoD,EAAiBr+B,GAC3BkS,EAAM+oB,EAAQ/oB,KAAO+oB,EAAQ3oB,MACjC,IAAKgsB,EAAarD,EAAQ3oB,MAAOgsB,GAAcpsB,EAAKosB,IAAc,CAG9DtgC,KAAKi/B,uBAAuBqB,GAActgC,KAAKm/B,sBAAsBh6B,OAAO83B,EAAQgD,SAEpF,IAAK,IAAIx9B,EAAI,EAAGA,EAAIw6B,EAAQiD,WAAWj+B,OAAQQ,IAAK,CAChD,IAAI89B,EAASvgC,KAAKk/B,wBAAwBoB,GACtCN,EAAsB/C,EAAQiD,WAAWz9B,GAC7C,GAA2B,MAAvBu9B,EAAJ,CAGA,IAAIr6B,EAAW3F,KAAKm/B,sBAAsBh6B,OAAO66B,GACjD,GAAgB,MAAZr6B,EAIJ46B,GADmB,GAAK56B,EAExB3F,KAAKk/B,wBAAwBoB,GAAcC,CARvC,C,GAapB,IAAIC,EAAaxgC,KAAKm/B,sBAAsBh6B,OAAO45B,GACnD,GAAkB,MAAdyB,EAGJ,IAAKF,EAAa,EAAGA,EAAatgC,KAAKi/B,uBAAuBh9B,OAAQq+B,IAElB,IAA5CtgC,KAAKi/B,uBAAuBqB,KAE5BtgC,KAAKi/B,uBAAuBqB,GAAc,GAAKE,E,EAU3DxB,EAAoB9+B,UAAU2+B,yBAA2B,SAAUh4B,GAC/D,IAQI45B,EARAC,EAAU,GAOV1uB,EAAOnL,EAAGK,WAAW,GAMzB,GAJI8K,EAAOhS,KAAKk/B,wBAAwBj9B,SACpCw+B,EAAUzgC,KAAKk/B,wBAAwBltB,IAG5B,MAAXyuB,GAA+B,IAAZA,EACnB,OAAOC,EAGX,IAAK,IAAIC,EAAM,EAAGA,EAAM,GAAIA,IACxB,GAAIF,GAAc,GAAKE,IAAU,IAAQ,EAAG,CACxC,IAAIC,EAAkB5gC,KAAKm/B,sBAAsB0B,kBAAkBF,GACnE,GAAuB,MAAnBC,EACA,SAEJF,EAAQ/+B,KAAKi/B,E,CAGrB,OAAOF,C,EASX1B,EAAoB9+B,UAAUiF,OAAS,SAAU0B,GAE7C,IAAIlB,EAEAqM,EAAOnL,EAAGK,WAAW,GAYzB,OAXInD,EAAA+C,gBAAqCD,GAErClB,EAAW3F,KAAKm/B,sBAAsBh6B,OAAO45B,GACtC/sB,EAAOhS,KAAKi/B,uBAAuBh9B,SAC1C0D,EAAW3F,KAAKi/B,uBAAuBjtB,IAG3B,MAAZrM,IACAA,EAAW3F,KAAKm/B,sBAAsBh6B,OAAO45B,IAG1C/+B,KAAKm/B,sBAAsB0B,kBAAkBl7B,E,EAGxD/F,EAAAC,QAAiBm/B,C,oEClLjB,SAAS8B,IACL9gC,KAAKkQ,IAAM,GACXlQ,KAAK+gC,aAAe,E,CAQxBD,EAAoBxgC,KAAO,SAAUiR,GAKjC,IAJA,IAAIyvB,EAAa,IAAIF,EACjBG,EAAgC,GAEhC12B,EAAS,IAAI2xB,EAAW3qB,GACrBhH,EAAOhC,SAAW,EAAIgC,EAAO0tB,QAAQ,CACxC,IAAItyB,EAAWs7B,EAA8Bh/B,OACzCoD,EAAmBkF,EAAOvC,MAC1B1C,EAAciF,EAAOvC,MACrB23B,EAAap1B,EAAOkzB,SACpBh4B,EAAa8E,EAAOmzB,YACxBuD,EAA8Bt/B,KAAK,IAAIi+B,EAAej6B,EAAUF,EAAYJ,EAAkBC,EAAaq6B,G,CAK/G,OAFAqB,EAAWE,KAAKD,GAETD,C,EAOXF,EAAoB5gC,UAAUghC,KAAO,SAAUD,GAC3C,GAAqC,MAAjCA,EAGJ,IAAK,IAAIj/B,EAAI,EAAGA,EAAIi/B,EAA8Bh/B,OAAQD,IAAK,CAC3D,IAAI4+B,EAAkBK,EAA8Bj/B,GACpDhC,KAAKkQ,IAAIlO,GAAK4+B,EACd5gC,KAAK+gC,aAAaH,EAAgBn7B,YAAczD,C,GASxD8+B,EAAoB5gC,UAAU2gC,kBAAoB,SAAUl7B,GACxD,OAAO3F,KAAKkQ,IAAIvK,E,EAQpBm7B,EAAoB5gC,UAAUiF,OAAS,SAAUM,GAC7C,IAAIE,EAAW3F,KAAK+gC,aAAat7B,GACjC,OAAgB,MAAZE,EACO,KAEJA,C,EAOXm7B,EAAoB5gC,UAAUihC,SAAW,WAErC,IADA,IAAI52B,EAAS,IAAI2xB,EACRl6B,EAAI,EAAGA,EAAIhC,KAAKkQ,IAAIjO,OAAQD,IAAK,CACtC,IAAIo/B,EAAaphC,KAAKkQ,IAAIlO,GAC1BuI,EAAOkyB,IAAI2E,EAAW/7B,kBACtBkF,EAAOkyB,IAAI2E,EAAW97B,aACtBiF,EAAOqyB,OAAOwE,EAAWzB,YACzBp1B,EAAOsyB,UAAUuE,EAAW37B,W,CAGhC,OADA8E,EAAOmuB,SACAnuB,EAAOA,M,EAGlB3K,EAAAC,QAAiBihC,C,sCCzEjBlhC,EAAAC,QARA,SAAwB8F,EAAUF,EAAYJ,EAAkBC,EAAaq6B,GACzE3/B,KAAK2F,SAAWA,EAChB3F,KAAKyF,WAAaA,EAClBzF,KAAKqF,iBAAmBA,EACxBrF,KAAKsF,YAAcA,EACnBtF,KAAK2/B,WAAaA,C,yHCKtB,SAAS0B,IAGLrhC,KAAKshC,YAAc,GACnBthC,KAAKuhC,YAAc,GACnBvhC,KAAKwhC,WAAa,IAAIC,EACtBzhC,KAAK0hC,WAAa,IAAIC,C,CAG1BN,EAAkBnhC,UAAU0hC,uBAAyB,SAAUC,GAC3D,IAAIC,EAAYD,EAAK5+B,MAAM,KAE3B,OADAjD,KAAKshC,YAAY3/B,KAAKmgC,GACf9hC,I,EAOXqhC,EAAkBnhC,UAAU6hC,kBAAoB,SAAUF,GAEtD,OADA7hC,KAAKwhC,WAAWQ,QAAQH,GACjB7hC,I,EAGXqhC,EAAkBnhC,UAAU+hC,eAAiB,SAAUJ,GAEnD,OADA7hC,KAAK0hC,WAAWM,QAAQH,GACjB7hC,I,EAOXqhC,EAAkBnhC,UAAUgiC,cAAgB,SAAUL,GAElD,OADA7hC,KAAKuhC,YAAY5/B,KAAKkgC,EAAK5+B,MAAM,MAC1BjD,I,EAGXqhC,EAAkBnhC,UAAUC,MAAQ,WAChC,IAAIgiC,EAAeniC,KAAKoiC,2BACpBvhC,EAAqBb,KAAKqiC,yBAE9B,OAAO,IAAIxyB,EAAoBsyB,EAAa5+B,KAAM4+B,EAAavhC,sBAAuBZ,KAAKwhC,WAAWrhC,QAASU,E,EAQnHwgC,EAAkBnhC,UAAUkiC,yBAA2B,WAEnD,IAAIxhC,EAAwB,IAAIy1B,EAG5BgG,EAAqBz7B,EAAsBu7B,gBAAgBn8B,KAAKshC,aAEhE/9B,EAAOvD,KAAKsiC,mBAEhB,IAAK,IAAI79B,KAAiB43B,EAAoB,CAC1C,IAAIh5B,EAAeg5B,EAAmB53B,GAClCf,EAAUH,EAAK4B,OAAO9B,GAO1BzC,EAAsBk8B,WAAWp5B,EAASe,E,CAG9C,MAAO,CACHlB,KAAMA,EACN3C,sBAAuBA,E,EAI/BygC,EAAkBnhC,UAAUmiC,uBAAyB,WAEjD,IAAIE,EAAiB,IAAIhM,EAGrB8F,EAAqBkG,EAAepG,gBAAgBn8B,KAAKuhC,aAEzDnC,EAAWp/B,KAAK0hC,WAAWvhC,QAI/B,IAAK,IAAIsE,KAFT89B,EAAe3D,oBAAoBQ,GAET/C,EAAoB,CAC1C,IAAI52B,EAAa42B,EAAmB53B,GAChCkB,EAAWy5B,EAASD,sBAAsBh6B,OAAOM,GAOrD88B,EAAezF,WAAWn3B,EAAUlB,E,CAGxC,OAAO89B,C,EAQXlB,EAAkBnhC,UAAUoiC,iBAAmB,WAC3C,IAAI5+B,EAAU,EACV8+B,EAAQxiC,KAAKshC,YAAYpxB,KAAI,SAAUosB,GAEvC,MAAO,CAAEh4B,EADUg4B,EAAM,GACCj4B,EAAGX,I,IAIjC,OADc0yB,EAAA72B,QAAoB,SACnBY,MAAMqiC,E,EAGzB5iC,EAAAC,QAAiBwhC,C,uDCpIjB,SAASoB,IACLziC,KAAK0iC,MAAQ,EACb1iC,KAAK2iC,gBAAkB,I,CAG3BF,EAAuBviC,UAAU8hC,QAAU,SAAUH,GACjD,GAAmB,IAAf7hC,KAAK0iC,MAAa,CAClB,IAAIE,EAAaf,EAAK5+B,MAAM,KACxBo7B,EAAoBuE,EAAW,GAC/BtE,EAAqBsE,EAAW,GAEpC,GAAIvE,EAAoB,GAAKC,EAAqB,EAC9C,KAAM,4BAKV,OAFAt+B,KAAK2iC,gBAAkB,IAAIrM,EAAgB+H,EAAmBC,GAC9Dt+B,KAAK0iC,QACE1iC,I,CAGX,IAAI6iC,EAAQhB,EAAK5+B,MAAM,KAEvB,GAAqB,IAAjB4/B,EAAM5gC,OACN,OAAOjC,KAGX,IAAIu+B,EAAa75B,SAASm+B,EAAM,IAC5BrE,EAAc95B,SAASm+B,EAAM,IAC7B78B,EAAOtB,SAASm+B,EAAM,IAE1B,GAAItE,EAAa,GAAKC,EAAc,IAAMhC,SAAS+B,KAAgB/B,SAASgC,IACxEx+B,KAAK2iC,gBAAgBtE,mBAAqBE,GAAcv+B,KAAK2iC,gBAAgBrE,oBAAsBE,EACnG,KAAM,4BAKV,OAFAx+B,KAAK2iC,gBAAgBlG,IAAI8B,EAAYC,EAAax4B,GAClDhG,KAAK0iC,QACE1iC,I,EAGXyiC,EAAuBviC,UAAUC,MAAQ,WACrC,OAAOH,KAAK2iC,e,EAGhB/iC,EAAAC,QAAiB4iC,C,oEC/CbK,EAAoB,8BACpBC,EAAwB,oDACxBC,EAA8B,uEAMlC,SAASC,IACLjjC,KAAKo/B,SAAW,IAAIN,EACpB9+B,KAAKo/B,SAASD,sBAAwB,IAAIE,EAC1Cr/B,KAAKihC,8BAAgC,GACrCjhC,KAAKqgC,iBAAmB,E,CAG5B4C,EAA2B/iC,UAAU8hC,QAAU,SAAUH,GACrD,IAAItC,EAAsBuD,EAAqBI,KAAKrB,GACpD,GAA2B,MAAvBtC,EAAJ,CASA,IAAIO,EAA0BiD,EAAyBG,KAAKrB,GAC5D,GAA+B,MAA3B/B,EAAiC,CACjC,IAAI7C,EAAU6B,EAAoBe,qBAAqBC,GACvD9/B,KAAKqgC,iBAAiB1+B,KAAKs7B,E,CAE/B,IAAIkG,EAAgCH,EAA+BE,KAAKrB,GACxE,GAAqC,MAAjCsB,EAAuC,CACvC,IAAIC,EAAgBtE,EAAoBqB,0BAA0BgD,GAClEnjC,KAAKqgC,iBAAiB1+B,KAAKyhC,E,MAjB/B,CACI,IAAIz9B,EAAW3F,KAAKihC,8BAA8Bh/B,OAC9Cm/B,EAAatC,EAAoBQ,kBAAkB35B,EAAU45B,GACjE,GAAkB,MAAd6B,EACA,OAEJphC,KAAKihC,8BAA8Bt/B,KAAKy/B,E,GAehD6B,EAA2B/iC,UAAUC,MAAQ,WAIzC,OAFAH,KAAKo/B,SAASD,sBAAsB+B,KAAKlhC,KAAKihC,+BAC9CjhC,KAAKo/B,SAASgB,qBAAqBpgC,KAAKqgC,kBACjCrgC,KAAKo/B,Q,EAGhBx/B,EAAAC,QAAiBojC,C","sources":["node_modules/kuromoji/src/kuromoji.js","node_modules/kuromoji/src/TokenizerBuilder.js","node_modules/kuromoji/src/Tokenizer.js","node_modules/kuromoji/src/viterbi/ViterbiBuilder.js","node_modules/kuromoji/src/viterbi/ViterbiNode.js","node_modules/kuromoji/src/viterbi/ViterbiLattice.js","node_modules/kuromoji/src/util/SurrogateAwareString.js","node_modules/kuromoji/src/viterbi/ViterbiSearcher.js","node_modules/kuromoji/src/util/IpadicFormatter.js","node_modules/kuromoji/src/loader/BrowserDictionaryLoader.js","node_modules/zlibjs/bin/gunzip.min.js","node_modules/kuromoji/src/loader/DictionaryLoader.js","node_modules/path-browserify/index.js","node_modules/process/browser.js","node_modules/async/dist/async.js","node_modules/kuromoji/src/dict/DynamicDictionaries.js","node_modules/doublearray/doublearray.js","node_modules/kuromoji/src/dict/TokenInfoDictionary.js","node_modules/kuromoji/src/util/ByteBuffer.js","node_modules/kuromoji/src/dict/ConnectionCosts.js","node_modules/kuromoji/src/dict/UnknownDictionary.js","node_modules/kuromoji/src/dict/CharacterDefinition.js","node_modules/kuromoji/src/dict/InvokeDefinitionMap.js","node_modules/kuromoji/src/dict/CharacterClass.js","node_modules/kuromoji/src/dict/builder/DictionaryBuilder.js","node_modules/kuromoji/src/dict/builder/ConnectionCostsBuilder.js","node_modules/kuromoji/src/dict/builder/CharacterDefinitionBuilder.js"],"sourcesContent":["/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar TokenizerBuilder = require(\"./TokenizerBuilder\");\nvar DictionaryBuilder = require(\"./dict/builder/DictionaryBuilder\");\n\n// Public methods\nvar kuromoji = {\n    builder: function (option) {\n        return new TokenizerBuilder(option);\n    },\n    dictionaryBuilder: function () {\n        return new DictionaryBuilder();\n    }\n};\n\nmodule.exports = kuromoji;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar Tokenizer = require(\"./Tokenizer\");\nvar DictionaryLoader = require(\"./loader/NodeDictionaryLoader\");\n\n/**\n * TokenizerBuilder create Tokenizer instance.\n * @param {Object} option JSON object which have key-value pairs settings\n * @param {string} option.dicPath Dictionary directory path (or URL using in browser)\n * @constructor\n */\nfunction TokenizerBuilder(option) {\n    if (option.dicPath == null) {\n        this.dic_path = \"dict/\";\n    } else {\n        this.dic_path = option.dicPath;\n    }\n}\n\n/**\n * Build Tokenizer instance by asynchronous manner\n * @param {TokenizerBuilder~onLoad} callback Callback function\n */\nTokenizerBuilder.prototype.build = function (callback) {\n    var loader = new DictionaryLoader(this.dic_path);\n    loader.load(function (err, dic) {\n        callback(err, new Tokenizer(dic));\n    });\n};\n\n/**\n * Callback used by build\n * @callback TokenizerBuilder~onLoad\n * @param {Object} err Error object\n * @param {Tokenizer} tokenizer Prepared Tokenizer\n */\n\nmodule.exports = TokenizerBuilder;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ViterbiBuilder = require(\"./viterbi/ViterbiBuilder\");\nvar ViterbiSearcher = require(\"./viterbi/ViterbiSearcher\");\nvar IpadicFormatter = require(\"./util/IpadicFormatter\");\n\nvar PUNCTUATION = /、|。/;\n\n/**\n * Tokenizer\n * @param {DynamicDictionaries} dic Dictionaries used by this tokenizer\n * @constructor\n */\nfunction Tokenizer(dic) {\n    this.token_info_dictionary = dic.token_info_dictionary;\n    this.unknown_dictionary = dic.unknown_dictionary;\n    this.viterbi_builder = new ViterbiBuilder(dic);\n    this.viterbi_searcher = new ViterbiSearcher(dic.connection_costs);\n    this.formatter = new IpadicFormatter();  // TODO Other dictionaries\n}\n\n/**\n * Split into sentence by punctuation\n * @param {string} input Input text\n * @returns {Array.<string>} Sentences end with punctuation\n */\nTokenizer.splitByPunctuation = function (input) {\n    var sentences = [];\n    var tail = input;\n    while (true) {\n        if (tail === \"\") {\n            break;\n        }\n        var index = tail.search(PUNCTUATION);\n        if (index < 0) {\n            sentences.push(tail);\n            break;\n        }\n        sentences.push(tail.substring(0, index + 1));\n        tail = tail.substring(index + 1);\n    }\n    return sentences;\n};\n\n/**\n * Tokenize text\n * @param {string} text Input text to analyze\n * @returns {Array} Tokens\n */\nTokenizer.prototype.tokenize = function (text) {\n    var sentences = Tokenizer.splitByPunctuation(text);\n    var tokens = [];\n    for (var i = 0; i < sentences.length; i++) {\n        var sentence = sentences[i];\n        this.tokenizeForSentence(sentence, tokens);\n    }\n    return tokens;\n};\n\nTokenizer.prototype.tokenizeForSentence = function (sentence, tokens) {\n    if (tokens == null) {\n        tokens = [];\n    }\n    var lattice = this.getLattice(sentence);\n    var best_path = this.viterbi_searcher.search(lattice);\n    var last_pos = 0;\n    if (tokens.length > 0) {\n        last_pos = tokens[tokens.length - 1].word_position;\n    }\n\n    for (var j = 0; j < best_path.length; j++) {\n        var node = best_path[j];\n\n        var token, features, features_line;\n        if (node.type === \"KNOWN\") {\n            features_line = this.token_info_dictionary.getFeatures(node.name);\n            if (features_line == null) {\n                features = [];\n            } else {\n                features = features_line.split(\",\");\n            }\n            token = this.formatter.formatEntry(node.name, last_pos + node.start_pos, node.type, features);\n        } else if (node.type === \"UNKNOWN\") {\n            // Unknown word\n            features_line = this.unknown_dictionary.getFeatures(node.name);\n            if (features_line == null) {\n                features = [];\n            } else {\n                features = features_line.split(\",\");\n            }\n            token = this.formatter.formatUnknownEntry(node.name, last_pos + node.start_pos, node.type, features, node.surface_form);\n        } else {\n            // TODO User dictionary\n            token = this.formatter.formatEntry(node.name, last_pos + node.start_pos, node.type, []);\n        }\n\n        tokens.push(token);\n    }\n\n    return tokens;\n};\n\n/**\n * Build word lattice\n * @param {string} text Input text to analyze\n * @returns {ViterbiLattice} Word lattice\n */\nTokenizer.prototype.getLattice = function (text) {\n    return this.viterbi_builder.build(text);\n};\n\nmodule.exports = Tokenizer;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ViterbiNode = require(\"./ViterbiNode\");\nvar ViterbiLattice = require(\"./ViterbiLattice\");\nvar SurrogateAwareString = require(\"../util/SurrogateAwareString\");\n\n/**\n * ViterbiBuilder builds word lattice (ViterbiLattice)\n * @param {DynamicDictionaries} dic dictionary\n * @constructor\n */\nfunction ViterbiBuilder(dic) {\n    this.trie = dic.trie;\n    this.token_info_dictionary = dic.token_info_dictionary;\n    this.unknown_dictionary = dic.unknown_dictionary;\n}\n\n/**\n * Build word lattice\n * @param {string} sentence_str Input text\n * @returns {ViterbiLattice} Word lattice\n */\nViterbiBuilder.prototype.build = function (sentence_str) {\n    var lattice = new ViterbiLattice();\n    var sentence = new SurrogateAwareString(sentence_str);\n\n    var key, trie_id, left_id, right_id, word_cost;\n    for (var pos = 0; pos < sentence.length; pos++) {\n        var tail = sentence.slice(pos);\n        var vocabulary = this.trie.commonPrefixSearch(tail);\n        for (var n = 0; n < vocabulary.length; n++) {  // Words in dictionary do not have surrogate pair (only UCS2 set)\n            trie_id = vocabulary[n].v;\n            key = vocabulary[n].k;\n\n            var token_info_ids = this.token_info_dictionary.target_map[trie_id];\n            for (var i = 0; i < token_info_ids.length; i++) {\n                var token_info_id = parseInt(token_info_ids[i]);\n\n                left_id = this.token_info_dictionary.dictionary.getShort(token_info_id);\n                right_id = this.token_info_dictionary.dictionary.getShort(token_info_id + 2);\n                word_cost = this.token_info_dictionary.dictionary.getShort(token_info_id + 4);\n\n                // node_name, cost, start_index, length, type, left_id, right_id, surface_form\n                lattice.append(new ViterbiNode(token_info_id, word_cost, pos + 1, key.length, \"KNOWN\", left_id, right_id, key));\n            }\n        }\n\n        // Unknown word processing\n        var surrogate_aware_tail = new SurrogateAwareString(tail);\n        var head_char = new SurrogateAwareString(surrogate_aware_tail.charAt(0));\n        var head_char_class = this.unknown_dictionary.lookup(head_char.toString());\n        if (vocabulary == null || vocabulary.length === 0 || head_char_class.is_always_invoke === 1) {\n            // Process unknown word\n            key = head_char;\n            if (head_char_class.is_grouping === 1 && 1 < surrogate_aware_tail.length) {\n                for (var k = 1; k < surrogate_aware_tail.length; k++) {\n                    var next_char = surrogate_aware_tail.charAt(k);\n                    var next_char_class = this.unknown_dictionary.lookup(next_char);\n                    if (head_char_class.class_name !== next_char_class.class_name) {\n                        break;\n                    }\n                    key += next_char;\n                }\n            }\n\n            var unk_ids = this.unknown_dictionary.target_map[head_char_class.class_id];\n            for (var j = 0; j < unk_ids.length; j++) {\n                var unk_id = parseInt(unk_ids[j]);\n\n                left_id = this.unknown_dictionary.dictionary.getShort(unk_id);\n                right_id = this.unknown_dictionary.dictionary.getShort(unk_id + 2);\n                word_cost = this.unknown_dictionary.dictionary.getShort(unk_id + 4);\n\n                // node_name, cost, start_index, length, type, left_id, right_id, surface_form\n                lattice.append(new ViterbiNode(unk_id, word_cost, pos + 1, key.length, \"UNKNOWN\", left_id, right_id, key.toString()));\n            }\n        }\n    }\n    lattice.appendEos();\n\n    return lattice;\n};\n\nmodule.exports = ViterbiBuilder;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * ViterbiNode is a node of ViterbiLattice\n * @param {number} node_name Word ID\n * @param {number} node_cost Word cost to generate\n * @param {number} start_pos Start position from 1\n * @param {number} length Word length\n * @param {string} type Node type (KNOWN, UNKNOWN, BOS, EOS, ...)\n * @param {number} left_id Left context ID\n * @param {number} right_id Right context ID\n * @param {string} surface_form Surface form of this word\n * @constructor\n */\nfunction ViterbiNode(node_name, node_cost, start_pos, length, type, left_id, right_id, surface_form) {\n    this.name = node_name;\n    this.cost = node_cost;\n    this.start_pos = start_pos;\n    this.length = length;\n    this.left_id = left_id;\n    this.right_id = right_id;\n    this.prev = null;\n    this.surface_form = surface_form;\n    if (type === \"BOS\") {\n        this.shortest_cost = 0;\n    } else {\n        this.shortest_cost = Number.MAX_VALUE;\n    }\n    this.type = type;\n}\n\nmodule.exports = ViterbiNode;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ViterbiNode = require(\"./ViterbiNode\");\n\n/**\n * ViterbiLattice is a lattice in Viterbi algorithm\n * @constructor\n */\nfunction ViterbiLattice() {\n    this.nodes_end_at = [];\n    this.nodes_end_at[0] = [ new ViterbiNode(-1, 0, 0, 0, \"BOS\", 0, 0, \"\") ];\n    this.eos_pos = 1;\n}\n\n/**\n * Append node to ViterbiLattice\n * @param {ViterbiNode} node\n */\nViterbiLattice.prototype.append = function (node) {\n    var last_pos = node.start_pos + node.length - 1;\n    if (this.eos_pos < last_pos) {\n        this.eos_pos = last_pos;\n    }\n\n    var prev_nodes = this.nodes_end_at[last_pos];\n    if (prev_nodes == null) {\n        prev_nodes = [];\n    }\n    prev_nodes.push(node);\n\n    this.nodes_end_at[last_pos] = prev_nodes;\n};\n\n/**\n * Set ends with EOS (End of Statement)\n */\nViterbiLattice.prototype.appendEos = function () {\n    var last_index = this.nodes_end_at.length;\n    this.eos_pos++;\n    this.nodes_end_at[last_index] = [ new ViterbiNode(-1, 0, this.eos_pos, 0, \"EOS\", 0, 0, \"\") ];\n};\n\nmodule.exports = ViterbiLattice;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * String wrapper for UTF-16 surrogate pair (4 bytes)\n * @param {string} str String to wrap\n * @constructor\n */\nfunction SurrogateAwareString(str) {\n    this.str = str;\n    this.index_mapping = [];\n\n    for (var pos = 0; pos < str.length; pos++) {\n        var ch = str.charAt(pos);\n        this.index_mapping.push(pos);\n        if (SurrogateAwareString.isSurrogatePair(ch)) {\n            pos++;\n        }\n    }\n    // Surrogate aware length\n    this.length = this.index_mapping.length;\n}\n\nSurrogateAwareString.prototype.slice = function (index) {\n    if (this.index_mapping.length <= index) {\n        return \"\";\n    }\n    var surrogate_aware_index = this.index_mapping[index];\n    return this.str.slice(surrogate_aware_index);\n};\n\nSurrogateAwareString.prototype.charAt = function (index) {\n    if (this.str.length <= index) {\n        return \"\";\n    }\n    var surrogate_aware_start_index = this.index_mapping[index];\n    var surrogate_aware_end_index = this.index_mapping[index + 1];\n\n    if (surrogate_aware_end_index == null) {\n        return this.str.slice(surrogate_aware_start_index);\n    }\n    return this.str.slice(surrogate_aware_start_index, surrogate_aware_end_index);\n};\n\nSurrogateAwareString.prototype.charCodeAt = function (index) {\n    if (this.index_mapping.length <= index) {\n        return NaN;\n    }\n    var surrogate_aware_index = this.index_mapping[index];\n    var upper = this.str.charCodeAt(surrogate_aware_index);\n    var lower;\n    if (upper >= 0xD800 && upper <= 0xDBFF && surrogate_aware_index < this.str.length) {\n        lower = this.str.charCodeAt(surrogate_aware_index + 1);\n        if (lower >= 0xDC00 && lower <= 0xDFFF) {\n            return (upper - 0xD800) * 0x400 + lower - 0xDC00 + 0x10000;\n        }\n    }\n    return upper;\n};\n\nSurrogateAwareString.prototype.toString = function () {\n    return this.str;\n};\n\nSurrogateAwareString.isSurrogatePair = function (ch) {\n    var utf16_code = ch.charCodeAt(0);\n    if (utf16_code >= 0xD800 && utf16_code <= 0xDBFF) {\n        // surrogate pair\n        return true;\n    } else {\n        return false;\n    }\n};\n\nmodule.exports = SurrogateAwareString;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * ViterbiSearcher is for searching best Viterbi path\n * @param {ConnectionCosts} connection_costs Connection costs matrix\n * @constructor\n */\nfunction ViterbiSearcher(connection_costs) {\n    this.connection_costs = connection_costs;\n}\n\n/**\n * Search best path by forward-backward algorithm\n * @param {ViterbiLattice} lattice Viterbi lattice to search\n * @returns {Array} Shortest path\n */\nViterbiSearcher.prototype.search = function (lattice) {\n    lattice = this.forward(lattice);\n    return this.backward(lattice);\n};\n\nViterbiSearcher.prototype.forward = function (lattice) {\n    var i, j, k;\n    for (i = 1; i <= lattice.eos_pos; i++) {\n        var nodes = lattice.nodes_end_at[i];\n        if (nodes == null) {\n            continue;\n        }\n        for (j = 0; j < nodes.length; j++) {\n            var node = nodes[j];\n            var cost = Number.MAX_VALUE;\n            var shortest_prev_node;\n\n            var prev_nodes = lattice.nodes_end_at[node.start_pos - 1];\n            if (prev_nodes == null) {\n                // TODO process unknown words (repair word lattice)\n                continue;\n            }\n            for (k = 0; k < prev_nodes.length; k++) {\n                var prev_node = prev_nodes[k];\n\n                var edge_cost;\n                if (node.left_id == null || prev_node.right_id == null) {\n                    // TODO assert\n                    console.log(\"Left or right is null\");\n                    edge_cost = 0;\n                } else {\n                    edge_cost = this.connection_costs.get(prev_node.right_id, node.left_id);\n                }\n\n                var _cost = prev_node.shortest_cost + edge_cost + node.cost;\n                if (_cost < cost) {\n                    shortest_prev_node = prev_node;\n                    cost = _cost;\n                }\n            }\n\n            node.prev = shortest_prev_node;\n            node.shortest_cost = cost;\n        }\n    }\n    return lattice;\n};\n\nViterbiSearcher.prototype.backward = function (lattice) {\n    var shortest_path = [];\n    var eos = lattice.nodes_end_at[lattice.nodes_end_at.length - 1][0];\n\n    var node_back = eos.prev;\n    if (node_back == null) {\n        return [];\n    }\n    while (node_back.type !== \"BOS\") {\n        shortest_path.push(node_back);\n        if (node_back.prev == null) {\n            // TODO Failed to back. Process unknown words?\n            return [];\n        }\n        node_back = node_back.prev;\n    }\n\n    return shortest_path.reverse();\n};\n\nmodule.exports = ViterbiSearcher;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Mappings between IPADIC dictionary features and tokenized results\n * @constructor\n */\nfunction IpadicFormatter() {\n}\n\nIpadicFormatter.prototype.formatEntry = function (word_id, position, type, features) {\n    var token = {};\n    token.word_id = word_id;\n    token.word_type = type;\n    token.word_position = position;\n\n    token.surface_form = features[0];\n    token.pos = features[1];\n    token.pos_detail_1 = features[2];\n    token.pos_detail_2 = features[3];\n    token.pos_detail_3 = features[4];\n    token.conjugated_type = features[5];\n    token.conjugated_form = features[6];\n    token.basic_form = features[7];\n    token.reading = features[8];\n    token.pronunciation = features[9];\n\n    return token;\n};\n\nIpadicFormatter.prototype.formatUnknownEntry = function (word_id, position, type, features, surface_form) {\n    var token = {};\n    token.word_id = word_id;\n    token.word_type = type;\n    token.word_position = position;\n\n    token.surface_form = surface_form;\n    token.pos = features[1];\n    token.pos_detail_1 = features[2];\n    token.pos_detail_2 = features[3];\n    token.pos_detail_3 = features[4];\n    token.conjugated_type = features[5];\n    token.conjugated_form = features[6];\n    token.basic_form = features[7];\n    // token.reading = features[8];\n    // token.pronunciation = features[9];\n\n    return token;\n};\n\nmodule.exports = IpadicFormatter;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar zlib = require(\"zlibjs/bin/gunzip.min.js\");\nvar DictionaryLoader = require(\"./DictionaryLoader\");\n\n/**\n * BrowserDictionaryLoader inherits DictionaryLoader, using jQuery XHR for download\n * @param {string} dic_path Dictionary path\n * @constructor\n */\nfunction BrowserDictionaryLoader(dic_path) {\n    DictionaryLoader.apply(this, [dic_path]);\n}\n\nBrowserDictionaryLoader.prototype = Object.create(DictionaryLoader.prototype);\n\n/**\n * Utility function to load gzipped dictionary\n * @param {string} url Dictionary URL\n * @param {BrowserDictionaryLoader~onLoad} callback Callback function\n */\nBrowserDictionaryLoader.prototype.loadArrayBuffer = function (url, callback) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, true);\n    xhr.responseType = \"arraybuffer\";\n    xhr.onload = function () {\n        if (this.status > 0 && this.status !== 200) {\n            callback(xhr.statusText, null);\n            return;\n        }\n        var arraybuffer = this.response;\n\n        var gz = new zlib.Zlib.Gunzip(new Uint8Array(arraybuffer));\n        var typed_array = gz.decompress();\n        callback(null, typed_array.buffer);\n    };\n    xhr.onerror = function (err) {\n        callback(err, null);\n    };\n    xhr.send();\n};\n\n/**\n * Callback\n * @callback BrowserDictionaryLoader~onLoad\n * @param {Object} err Error object\n * @param {Uint8Array} buffer Loaded buffer\n */\n\nmodule.exports = BrowserDictionaryLoader;\n","/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */(function() {'use strict';function n(e){throw e;}var p=void 0,aa=this;function t(e,b){var d=e.split(\".\"),c=aa;!(d[0]in c)&&c.execScript&&c.execScript(\"var \"+d[0]);for(var a;d.length&&(a=d.shift());)!d.length&&b!==p?c[a]=b:c=c[a]?c[a]:c[a]={}};var x=\"undefined\"!==typeof Uint8Array&&\"undefined\"!==typeof Uint16Array&&\"undefined\"!==typeof Uint32Array&&\"undefined\"!==typeof DataView;new (x?Uint8Array:Array)(256);var y;for(y=0;256>y;++y)for(var A=y,ba=7,A=A>>>1;A;A>>>=1)--ba;function B(e,b,d){var c,a=\"number\"===typeof b?b:b=0,f=\"number\"===typeof d?d:e.length;c=-1;for(a=f&7;a--;++b)c=c>>>8^C[(c^e[b])&255];for(a=f>>3;a--;b+=8)c=c>>>8^C[(c^e[b])&255],c=c>>>8^C[(c^e[b+1])&255],c=c>>>8^C[(c^e[b+2])&255],c=c>>>8^C[(c^e[b+3])&255],c=c>>>8^C[(c^e[b+4])&255],c=c>>>8^C[(c^e[b+5])&255],c=c>>>8^C[(c^e[b+6])&255],c=c>>>8^C[(c^e[b+7])&255];return(c^4294967295)>>>0}\nvar D=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,\n2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,\n2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,\n2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,\n3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,\n936918E3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117],C=x?new Uint32Array(D):D;function E(){}E.prototype.getName=function(){return this.name};E.prototype.getData=function(){return this.data};E.prototype.G=function(){return this.H};function G(e){var b=e.length,d=0,c=Number.POSITIVE_INFINITY,a,f,k,l,m,r,q,g,h,v;for(g=0;g<b;++g)e[g]>d&&(d=e[g]),e[g]<c&&(c=e[g]);a=1<<d;f=new (x?Uint32Array:Array)(a);k=1;l=0;for(m=2;k<=d;){for(g=0;g<b;++g)if(e[g]===k){r=0;q=l;for(h=0;h<k;++h)r=r<<1|q&1,q>>=1;v=k<<16|g;for(h=r;h<a;h+=m)f[h]=v;++l}++k;l<<=1;m<<=1}return[f,d,c]};var J=[],K;for(K=0;288>K;K++)switch(!0){case 143>=K:J.push([K+48,8]);break;case 255>=K:J.push([K-144+400,9]);break;case 279>=K:J.push([K-256+0,7]);break;case 287>=K:J.push([K-280+192,8]);break;default:n(\"invalid literal: \"+K)}\nvar ca=function(){function e(a){switch(!0){case 3===a:return[257,a-3,0];case 4===a:return[258,a-4,0];case 5===a:return[259,a-5,0];case 6===a:return[260,a-6,0];case 7===a:return[261,a-7,0];case 8===a:return[262,a-8,0];case 9===a:return[263,a-9,0];case 10===a:return[264,a-10,0];case 12>=a:return[265,a-11,1];case 14>=a:return[266,a-13,1];case 16>=a:return[267,a-15,1];case 18>=a:return[268,a-17,1];case 22>=a:return[269,a-19,2];case 26>=a:return[270,a-23,2];case 30>=a:return[271,a-27,2];case 34>=a:return[272,\na-31,2];case 42>=a:return[273,a-35,3];case 50>=a:return[274,a-43,3];case 58>=a:return[275,a-51,3];case 66>=a:return[276,a-59,3];case 82>=a:return[277,a-67,4];case 98>=a:return[278,a-83,4];case 114>=a:return[279,a-99,4];case 130>=a:return[280,a-115,4];case 162>=a:return[281,a-131,5];case 194>=a:return[282,a-163,5];case 226>=a:return[283,a-195,5];case 257>=a:return[284,a-227,5];case 258===a:return[285,a-258,0];default:n(\"invalid length: \"+a)}}var b=[],d,c;for(d=3;258>=d;d++)c=e(d),b[d]=c[2]<<24|c[1]<<\n16|c[0];return b}();x&&new Uint32Array(ca);function L(e,b){this.i=[];this.j=32768;this.d=this.f=this.c=this.n=0;this.input=x?new Uint8Array(e):e;this.o=!1;this.k=M;this.w=!1;if(b||!(b={}))b.index&&(this.c=b.index),b.bufferSize&&(this.j=b.bufferSize),b.bufferType&&(this.k=b.bufferType),b.resize&&(this.w=b.resize);switch(this.k){case N:this.a=32768;this.b=new (x?Uint8Array:Array)(32768+this.j+258);break;case M:this.a=0;this.b=new (x?Uint8Array:Array)(this.j);this.e=this.D;this.q=this.A;this.l=this.C;break;default:n(Error(\"invalid inflate mode\"))}}\nvar N=0,M=1;\nL.prototype.g=function(){for(;!this.o;){var e=P(this,3);e&1&&(this.o=!0);e>>>=1;switch(e){case 0:var b=this.input,d=this.c,c=this.b,a=this.a,f=b.length,k=p,l=p,m=c.length,r=p;this.d=this.f=0;d+1>=f&&n(Error(\"invalid uncompressed block header: LEN\"));k=b[d++]|b[d++]<<8;d+1>=f&&n(Error(\"invalid uncompressed block header: NLEN\"));l=b[d++]|b[d++]<<8;k===~l&&n(Error(\"invalid uncompressed block header: length verify\"));d+k>b.length&&n(Error(\"input buffer is broken\"));switch(this.k){case N:for(;a+k>c.length;){r=\nm-a;k-=r;if(x)c.set(b.subarray(d,d+r),a),a+=r,d+=r;else for(;r--;)c[a++]=b[d++];this.a=a;c=this.e();a=this.a}break;case M:for(;a+k>c.length;)c=this.e({t:2});break;default:n(Error(\"invalid inflate mode\"))}if(x)c.set(b.subarray(d,d+k),a),a+=k,d+=k;else for(;k--;)c[a++]=b[d++];this.c=d;this.a=a;this.b=c;break;case 1:this.l(da,ea);break;case 2:for(var q=P(this,5)+257,g=P(this,5)+1,h=P(this,4)+4,v=new (x?Uint8Array:Array)(Q.length),s=p,F=p,H=p,w=p,z=p,O=p,I=p,u=p,Z=p,u=0;u<h;++u)v[Q[u]]=P(this,3);if(!x){u=\nh;for(h=v.length;u<h;++u)v[Q[u]]=0}s=G(v);w=new (x?Uint8Array:Array)(q+g);u=0;for(Z=q+g;u<Z;)switch(z=R(this,s),z){case 16:for(I=3+P(this,2);I--;)w[u++]=O;break;case 17:for(I=3+P(this,3);I--;)w[u++]=0;O=0;break;case 18:for(I=11+P(this,7);I--;)w[u++]=0;O=0;break;default:O=w[u++]=z}F=x?G(w.subarray(0,q)):G(w.slice(0,q));H=x?G(w.subarray(q)):G(w.slice(q));this.l(F,H);break;default:n(Error(\"unknown BTYPE: \"+e))}}return this.q()};\nvar S=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],Q=x?new Uint16Array(S):S,fa=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],ga=x?new Uint16Array(fa):fa,ha=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],T=x?new Uint8Array(ha):ha,ia=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],ja=x?new Uint16Array(ia):ia,ka=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,\n11,12,12,13,13],U=x?new Uint8Array(ka):ka,V=new (x?Uint8Array:Array)(288),W,la;W=0;for(la=V.length;W<la;++W)V[W]=143>=W?8:255>=W?9:279>=W?7:8;var da=G(V),X=new (x?Uint8Array:Array)(30),Y,ma;Y=0;for(ma=X.length;Y<ma;++Y)X[Y]=5;var ea=G(X);function P(e,b){for(var d=e.f,c=e.d,a=e.input,f=e.c,k=a.length,l;c<b;)f>=k&&n(Error(\"input buffer is broken\")),d|=a[f++]<<c,c+=8;l=d&(1<<b)-1;e.f=d>>>b;e.d=c-b;e.c=f;return l}\nfunction R(e,b){for(var d=e.f,c=e.d,a=e.input,f=e.c,k=a.length,l=b[0],m=b[1],r,q;c<m&&!(f>=k);)d|=a[f++]<<c,c+=8;r=l[d&(1<<m)-1];q=r>>>16;q>c&&n(Error(\"invalid code length: \"+q));e.f=d>>q;e.d=c-q;e.c=f;return r&65535}\nL.prototype.l=function(e,b){var d=this.b,c=this.a;this.r=e;for(var a=d.length-258,f,k,l,m;256!==(f=R(this,e));)if(256>f)c>=a&&(this.a=c,d=this.e(),c=this.a),d[c++]=f;else{k=f-257;m=ga[k];0<T[k]&&(m+=P(this,T[k]));f=R(this,b);l=ja[f];0<U[f]&&(l+=P(this,U[f]));c>=a&&(this.a=c,d=this.e(),c=this.a);for(;m--;)d[c]=d[c++-l]}for(;8<=this.d;)this.d-=8,this.c--;this.a=c};\nL.prototype.C=function(e,b){var d=this.b,c=this.a;this.r=e;for(var a=d.length,f,k,l,m;256!==(f=R(this,e));)if(256>f)c>=a&&(d=this.e(),a=d.length),d[c++]=f;else{k=f-257;m=ga[k];0<T[k]&&(m+=P(this,T[k]));f=R(this,b);l=ja[f];0<U[f]&&(l+=P(this,U[f]));c+m>a&&(d=this.e(),a=d.length);for(;m--;)d[c]=d[c++-l]}for(;8<=this.d;)this.d-=8,this.c--;this.a=c};\nL.prototype.e=function(){var e=new (x?Uint8Array:Array)(this.a-32768),b=this.a-32768,d,c,a=this.b;if(x)e.set(a.subarray(32768,e.length));else{d=0;for(c=e.length;d<c;++d)e[d]=a[d+32768]}this.i.push(e);this.n+=e.length;if(x)a.set(a.subarray(b,b+32768));else for(d=0;32768>d;++d)a[d]=a[b+d];this.a=32768;return a};\nL.prototype.D=function(e){var b,d=this.input.length/this.c+1|0,c,a,f,k=this.input,l=this.b;e&&(\"number\"===typeof e.t&&(d=e.t),\"number\"===typeof e.z&&(d+=e.z));2>d?(c=(k.length-this.c)/this.r[2],f=258*(c/2)|0,a=f<l.length?l.length+f:l.length<<1):a=l.length*d;x?(b=new Uint8Array(a),b.set(l)):b=l;return this.b=b};\nL.prototype.q=function(){var e=0,b=this.b,d=this.i,c,a=new (x?Uint8Array:Array)(this.n+(this.a-32768)),f,k,l,m;if(0===d.length)return x?this.b.subarray(32768,this.a):this.b.slice(32768,this.a);f=0;for(k=d.length;f<k;++f){c=d[f];l=0;for(m=c.length;l<m;++l)a[e++]=c[l]}f=32768;for(k=this.a;f<k;++f)a[e++]=b[f];this.i=[];return this.buffer=a};\nL.prototype.A=function(){var e,b=this.a;x?this.w?(e=new Uint8Array(b),e.set(this.b.subarray(0,b))):e=this.b.subarray(0,b):(this.b.length>b&&(this.b.length=b),e=this.b);return this.buffer=e};function $(e){this.input=e;this.c=0;this.m=[];this.s=!1}$.prototype.F=function(){this.s||this.g();return this.m.slice()};\n$.prototype.g=function(){for(var e=this.input.length;this.c<e;){var b=new E,d=p,c=p,a=p,f=p,k=p,l=p,m=p,r=p,q=p,g=this.input,h=this.c;b.u=g[h++];b.v=g[h++];(31!==b.u||139!==b.v)&&n(Error(\"invalid file signature:\"+b.u+\",\"+b.v));b.p=g[h++];switch(b.p){case 8:break;default:n(Error(\"unknown compression method: \"+b.p))}b.h=g[h++];r=g[h++]|g[h++]<<8|g[h++]<<16|g[h++]<<24;b.H=new Date(1E3*r);b.N=g[h++];b.M=g[h++];0<(b.h&4)&&(b.I=g[h++]|g[h++]<<8,h+=b.I);if(0<(b.h&8)){m=[];for(l=0;0<(k=g[h++]);)m[l++]=String.fromCharCode(k);\nb.name=m.join(\"\")}if(0<(b.h&16)){m=[];for(l=0;0<(k=g[h++]);)m[l++]=String.fromCharCode(k);b.J=m.join(\"\")}0<(b.h&2)&&(b.B=B(g,0,h)&65535,b.B!==(g[h++]|g[h++]<<8)&&n(Error(\"invalid header crc16\")));d=g[g.length-4]|g[g.length-3]<<8|g[g.length-2]<<16|g[g.length-1]<<24;g.length-h-4-4<512*d&&(f=d);c=new L(g,{index:h,bufferSize:f});b.data=a=c.g();h=c.c;b.K=q=(g[h++]|g[h++]<<8|g[h++]<<16|g[h++]<<24)>>>0;B(a,p,p)!==q&&n(Error(\"invalid CRC-32 checksum: 0x\"+B(a,p,p).toString(16)+\" / 0x\"+q.toString(16)));b.L=\nd=(g[h++]|g[h++]<<8|g[h++]<<16|g[h++]<<24)>>>0;(a.length&4294967295)!==d&&n(Error(\"invalid input size: \"+(a.length&4294967295)+\" / \"+d));this.m.push(b);this.c=h}this.s=!0;var v=this.m,s,F,H=0,w=0,z;s=0;for(F=v.length;s<F;++s)w+=v[s].data.length;if(x){z=new Uint8Array(w);for(s=0;s<F;++s)z.set(v[s].data,H),H+=v[s].data.length}else{z=[];for(s=0;s<F;++s)z[s]=v[s].data;z=Array.prototype.concat.apply([],z)}return z};t(\"Zlib.Gunzip\",$);t(\"Zlib.Gunzip.prototype.decompress\",$.prototype.g);t(\"Zlib.Gunzip.prototype.getMembers\",$.prototype.F);t(\"Zlib.GunzipMember\",E);t(\"Zlib.GunzipMember.prototype.getName\",E.prototype.getName);t(\"Zlib.GunzipMember.prototype.getData\",E.prototype.getData);t(\"Zlib.GunzipMember.prototype.getMtime\",E.prototype.G);}).call(this);\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar path = require(\"path\");\nvar async = require(\"async\");\nvar DynamicDictionaries = require(\"../dict/DynamicDictionaries\");\n\n/**\n * DictionaryLoader base constructor\n * @param {string} dic_path Dictionary path\n * @constructor\n */\nfunction DictionaryLoader(dic_path) {\n    this.dic = new DynamicDictionaries();\n    this.dic_path = dic_path;\n}\n\nDictionaryLoader.prototype.loadArrayBuffer = function (file, callback) {\n    throw new Error(\"DictionaryLoader#loadArrayBuffer should be overwrite\");\n};\n\n/**\n * Load dictionary files\n * @param {DictionaryLoader~onLoad} load_callback Callback function called after loaded\n */\nDictionaryLoader.prototype.load = function (load_callback) {\n    var dic = this.dic;\n    var dic_path = this.dic_path;\n    var loadArrayBuffer = this.loadArrayBuffer;\n\n    async.parallel([\n        // Trie\n        function (callback) {\n            async.map([ \"base.dat.gz\", \"check.dat.gz\" ], function (filename, _callback) {\n                loadArrayBuffer(path.join(dic_path, filename), function (err, buffer) {\n                    if(err) {\n                        return _callback(err);\n                    }\n                    _callback(null, buffer);\n                });\n            }, function (err, buffers) {\n                if(err) {\n                    return callback(err);\n                }\n                var base_buffer = new Int32Array(buffers[0]);\n                var check_buffer = new Int32Array(buffers[1]);\n\n                dic.loadTrie(base_buffer, check_buffer);\n                callback(null);\n            });\n        },\n        // Token info dictionaries\n        function (callback) {\n            async.map([ \"tid.dat.gz\", \"tid_pos.dat.gz\", \"tid_map.dat.gz\" ], function (filename, _callback) {\n                loadArrayBuffer(path.join(dic_path, filename), function (err, buffer) {\n                    if(err) {\n                        return _callback(err);\n                    }\n                    _callback(null, buffer);\n                });\n            }, function (err, buffers) {\n                if(err) {\n                    return callback(err);\n                }\n                var token_info_buffer = new Uint8Array(buffers[0]);\n                var pos_buffer = new Uint8Array(buffers[1]);\n                var target_map_buffer = new Uint8Array(buffers[2]);\n\n                dic.loadTokenInfoDictionaries(token_info_buffer, pos_buffer, target_map_buffer);\n                callback(null);\n            });\n        },\n        // Connection cost matrix\n        function (callback) {\n            loadArrayBuffer(path.join(dic_path, \"cc.dat.gz\"), function (err, buffer) {\n                if(err) {\n                    return callback(err);\n                }\n                var cc_buffer = new Int16Array(buffer);\n                dic.loadConnectionCosts(cc_buffer);\n                callback(null);\n            });\n        },\n        // Unknown dictionaries\n        function (callback) {\n            async.map([ \"unk.dat.gz\", \"unk_pos.dat.gz\", \"unk_map.dat.gz\", \"unk_char.dat.gz\", \"unk_compat.dat.gz\", \"unk_invoke.dat.gz\" ], function (filename, _callback) {\n                loadArrayBuffer(path.join(dic_path, filename), function (err, buffer) {\n                    if(err) {\n                        return _callback(err);\n                    }\n                    _callback(null, buffer);\n                });\n            }, function (err, buffers) {\n                if(err) {\n                    return callback(err);\n                }\n                var unk_buffer = new Uint8Array(buffers[0]);\n                var unk_pos_buffer = new Uint8Array(buffers[1]);\n                var unk_map_buffer = new Uint8Array(buffers[2]);\n                var cat_map_buffer = new Uint8Array(buffers[3]);\n                var compat_cat_map_buffer = new Uint32Array(buffers[4]);\n                var invoke_def_buffer = new Uint8Array(buffers[5]);\n\n                dic.loadUnknownDictionaries(unk_buffer, unk_pos_buffer, unk_map_buffer, cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer);\n                // dic.loadUnknownDictionaries(char_buffer, unk_buffer);\n                callback(null);\n            });\n        }\n    ], function (err) {\n        load_callback(err, dic);\n    });\n};\n\n/**\n * Callback\n * @callback DictionaryLoader~onLoad\n * @param {Object} err Error object\n * @param {DynamicDictionaries} dic Loaded dictionary\n */\n\nmodule.exports = DictionaryLoader;\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.async = global.async || {})));\n}(this, (function (exports) { 'use strict';\n\nfunction slice(arrayLike, start) {\n    start = start|0;\n    var newLen = Math.max(arrayLike.length - start, 0);\n    var newArr = Array(newLen);\n    for(var idx = 0; idx < newLen; idx++)  {\n        newArr[idx] = arrayLike[start + idx];\n    }\n    return newArr;\n}\n\n/**\n * Creates a continuation function with some arguments already applied.\n *\n * Useful as a shorthand when combined with other control flow functions. Any\n * arguments passed to the returned function are added to the arguments\n * originally passed to apply.\n *\n * @name apply\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function you want to eventually apply all\n * arguments to. Invokes with (arguments...).\n * @param {...*} arguments... - Any number of arguments to automatically apply\n * when the continuation is called.\n * @returns {Function} the partially-applied function\n * @example\n *\n * // using apply\n * async.parallel([\n *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n *     async.apply(fs.writeFile, 'testfile2', 'test2')\n * ]);\n *\n *\n * // the same process without using apply\n * async.parallel([\n *     function(callback) {\n *         fs.writeFile('testfile1', 'test1', callback);\n *     },\n *     function(callback) {\n *         fs.writeFile('testfile2', 'test2', callback);\n *     }\n * ]);\n *\n * // It's possible to pass any number of additional arguments when calling the\n * // continuation:\n *\n * node> var fn = async.apply(sys.puts, 'one');\n * node> fn('two', 'three');\n * one\n * two\n * three\n */\nvar apply = function(fn/*, ...args*/) {\n    var args = slice(arguments, 1);\n    return function(/*callArgs*/) {\n        var callArgs = slice(arguments);\n        return fn.apply(null, args.concat(callArgs));\n    };\n};\n\nvar initialParams = function (fn) {\n    return function (/*...args, callback*/) {\n        var args = slice(arguments);\n        var callback = args.pop();\n        fn.call(this, args, callback);\n    };\n};\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nvar hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return function (fn/*, ...args*/) {\n        var args = slice(arguments, 1);\n        defer(function () {\n            fn.apply(null, args);\n        });\n    };\n}\n\nvar _defer;\n\nif (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nvar setImmediate$1 = wrap(_defer);\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2017 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function, or Promise-returning\n * function to convert to an {@link AsyncFunction}.\n * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n * invoked with `(args..., callback)`.\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es2017 example, though `asyncify` is not needed if your JS environment\n * // supports async functions out of the box\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    return initialParams(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (isObject(result) && typeof result.then === 'function') {\n            result.then(function(value) {\n                invokeCallback(callback, null, value);\n            }, function(err) {\n                invokeCallback(callback, err.message ? err : new Error(err));\n            });\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\nfunction invokeCallback(callback, error, value) {\n    try {\n        callback(error, value);\n    } catch (e) {\n        setImmediate$1(rethrow, e);\n    }\n}\n\nfunction rethrow(error) {\n    throw error;\n}\n\nvar supportsSymbol = typeof Symbol === 'function';\n\nfunction isAsync(fn) {\n    return supportsSymbol && fn[Symbol.toStringTag] === 'AsyncFunction';\n}\n\nfunction wrapAsync(asyncFn) {\n    return isAsync(asyncFn) ? asyncify(asyncFn) : asyncFn;\n}\n\nfunction applyEach$1(eachfn) {\n    return function(fns/*, ...args*/) {\n        var args = slice(arguments, 1);\n        var go = initialParams(function(args, callback) {\n            var that = this;\n            return eachfn(fns, function (fn, cb) {\n                wrapAsync(fn).apply(that, args.concat(cb));\n            }, callback);\n        });\n        if (args.length) {\n            return go.apply(this, args);\n        }\n        else {\n            return go;\n        }\n    };\n}\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Built-in value references. */\nvar Symbol$1 = root.Symbol;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag$1),\n      tag = value[symToStringTag$1];\n\n  try {\n    value[symToStringTag$1] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag$1] = tag;\n    } else {\n      delete value[symToStringTag$1];\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$1 = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString$1 = objectProto$1.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString$1.call(value);\n}\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]';\nvar undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol$1 ? Symbol$1.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]';\nvar funcTag = '[object Function]';\nvar genTag = '[object GeneratorFunction]';\nvar proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n// A temporary value used to identify if the loop should be broken.\n// See #1064, #1293\nvar breakLoop = {};\n\n/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nfunction once(fn) {\n    return function () {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\nvar iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator;\n\nvar getIterator = function (coll) {\n    return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();\n};\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/** Used for built-in method references. */\nvar objectProto$3 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$2 = objectProto$3.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto$3.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty$2.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER$1 = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER$1 : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/** `Object#toString` result references. */\nvar argsTag$1 = '[object Arguments]';\nvar arrayTag = '[object Array]';\nvar boolTag = '[object Boolean]';\nvar dateTag = '[object Date]';\nvar errorTag = '[object Error]';\nvar funcTag$1 = '[object Function]';\nvar mapTag = '[object Map]';\nvar numberTag = '[object Number]';\nvar objectTag = '[object Object]';\nvar regexpTag = '[object RegExp]';\nvar setTag = '[object Set]';\nvar stringTag = '[object String]';\nvar weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\nvar dataViewTag = '[object DataView]';\nvar float32Tag = '[object Float32Array]';\nvar float64Tag = '[object Float64Array]';\nvar int8Tag = '[object Int8Array]';\nvar int16Tag = '[object Int16Array]';\nvar int32Tag = '[object Int32Array]';\nvar uint8Tag = '[object Uint8Array]';\nvar uint8ClampedTag = '[object Uint8ClampedArray]';\nvar uint16Tag = '[object Uint16Array]';\nvar uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag$1] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag$1] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/** Detect free variable `exports`. */\nvar freeExports$1 = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule$1 = freeExports$1 && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports$1 && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule$1 && freeModule$1.require && freeModule$1.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/** Used for built-in method references. */\nvar objectProto$2 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$1 = objectProto$2.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty$1.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar objectProto$5 = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$5;\n\n  return value === proto;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/** Used for built-in method references. */\nvar objectProto$4 = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty$3 = objectProto$4.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty$3.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nfunction createArrayIterator(coll) {\n    var i = -1;\n    var len = coll.length;\n    return function next() {\n        return ++i < len ? {value: coll[i], key: i} : null;\n    }\n}\n\nfunction createES2015Iterator(iterator) {\n    var i = -1;\n    return function next() {\n        var item = iterator.next();\n        if (item.done)\n            return null;\n        i++;\n        return {value: item.value, key: i};\n    }\n}\n\nfunction createObjectIterator(obj) {\n    var okeys = keys(obj);\n    var i = -1;\n    var len = okeys.length;\n    return function next() {\n        var key = okeys[++i];\n        if (key === '__proto__') {\n            return next();\n        }\n        return i < len ? {value: obj[key], key: key} : null;\n    };\n}\n\nfunction iterator(coll) {\n    if (isArrayLike(coll)) {\n        return createArrayIterator(coll);\n    }\n\n    var iterator = getIterator(coll);\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n}\n\nfunction onlyOnce(fn) {\n    return function() {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n\nfunction _eachOfLimit(limit) {\n    return function (obj, iteratee, callback) {\n        callback = once(callback || noop);\n        if (limit <= 0 || !obj) {\n            return callback(null);\n        }\n        var nextElem = iterator(obj);\n        var done = false;\n        var running = 0;\n        var looping = false;\n\n        function iterateeCallback(err, value) {\n            running -= 1;\n            if (err) {\n                done = true;\n                callback(err);\n            }\n            else if (value === breakLoop || (done && running <= 0)) {\n                done = true;\n                return callback(null);\n            }\n            else if (!looping) {\n                replenish();\n            }\n        }\n\n        function replenish () {\n            looping = true;\n            while (running < limit && !done) {\n                var elem = nextElem();\n                if (elem === null) {\n                    done = true;\n                    if (running <= 0) {\n                        callback(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));\n            }\n            looping = false;\n        }\n\n        replenish();\n    };\n}\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachOfLimit(coll, limit, iteratee, callback) {\n    _eachOfLimit(limit)(coll, wrapAsync(iteratee), callback);\n}\n\nfunction doLimit(fn, limit) {\n    return function (iterable, iteratee, callback) {\n        return fn(iterable, limit, iteratee, callback);\n    };\n}\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = once(callback || noop);\n    var index = 0,\n        completed = 0,\n        length = coll.length;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n        if (err) {\n            callback(err);\n        } else if ((++completed === length) || value === breakLoop) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, onlyOnce(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nvar eachOfGeneric = doLimit(eachOfLimit, Infinity);\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each\n * item in `coll`.\n * The `key` is the item's key, or index in the case of an array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n * var configs = {};\n *\n * async.forEachOf(obj, function (value, key, callback) {\n *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n *         if (err) return callback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }, function (err) {\n *     if (err) console.error(err.message);\n *     // configs is now a map of JSON data\n *     doSomethingWith(configs);\n * });\n */\nvar eachOf = function(coll, iteratee, callback) {\n    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n    eachOfImplementation(coll, wrapAsync(iteratee), callback);\n};\n\nfunction doParallel(fn) {\n    return function (obj, iteratee, callback) {\n        return fn(eachOf, obj, wrapAsync(iteratee), callback);\n    };\n}\n\nfunction _asyncMap(eachfn, arr, iteratee, callback) {\n    callback = callback || noop;\n    arr = arr || [];\n    var results = [];\n    var counter = 0;\n    var _iteratee = wrapAsync(iteratee);\n\n    eachfn(arr, function (value, _, callback) {\n        var index = counter++;\n        _iteratee(value, function (err, v) {\n            results[index] = v;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, results);\n    });\n}\n\n/**\n * Produces a new collection of values by mapping each value in `coll` through\n * the `iteratee` function. The `iteratee` is called with an item from `coll`\n * and a callback for when it has finished processing. Each of these callback\n * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n * `iteratee` passes an error to its callback, the main `callback` (for the\n * `map` function) is immediately called with the error.\n *\n * Note, that since this function applies the `iteratee` to each item in\n * parallel, there is no guarantee that the `iteratee` functions will complete\n * in order. However, the results array will be in the same order as the\n * original `coll`.\n *\n * If `map` is passed an Object, the results will be an Array.  The results\n * will roughly be in the order of the original Objects' keys (but this can\n * vary across JavaScript engines).\n *\n * @name map\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an Array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @example\n *\n * async.map(['file1','file2','file3'], fs.stat, function(err, results) {\n *     // results is now an array of stats for each file\n * });\n */\nvar map = doParallel(_asyncMap);\n\n/**\n * Applies the provided arguments to each function in the array, calling\n * `callback` after all functions have completed. If you only provide the first\n * argument, `fns`, then it will return a function which lets you pass in the\n * arguments as if it were a single function call. If more arguments are\n * provided, `callback` is required while `args` is still optional.\n *\n * @name applyEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} fns - A collection of {@link AsyncFunction}s\n * to all call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {Function} - If only the first argument, `fns`, is provided, it will\n * return a function which lets you pass in the arguments as if it were a single\n * function call. The signature is `(..args, callback)`. If invoked with any\n * arguments, `callback` is required.\n * @example\n *\n * async.applyEach([enableSearch, updateSchema], 'bucket', callback);\n *\n * // partial application example:\n * async.each(\n *     buckets,\n *     async.applyEach([enableSearch, updateSchema]),\n *     callback\n * );\n */\nvar applyEach = applyEach$1(map);\n\nfunction doParallelLimit(fn) {\n    return function (obj, limit, iteratee, callback) {\n        return fn(_eachOfLimit(limit), obj, wrapAsync(iteratee), callback);\n    };\n}\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n *\n * @name mapLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n */\nvar mapLimit = doParallelLimit(_asyncMap);\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n *\n * @name mapSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n */\nvar mapSeries = doLimit(mapLimit, 1);\n\n/**\n * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n *\n * @name applyEachSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n * @category Control Flow\n * @param {Array|Iterable|Object} fns - A collection of {@link AsyncFunction}s to all\n * call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {Function} - If only the first argument is provided, it will return\n * a function which lets you pass in the arguments as if it were a single\n * function call.\n */\nvar applyEachSeries = applyEach$1(mapSeries);\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\n/**\n * Determines the best order for running the {@link AsyncFunction}s in `tasks`, based on\n * their requirements. Each function can optionally depend on other functions\n * being completed first, and each function is run as soon as its requirements\n * are satisfied.\n *\n * If any of the {@link AsyncFunction}s pass an error to their callback, the `auto` sequence\n * will stop. Further tasks will not execute (so any other functions depending\n * on it will not run), and the main `callback` is immediately called with the\n * error.\n *\n * {@link AsyncFunction}s also receive an object containing the results of functions which\n * have completed so far as the first argument, if they have dependencies. If a\n * task function has no dependencies, it will only be passed a callback.\n *\n * @name auto\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object} tasks - An object. Each of its properties is either a\n * function or an array of requirements, with the {@link AsyncFunction} itself the last item\n * in the array. The object's key of a property serves as the name of the task\n * defined by that property, i.e. can be used when specifying requirements for\n * other tasks. The function receives one or two arguments:\n * * a `results` object, containing the results of the previously executed\n *   functions, only passed if the task has any dependencies,\n * * a `callback(err, result)` function, which must be called when finished,\n *   passing an `error` (which can be `null`) and the result of the function's\n *   execution.\n * @param {number} [concurrency=Infinity] - An optional `integer` for\n * determining the maximum number of tasks that can be run in parallel. By\n * default, as many as possible.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback. Results are always returned; however, if an\n * error occurs, no further `tasks` will be performed, and the results object\n * will only contain partial results. Invoked with (err, results).\n * @returns undefined\n * @example\n *\n * async.auto({\n *     // this function will just be passed a callback\n *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),\n *     showData: ['readData', function(results, cb) {\n *         // results.readData is the file's contents\n *         // ...\n *     }]\n * }, callback);\n *\n * async.auto({\n *     get_data: function(callback) {\n *         console.log('in get_data');\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         console.log('in make_folder');\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         console.log('in write_file', JSON.stringify(results));\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         console.log('in email_link', JSON.stringify(results));\n *         // once the file is written let's email a link to it...\n *         // results.write_file contains the filename returned by write_file.\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('results = ', results);\n * });\n */\nvar auto = function (tasks, concurrency, callback) {\n    if (typeof concurrency === 'function') {\n        // concurrency is optional, shift the args.\n        callback = concurrency;\n        concurrency = null;\n    }\n    callback = once(callback || noop);\n    var keys$$1 = keys(tasks);\n    var numTasks = keys$$1.length;\n    if (!numTasks) {\n        return callback(null);\n    }\n    if (!concurrency) {\n        concurrency = numTasks;\n    }\n\n    var results = {};\n    var runningTasks = 0;\n    var hasError = false;\n\n    var listeners = Object.create(null);\n\n    var readyTasks = [];\n\n    // for cycle detection:\n    var readyToCheck = []; // tasks that have been identified as reachable\n    // without the possibility of returning to an ancestor task\n    var uncheckedDependencies = {};\n\n    baseForOwn(tasks, function (task, key) {\n        if (!isArray(task)) {\n            // no dependencies\n            enqueueTask(key, [task]);\n            readyToCheck.push(key);\n            return;\n        }\n\n        var dependencies = task.slice(0, task.length - 1);\n        var remainingDependencies = dependencies.length;\n        if (remainingDependencies === 0) {\n            enqueueTask(key, task);\n            readyToCheck.push(key);\n            return;\n        }\n        uncheckedDependencies[key] = remainingDependencies;\n\n        arrayEach(dependencies, function (dependencyName) {\n            if (!tasks[dependencyName]) {\n                throw new Error('async.auto task `' + key +\n                    '` has a non-existent dependency `' +\n                    dependencyName + '` in ' +\n                    dependencies.join(', '));\n            }\n            addListener(dependencyName, function () {\n                remainingDependencies--;\n                if (remainingDependencies === 0) {\n                    enqueueTask(key, task);\n                }\n            });\n        });\n    });\n\n    checkForDeadlocks();\n    processQueue();\n\n    function enqueueTask(key, task) {\n        readyTasks.push(function () {\n            runTask(key, task);\n        });\n    }\n\n    function processQueue() {\n        if (readyTasks.length === 0 && runningTasks === 0) {\n            return callback(null, results);\n        }\n        while(readyTasks.length && runningTasks < concurrency) {\n            var run = readyTasks.shift();\n            run();\n        }\n\n    }\n\n    function addListener(taskName, fn) {\n        var taskListeners = listeners[taskName];\n        if (!taskListeners) {\n            taskListeners = listeners[taskName] = [];\n        }\n\n        taskListeners.push(fn);\n    }\n\n    function taskComplete(taskName) {\n        var taskListeners = listeners[taskName] || [];\n        arrayEach(taskListeners, function (fn) {\n            fn();\n        });\n        processQueue();\n    }\n\n\n    function runTask(key, task) {\n        if (hasError) return;\n\n        var taskCallback = onlyOnce(function(err, result) {\n            runningTasks--;\n            if (arguments.length > 2) {\n                result = slice(arguments, 1);\n            }\n            if (err) {\n                var safeResults = {};\n                baseForOwn(results, function(val, rkey) {\n                    safeResults[rkey] = val;\n                });\n                safeResults[key] = result;\n                hasError = true;\n                listeners = Object.create(null);\n\n                callback(err, safeResults);\n            } else {\n                results[key] = result;\n                taskComplete(key);\n            }\n        });\n\n        runningTasks++;\n        var taskFn = wrapAsync(task[task.length - 1]);\n        if (task.length > 1) {\n            taskFn(results, taskCallback);\n        } else {\n            taskFn(taskCallback);\n        }\n    }\n\n    function checkForDeadlocks() {\n        // Kahn's algorithm\n        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm\n        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html\n        var currentTask;\n        var counter = 0;\n        while (readyToCheck.length) {\n            currentTask = readyToCheck.pop();\n            counter++;\n            arrayEach(getDependents(currentTask), function (dependent) {\n                if (--uncheckedDependencies[dependent] === 0) {\n                    readyToCheck.push(dependent);\n                }\n            });\n        }\n\n        if (counter !== numTasks) {\n            throw new Error(\n                'async.auto cannot execute tasks due to a recursive dependency'\n            );\n        }\n    }\n\n    function getDependents(taskName) {\n        var result = [];\n        baseForOwn(tasks, function (task, key) {\n            if (isArray(task) && baseIndexOf(task, taskName, 0) >= 0) {\n                result.push(key);\n            }\n        });\n        return result;\n    }\n};\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol$1 ? Symbol$1.prototype : undefined;\nvar symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the last unmatched string symbol.\n */\nfunction charsEndIndex(strSymbols, chrSymbols) {\n  var index = strSymbols.length;\n\n  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\n/**\n * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the first unmatched string symbol.\n */\nfunction charsStartIndex(strSymbols, chrSymbols) {\n  var index = -1,\n      length = strSymbols.length;\n\n  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f';\nvar reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f';\nvar rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff';\nvar rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\nvar rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange$1 = '\\\\ud800-\\\\udfff';\nvar rsComboMarksRange$1 = '\\\\u0300-\\\\u036f';\nvar reComboHalfMarksRange$1 = '\\\\ufe20-\\\\ufe2f';\nvar rsComboSymbolsRange$1 = '\\\\u20d0-\\\\u20ff';\nvar rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1;\nvar rsVarRange$1 = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange$1 + ']';\nvar rsCombo = '[' + rsComboRange$1 + ']';\nvar rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\nvar rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';\nvar rsNonAstral = '[^' + rsAstralRange$1 + ']';\nvar rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\nvar rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\nvar rsZWJ$1 = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?';\nvar rsOptVar = '[' + rsVarRange$1 + ']?';\nvar rsOptJoin = '(?:' + rsZWJ$1 + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';\nvar rsSeq = rsOptVar + reOptMod + rsOptJoin;\nvar rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/**\n * Removes leading and trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trim('  abc  ');\n * // => 'abc'\n *\n * _.trim('-_-abc-_-', '_-');\n * // => 'abc'\n *\n * _.map(['  foo  ', '  bar  '], _.trim);\n * // => ['foo', 'bar']\n */\nfunction trim(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrim, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      chrSymbols = stringToArray(chars),\n      start = charsStartIndex(strSymbols, chrSymbols),\n      end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n  return castSlice(strSymbols, start, end).join('');\n}\n\nvar FN_ARGS = /^(?:async\\s+)?(function)?\\s*[^\\(]*\\(\\s*([^\\)]*)\\)/m;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /(=.+)?(\\s*)$/;\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\nfunction parseParams(func) {\n    func = func.toString().replace(STRIP_COMMENTS, '');\n    func = func.match(FN_ARGS)[2].replace(' ', '');\n    func = func ? func.split(FN_ARG_SPLIT) : [];\n    func = func.map(function (arg){\n        return trim(arg.replace(FN_ARG, ''));\n    });\n    return func;\n}\n\n/**\n * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent\n * tasks are specified as parameters to the function, after the usual callback\n * parameter, with the parameter names matching the names of the tasks it\n * depends on. This can provide even more readable task graphs which can be\n * easier to maintain.\n *\n * If a final callback is specified, the task results are similarly injected,\n * specified as named parameters after the initial error parameter.\n *\n * The autoInject function is purely syntactic sugar and its semantics are\n * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.\n *\n * @name autoInject\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.auto]{@link module:ControlFlow.auto}\n * @category Control Flow\n * @param {Object} tasks - An object, each of whose properties is an {@link AsyncFunction} of\n * the form 'func([dependencies...], callback). The object's key of a property\n * serves as the name of the task defined by that property, i.e. can be used\n * when specifying requirements for other tasks.\n * * The `callback` parameter is a `callback(err, result)` which must be called\n *   when finished, passing an `error` (which can be `null`) and the result of\n *   the function's execution. The remaining parameters name other tasks on\n *   which the task is dependent, and the results from those tasks are the\n *   arguments of those parameters.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback, and a `results` object with any completed\n * task results, similar to `auto`.\n * @example\n *\n * //  The example from `auto` can be rewritten as follows:\n * async.autoInject({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: function(get_data, make_folder, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     },\n *     email_link: function(write_file, callback) {\n *         // once the file is written let's email a link to it...\n *         // write_file contains the filename returned by write_file.\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n *\n * // If you are using a JS minifier that mangles parameter names, `autoInject`\n * // will not work with plain functions, since the parameter names will be\n * // collapsed to a single letter identifier.  To work around this, you can\n * // explicitly specify the names of the parameters your task function needs\n * // in an array, similar to Angular.js dependency injection.\n *\n * // This still has an advantage over plain `auto`, since the results a task\n * // depends on are still spread into arguments.\n * async.autoInject({\n *     //...\n *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(write_file, callback) {\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }]\n *     //...\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n */\nfunction autoInject(tasks, callback) {\n    var newTasks = {};\n\n    baseForOwn(tasks, function (taskFn, key) {\n        var params;\n        var fnIsAsync = isAsync(taskFn);\n        var hasNoDeps =\n            (!fnIsAsync && taskFn.length === 1) ||\n            (fnIsAsync && taskFn.length === 0);\n\n        if (isArray(taskFn)) {\n            params = taskFn.slice(0, -1);\n            taskFn = taskFn[taskFn.length - 1];\n\n            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);\n        } else if (hasNoDeps) {\n            // no dependencies, use the function as-is\n            newTasks[key] = taskFn;\n        } else {\n            params = parseParams(taskFn);\n            if (taskFn.length === 0 && !fnIsAsync && params.length === 0) {\n                throw new Error(\"autoInject task functions require explicit parameters.\");\n            }\n\n            // remove callback param\n            if (!fnIsAsync) params.pop();\n\n            newTasks[key] = params.concat(newTask);\n        }\n\n        function newTask(results, taskCb) {\n            var newArgs = arrayMap(params, function (name) {\n                return results[name];\n            });\n            newArgs.push(taskCb);\n            wrapAsync(taskFn).apply(null, newArgs);\n        }\n    });\n\n    auto(newTasks, callback);\n}\n\n// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n// used for queues. This implementation assumes that the node provided by the user can be modified\n// to adjust the next and last properties. We implement only the minimal functionality\n// for queue support.\nfunction DLL() {\n    this.head = this.tail = null;\n    this.length = 0;\n}\n\nfunction setInitial(dll, node) {\n    dll.length = 1;\n    dll.head = dll.tail = node;\n}\n\nDLL.prototype.removeLink = function(node) {\n    if (node.prev) node.prev.next = node.next;\n    else this.head = node.next;\n    if (node.next) node.next.prev = node.prev;\n    else this.tail = node.prev;\n\n    node.prev = node.next = null;\n    this.length -= 1;\n    return node;\n};\n\nDLL.prototype.empty = function () {\n    while(this.head) this.shift();\n    return this;\n};\n\nDLL.prototype.insertAfter = function(node, newNode) {\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next) node.next.prev = newNode;\n    else this.tail = newNode;\n    node.next = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.insertBefore = function(node, newNode) {\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev) node.prev.next = newNode;\n    else this.head = newNode;\n    node.prev = newNode;\n    this.length += 1;\n};\n\nDLL.prototype.unshift = function(node) {\n    if (this.head) this.insertBefore(this.head, node);\n    else setInitial(this, node);\n};\n\nDLL.prototype.push = function(node) {\n    if (this.tail) this.insertAfter(this.tail, node);\n    else setInitial(this, node);\n};\n\nDLL.prototype.shift = function() {\n    return this.head && this.removeLink(this.head);\n};\n\nDLL.prototype.pop = function() {\n    return this.tail && this.removeLink(this.tail);\n};\n\nDLL.prototype.toArray = function () {\n    var arr = Array(this.length);\n    var curr = this.head;\n    for(var idx = 0; idx < this.length; idx++) {\n        arr[idx] = curr.data;\n        curr = curr.next;\n    }\n    return arr;\n};\n\nDLL.prototype.remove = function (testFn) {\n    var curr = this.head;\n    while(!!curr) {\n        var next = curr.next;\n        if (testFn(curr)) {\n            this.removeLink(curr);\n        }\n        curr = next;\n    }\n    return this;\n};\n\nfunction queue(worker, concurrency, payload) {\n    if (concurrency == null) {\n        concurrency = 1;\n    }\n    else if(concurrency === 0) {\n        throw new Error('Concurrency must not be zero');\n    }\n\n    var _worker = wrapAsync(worker);\n    var numRunning = 0;\n    var workersList = [];\n\n    var processingScheduled = false;\n    function _insert(data, insertAtFront, callback) {\n        if (callback != null && typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0 && q.idle()) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(function() {\n                q.drain();\n            });\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                callback: callback || noop\n            };\n\n            if (insertAtFront) {\n                q._tasks.unshift(item);\n            } else {\n                q._tasks.push(item);\n            }\n        }\n\n        if (!processingScheduled) {\n            processingScheduled = true;\n            setImmediate$1(function() {\n                processingScheduled = false;\n                q.process();\n            });\n        }\n    }\n\n    function _next(tasks) {\n        return function(err){\n            numRunning -= 1;\n\n            for (var i = 0, l = tasks.length; i < l; i++) {\n                var task = tasks[i];\n\n                var index = baseIndexOf(workersList, task, 0);\n                if (index === 0) {\n                    workersList.shift();\n                } else if (index > 0) {\n                    workersList.splice(index, 1);\n                }\n\n                task.callback.apply(task, arguments);\n\n                if (err != null) {\n                    q.error(err, task.data);\n                }\n            }\n\n            if (numRunning <= (q.concurrency - q.buffer) ) {\n                q.unsaturated();\n            }\n\n            if (q.idle()) {\n                q.drain();\n            }\n            q.process();\n        };\n    }\n\n    var isProcessing = false;\n    var q = {\n        _tasks: new DLL(),\n        concurrency: concurrency,\n        payload: payload,\n        saturated: noop,\n        unsaturated:noop,\n        buffer: concurrency / 4,\n        empty: noop,\n        drain: noop,\n        error: noop,\n        started: false,\n        paused: false,\n        push: function (data, callback) {\n            _insert(data, false, callback);\n        },\n        kill: function () {\n            q.drain = noop;\n            q._tasks.empty();\n        },\n        unshift: function (data, callback) {\n            _insert(data, true, callback);\n        },\n        remove: function (testFn) {\n            q._tasks.remove(testFn);\n        },\n        process: function () {\n            // Avoid trying to start too many processing operations. This can occur\n            // when callbacks resolve synchronously (#1267).\n            if (isProcessing) {\n                return;\n            }\n            isProcessing = true;\n            while(!q.paused && numRunning < q.concurrency && q._tasks.length){\n                var tasks = [], data = [];\n                var l = q._tasks.length;\n                if (q.payload) l = Math.min(l, q.payload);\n                for (var i = 0; i < l; i++) {\n                    var node = q._tasks.shift();\n                    tasks.push(node);\n                    workersList.push(node);\n                    data.push(node.data);\n                }\n\n                numRunning += 1;\n\n                if (q._tasks.length === 0) {\n                    q.empty();\n                }\n\n                if (numRunning === q.concurrency) {\n                    q.saturated();\n                }\n\n                var cb = onlyOnce(_next(tasks));\n                _worker(data, cb);\n            }\n            isProcessing = false;\n        },\n        length: function () {\n            return q._tasks.length;\n        },\n        running: function () {\n            return numRunning;\n        },\n        workersList: function () {\n            return workersList;\n        },\n        idle: function() {\n            return q._tasks.length + numRunning === 0;\n        },\n        pause: function () {\n            q.paused = true;\n        },\n        resume: function () {\n            if (q.paused === false) { return; }\n            q.paused = false;\n            setImmediate$1(q.process);\n        }\n    };\n    return q;\n}\n\n/**\n * A cargo of tasks for the worker function to complete. Cargo inherits all of\n * the same methods and event callbacks as [`queue`]{@link module:ControlFlow.queue}.\n * @typedef {Object} CargoObject\n * @memberOf module:ControlFlow\n * @property {Function} length - A function returning the number of items\n * waiting to be processed. Invoke like `cargo.length()`.\n * @property {number} payload - An `integer` for determining how many tasks\n * should be process per round. This property can be changed after a `cargo` is\n * created to alter the payload on-the-fly.\n * @property {Function} push - Adds `task` to the `queue`. The callback is\n * called once the `worker` has finished processing the task. Instead of a\n * single task, an array of `tasks` can be submitted. The respective callback is\n * used for every task in the list. Invoke like `cargo.push(task, [callback])`.\n * @property {Function} saturated - A callback that is called when the\n * `queue.length()` hits the concurrency and further tasks will be queued.\n * @property {Function} empty - A callback that is called when the last item\n * from the `queue` is given to a `worker`.\n * @property {Function} drain - A callback that is called when the last item\n * from the `queue` has returned from the `worker`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke like `cargo.idle()`.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke like `cargo.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke like `cargo.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. Invoke like `cargo.kill()`.\n */\n\n/**\n * Creates a `cargo` object with the specified payload. Tasks added to the\n * cargo will be processed altogether (up to the `payload` limit). If the\n * `worker` is in progress, the task is queued until it becomes available. Once\n * the `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, cargo passes an array of tasks to a single worker, repeating\n * when the worker is finished.\n *\n * @name cargo\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {AsyncFunction} worker - An asynchronous function for processing an array\n * of queued tasks. Invoked with `(tasks, callback)`.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.CargoObject} A cargo object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargo and inner queue.\n * @example\n *\n * // create a cargo object with payload 2\n * var cargo = async.cargo(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2);\n *\n * // add some items\n * cargo.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargo.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * cargo.push({name: 'baz'}, function(err) {\n *     console.log('finished processing baz');\n * });\n */\nfunction cargo(worker, payload) {\n    return queue(worker, 1, payload);\n}\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n *\n * @name eachOfSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Invoked with (err).\n */\nvar eachOfSeries = doLimit(eachOfLimit, 1);\n\n/**\n * Reduces `coll` into a single value using an async `iteratee` to return each\n * successive step. `memo` is the initial state of the reduction. This function\n * only operates in series.\n *\n * For performance reasons, it may make sense to split a call to this function\n * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n * results. This function is for situations where each step in the reduction\n * needs to be async; if you can get the data before reducing it, then it's\n * probably a good idea to do so.\n *\n * @name reduce\n * @static\n * @memberOf module:Collections\n * @method\n * @alias inject\n * @alias foldl\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee complete with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @example\n *\n * async.reduce([1,2,3], 0, function(memo, item, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         callback(null, memo + item)\n *     });\n * }, function(err, result) {\n *     // result is now equal to the last value of memo, which is 6\n * });\n */\nfunction reduce(coll, memo, iteratee, callback) {\n    callback = once(callback || noop);\n    var _iteratee = wrapAsync(iteratee);\n    eachOfSeries(coll, function(x, i, callback) {\n        _iteratee(memo, x, function(err, v) {\n            memo = v;\n            callback(err);\n        });\n    }, function(err) {\n        callback(err, memo);\n    });\n}\n\n/**\n * Version of the compose function that is more natural to read. Each function\n * consumes the return value of the previous function. It is the equivalent of\n * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name seq\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.compose]{@link module:ControlFlow.compose}\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} a function that composes the `functions` in order\n * @example\n *\n * // Requires lodash (or underscore), express3 and dresende's orm2.\n * // Part of an app, that fetches cats of the logged user.\n * // This example uses `seq` function to avoid overnesting and error\n * // handling clutter.\n * app.get('/cats', function(request, response) {\n *     var User = request.models.User;\n *     async.seq(\n *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))\n *         function(user, fn) {\n *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n *         }\n *     )(req.session.user_id, function (err, cats) {\n *         if (err) {\n *             console.error(err);\n *             response.json({ status: 'error', message: err.message });\n *         } else {\n *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n *         }\n *     });\n * });\n */\nfunction seq(/*...functions*/) {\n    var _functions = arrayMap(arguments, wrapAsync);\n    return function(/*...args*/) {\n        var args = slice(arguments);\n        var that = this;\n\n        var cb = args[args.length - 1];\n        if (typeof cb == 'function') {\n            args.pop();\n        } else {\n            cb = noop;\n        }\n\n        reduce(_functions, args, function(newargs, fn, cb) {\n            fn.apply(that, newargs.concat(function(err/*, ...nextargs*/) {\n                var nextargs = slice(arguments, 1);\n                cb(err, nextargs);\n            }));\n        },\n        function(err, results) {\n            cb.apply(that, [err].concat(results));\n        });\n    };\n}\n\n/**\n * Creates a function which is a composition of the passed asynchronous\n * functions. Each function consumes the return value of the function that\n * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name compose\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} an asynchronous function that is the composed\n * asynchronous `functions`\n * @example\n *\n * function add1(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n + 1);\n *     }, 10);\n * }\n *\n * function mul3(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n * 3);\n *     }, 10);\n * }\n *\n * var add1mul3 = async.compose(mul3, add1);\n * add1mul3(4, function (err, result) {\n *     // result now equals 15\n * });\n */\nvar compose = function(/*...args*/) {\n    return seq.apply(null, slice(arguments).reverse());\n};\n\nvar _concat = Array.prototype.concat;\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs a maximum of `limit` async operations at a time.\n *\n * @name concatLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n */\nvar concatLimit = function(coll, limit, iteratee, callback) {\n    callback = callback || noop;\n    var _iteratee = wrapAsync(iteratee);\n    mapLimit(coll, limit, function(val, callback) {\n        _iteratee(val, function(err /*, ...args*/) {\n            if (err) return callback(err);\n            return callback(null, slice(arguments, 1));\n        });\n    }, function(err, mapResults) {\n        var result = [];\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                result = _concat.apply(result, mapResults[i]);\n            }\n        }\n\n        return callback(err, result);\n    });\n};\n\n/**\n * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n * the concatenated list. The `iteratee`s are called in parallel, and the\n * results are concatenated as they return. There is no guarantee that the\n * results array will be returned in the original order of `coll` passed to the\n * `iteratee` function.\n *\n * @name concat\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback(err)] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @example\n *\n * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {\n *     // files is now a list of filenames that exist in the 3 directories\n * });\n */\nvar concat = doLimit(concatLimit, Infinity);\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n *\n * @name concatSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`.\n * The iteratee should complete with an array an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback(err)] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n */\nvar concatSeries = doLimit(concatLimit, 1);\n\n/**\n * Returns a function that when called, calls-back with the values provided.\n * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n * [`auto`]{@link module:ControlFlow.auto}.\n *\n * @name constant\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {...*} arguments... - Any number of arguments to automatically invoke\n * callback with.\n * @returns {AsyncFunction} Returns a function that when invoked, automatically\n * invokes the callback with the previous given arguments.\n * @example\n *\n * async.waterfall([\n *     async.constant(42),\n *     function (value, next) {\n *         // value === 42\n *     },\n *     //...\n * ], callback);\n *\n * async.waterfall([\n *     async.constant(filename, \"utf8\"),\n *     fs.readFile,\n *     function (fileData, next) {\n *         //...\n *     }\n *     //...\n * ], callback);\n *\n * async.auto({\n *     hostname: async.constant(\"https://server.net/\"),\n *     port: findFreePort,\n *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n *         startServer(options, cb);\n *     }],\n *     //...\n * }, callback);\n */\nvar constant = function(/*...values*/) {\n    var values = slice(arguments);\n    var args = [null].concat(values);\n    return function (/*...ignoredArgs, callback*/) {\n        var callback = arguments[arguments.length - 1];\n        return callback.apply(this, args);\n    };\n};\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nfunction _createTester(check, getResult) {\n    return function(eachfn, arr, iteratee, cb) {\n        cb = cb || noop;\n        var testPassed = false;\n        var testResult;\n        eachfn(arr, function(value, _, callback) {\n            iteratee(value, function(err, result) {\n                if (err) {\n                    callback(err);\n                } else if (check(result) && !testResult) {\n                    testPassed = true;\n                    testResult = getResult(true, value);\n                    callback(null, breakLoop);\n                } else {\n                    callback();\n                }\n            });\n        }, function(err) {\n            if (err) {\n                cb(err);\n            } else {\n                cb(null, testPassed ? testResult : getResult(false));\n            }\n        });\n    };\n}\n\nfunction _findGetResult(v, x) {\n    return x;\n}\n\n/**\n * Returns the first value in `coll` that passes an async truth test. The\n * `iteratee` is applied in parallel, meaning the first iteratee to return\n * `true` will fire the detect `callback` with that result. That means the\n * result might not be the first item in the original `coll` (in terms of order)\n * that passes the test.\n\n * If order within the original `coll` is important, then look at\n * [`detectSeries`]{@link module:Collections.detectSeries}.\n *\n * @name detect\n * @static\n * @memberOf module:Collections\n * @method\n * @alias find\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @example\n *\n * async.detect(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // result now equals the first file in the list that exists\n * });\n */\nvar detect = doParallel(_createTester(identity, _findGetResult));\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name detectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findLimit\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nvar detectLimit = doParallelLimit(_createTester(identity, _findGetResult));\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n *\n * @name detectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findSeries\n * @category Collections\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n */\nvar detectSeries = doLimit(detectLimit, 1);\n\nfunction consoleFunc(name) {\n    return function (fn/*, ...args*/) {\n        var args = slice(arguments, 1);\n        args.push(function (err/*, ...args*/) {\n            var args = slice(arguments, 1);\n            if (typeof console === 'object') {\n                if (err) {\n                    if (console.error) {\n                        console.error(err);\n                    }\n                } else if (console[name]) {\n                    arrayEach(args, function (x) {\n                        console[name](x);\n                    });\n                }\n            }\n        });\n        wrapAsync(fn).apply(null, args);\n    };\n}\n\n/**\n * Logs the result of an [`async` function]{@link AsyncFunction} to the\n * `console` using `console.dir` to display the properties of the resulting object.\n * Only works in Node.js or in browsers that support `console.dir` and\n * `console.error` (such as FF and Chrome).\n * If multiple arguments are returned from the async function,\n * `console.dir` is called on each argument in order.\n *\n * @name dir\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} function - The function you want to eventually apply\n * all arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, {hello: name});\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.dir(hello, 'world');\n * {hello: 'world'}\n */\nvar dir = consoleFunc('dir');\n\n/**\n * The post-check version of [`during`]{@link module:ControlFlow.during}. To reflect the difference in\n * the order of operations, the arguments `test` and `fn` are switched.\n *\n * Also a version of [`doWhilst`]{@link module:ControlFlow.doWhilst} with asynchronous `test` function.\n * @name doDuring\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.during]{@link module:ControlFlow.during}\n * @category Control Flow\n * @param {AsyncFunction} fn - An async function which is called each time\n * `test` passes. Invoked with (callback).\n * @param {AsyncFunction} test - asynchronous truth test to perform before each\n * execution of `fn`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `fn`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error if one occurred, otherwise `null`.\n */\nfunction doDuring(fn, test, callback) {\n    callback = onlyOnce(callback || noop);\n    var _fn = wrapAsync(fn);\n    var _test = wrapAsync(test);\n\n    function next(err/*, ...args*/) {\n        if (err) return callback(err);\n        var args = slice(arguments, 1);\n        args.push(check);\n        _test.apply(this, args);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (!truth) return callback(null);\n        _fn(next);\n    }\n\n    check(null, true);\n\n}\n\n/**\n * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n * the order of operations, the arguments `test` and `iteratee` are switched.\n *\n * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n *\n * @name doWhilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - A function which is called each time `test`\n * passes. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `iteratee`. Invoked with any non-error callback results of\n * `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped.\n * `callback` will be passed an error and any arguments passed to the final\n * `iteratee`'s callback. Invoked with (err, [results]);\n */\nfunction doWhilst(iteratee, test, callback) {\n    callback = onlyOnce(callback || noop);\n    var _iteratee = wrapAsync(iteratee);\n    var next = function(err/*, ...args*/) {\n        if (err) return callback(err);\n        var args = slice(arguments, 1);\n        if (test.apply(this, args)) return _iteratee(next);\n        callback.apply(null, [null].concat(args));\n    };\n    _iteratee(next);\n}\n\n/**\n * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n * argument ordering differs from `until`.\n *\n * @name doUntil\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {Function} test - synchronous truth test to perform after each\n * execution of `iteratee`. Invoked with any non-error callback results of\n * `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n */\nfunction doUntil(iteratee, test, callback) {\n    doWhilst(iteratee, function() {\n        return !test.apply(this, arguments);\n    }, callback);\n}\n\n/**\n * Like [`whilst`]{@link module:ControlFlow.whilst}, except the `test` is an asynchronous function that\n * is passed a callback in the form of `function (err, truth)`. If error is\n * passed to `test` or `fn`, the main callback is immediately called with the\n * value of the error.\n *\n * @name during\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} test - asynchronous truth test to perform before each\n * execution of `fn`. Invoked with (callback).\n * @param {AsyncFunction} fn - An async function which is called each time\n * `test` passes. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `fn` has stopped. `callback`\n * will be passed an error, if one occurred, otherwise `null`.\n * @example\n *\n * var count = 0;\n *\n * async.during(\n *     function (callback) {\n *         return callback(null, count < 5);\n *     },\n *     function (callback) {\n *         count++;\n *         setTimeout(callback, 1000);\n *     },\n *     function (err) {\n *         // 5 seconds have passed\n *     }\n * );\n */\nfunction during(test, fn, callback) {\n    callback = onlyOnce(callback || noop);\n    var _fn = wrapAsync(fn);\n    var _test = wrapAsync(test);\n\n    function next(err) {\n        if (err) return callback(err);\n        _test(check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (!truth) return callback(null);\n        _fn(next);\n    }\n\n    _test(check);\n}\n\nfunction _withoutIndex(iteratee) {\n    return function (value, index, callback) {\n        return iteratee(value, callback);\n    };\n}\n\n/**\n * Applies the function `iteratee` to each item in `coll`, in parallel.\n * The `iteratee` is called with an item from the list, and a callback for when\n * it has finished. If the `iteratee` passes an error to its `callback`, the\n * main `callback` (for the `each` function) is immediately called with the\n * error.\n *\n * Note, that since this function applies `iteratee` to each item in parallel,\n * there is no guarantee that the iteratee functions will complete in order.\n *\n * @name each\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEach\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to\n * each item in `coll`. Invoked with (item, callback).\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOf`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * // assuming openFiles is an array of file names and saveFile is a function\n * // to save the modified contents of that file:\n *\n * async.each(openFiles, saveFile, function(err){\n *   // if any of the saves produced an error, err would equal that error\n * });\n *\n * // assuming openFiles is an array of file names\n * async.each(openFiles, function(file, callback) {\n *\n *     // Perform operation on file here.\n *     console.log('Processing file ' + file);\n *\n *     if( file.length > 32 ) {\n *       console.log('This file name is too long');\n *       callback('File name too long');\n *     } else {\n *       // Do work to process file here\n *       console.log('File processed');\n *       callback();\n *     }\n * }, function(err) {\n *     // if any of the file processing produced an error, err would equal that error\n *     if( err ) {\n *       // One of the iterations produced an error.\n *       // All processing will now stop.\n *       console.log('A file failed to process');\n *     } else {\n *       console.log('All files have been processed successfully');\n *     }\n * });\n */\nfunction eachLimit(coll, iteratee, callback) {\n    eachOf(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n}\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfLimit`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nfunction eachLimit$1(coll, limit, iteratee, callback) {\n    _eachOfLimit(limit)(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n}\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n *\n * @name eachSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfSeries`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nvar eachSeries = doLimit(eachLimit$1, 1);\n\n/**\n * Wrap an async function and ensure it calls its callback on a later tick of\n * the event loop.  If the function already calls its callback on a next tick,\n * no extra deferral is added. This is useful for preventing stack overflows\n * (`RangeError: Maximum call stack size exceeded`) and generally keeping\n * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)\n * contained. ES2017 `async` functions are returned as-is -- they are immune\n * to Zalgo's corrupting influences, as they always resolve on a later tick.\n *\n * @name ensureAsync\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - an async function, one that expects a node-style\n * callback as its last argument.\n * @returns {AsyncFunction} Returns a wrapped function with the exact same call\n * signature as the function passed in.\n * @example\n *\n * function sometimesAsync(arg, callback) {\n *     if (cache[arg]) {\n *         return callback(null, cache[arg]); // this would be synchronous!!\n *     } else {\n *         doSomeIO(arg, callback); // this IO would be asynchronous\n *     }\n * }\n *\n * // this has a risk of stack overflows if many results are cached in a row\n * async.mapSeries(args, sometimesAsync, done);\n *\n * // this will defer sometimesAsync's callback if necessary,\n * // preventing stack overflows\n * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n */\nfunction ensureAsync(fn) {\n    if (isAsync(fn)) return fn;\n    return initialParams(function (args, callback) {\n        var sync = true;\n        args.push(function () {\n            var innerArgs = arguments;\n            if (sync) {\n                setImmediate$1(function () {\n                    callback.apply(null, innerArgs);\n                });\n            } else {\n                callback.apply(null, innerArgs);\n            }\n        });\n        fn.apply(this, args);\n        sync = false;\n    });\n}\n\nfunction notId(v) {\n    return !v;\n}\n\n/**\n * Returns `true` if every element in `coll` satisfies an async test. If any\n * iteratee call returns `false`, the main `callback` is immediately called.\n *\n * @name every\n * @static\n * @memberOf module:Collections\n * @method\n * @alias all\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @example\n *\n * async.every(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then every file exists\n * });\n */\nvar every = doParallel(_createTester(notId, notId));\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n *\n * @name everyLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n */\nvar everyLimit = doParallelLimit(_createTester(notId, notId));\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n *\n * @name everySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in series.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n */\nvar everySeries = doLimit(everyLimit, 1);\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nfunction filterArray(eachfn, arr, iteratee, callback) {\n    var truthValues = new Array(arr.length);\n    eachfn(arr, function (x, index, callback) {\n        iteratee(x, function (err, v) {\n            truthValues[index] = !!v;\n            callback(err);\n        });\n    }, function (err) {\n        if (err) return callback(err);\n        var results = [];\n        for (var i = 0; i < arr.length; i++) {\n            if (truthValues[i]) results.push(arr[i]);\n        }\n        callback(null, results);\n    });\n}\n\nfunction filterGeneric(eachfn, coll, iteratee, callback) {\n    var results = [];\n    eachfn(coll, function (x, index, callback) {\n        iteratee(x, function (err, v) {\n            if (err) {\n                callback(err);\n            } else {\n                if (v) {\n                    results.push({index: index, value: x});\n                }\n                callback();\n            }\n        });\n    }, function (err) {\n        if (err) {\n            callback(err);\n        } else {\n            callback(null, arrayMap(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), baseProperty('value')));\n        }\n    });\n}\n\nfunction _filter(eachfn, coll, iteratee, callback) {\n    var filter = isArrayLike(coll) ? filterArray : filterGeneric;\n    filter(eachfn, coll, wrapAsync(iteratee), callback || noop);\n}\n\n/**\n * Returns a new array of all the values in `coll` which pass an async truth\n * test. This operation is performed in parallel, but the results array will be\n * in the same order as the original.\n *\n * @name filter\n * @static\n * @memberOf module:Collections\n * @method\n * @alias select\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @example\n *\n * async.filter(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of the existing files\n * });\n */\nvar filter = doParallel(_filter);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name filterLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar filterLimit = doParallelLimit(_filter);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n *\n * @name filterSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results)\n */\nvar filterSeries = doLimit(filterLimit, 1);\n\n/**\n * Calls the asynchronous function `fn` with a callback parameter that allows it\n * to call itself again, in series, indefinitely.\n\n * If an error is passed to the callback then `errback` is called with the\n * error, and execution stops, otherwise it will never be called.\n *\n * @name forever\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} fn - an async function to call repeatedly.\n * Invoked with (next).\n * @param {Function} [errback] - when `fn` passes an error to it's callback,\n * this function will be called, and execution stops. Invoked with (err).\n * @example\n *\n * async.forever(\n *     function(next) {\n *         // next is suitable for passing to things that need a callback(err [, whatever]);\n *         // it will result in this function being called again.\n *     },\n *     function(err) {\n *         // if next is called with a value in its first parameter, it will appear\n *         // in here as 'err', and execution will stop.\n *     }\n * );\n */\nfunction forever(fn, errback) {\n    var done = onlyOnce(errback || noop);\n    var task = wrapAsync(ensureAsync(fn));\n\n    function next(err) {\n        if (err) return done(err);\n        task(next);\n    }\n    next();\n}\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time.\n *\n * @name groupByLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n */\nvar groupByLimit = function(coll, limit, iteratee, callback) {\n    callback = callback || noop;\n    var _iteratee = wrapAsync(iteratee);\n    mapLimit(coll, limit, function(val, callback) {\n        _iteratee(val, function(err, key) {\n            if (err) return callback(err);\n            return callback(null, {key: key, val: val});\n        });\n    }, function(err, mapResults) {\n        var result = {};\n        // from MDN, handle object having an `hasOwnProperty` prop\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                var key = mapResults[i].key;\n                var val = mapResults[i].val;\n\n                if (hasOwnProperty.call(result, key)) {\n                    result[key].push(val);\n                } else {\n                    result[key] = [val];\n                }\n            }\n        }\n\n        return callback(err, result);\n    });\n};\n\n/**\n * Returns a new object, where each value corresponds to an array of items, from\n * `coll`, that returned the corresponding key. That is, the keys of the object\n * correspond to the values passed to the `iteratee` callback.\n *\n * Note: Since this function applies the `iteratee` to each item in parallel,\n * there is no guarantee that the `iteratee` functions will complete in order.\n * However, the values for each key in the `result` will be in the same order as\n * the original `coll`. For Objects, the values will roughly be in the order of\n * the original Objects' keys (but this can vary across JavaScript engines).\n *\n * @name groupBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @example\n *\n * async.groupBy(['userId1', 'userId2', 'userId3'], function(userId, callback) {\n *     db.findById(userId, function(err, user) {\n *         if (err) return callback(err);\n *         return callback(null, user.age);\n *     });\n * }, function(err, result) {\n *     // result is object containing the userIds grouped by age\n *     // e.g. { 30: ['userId1', 'userId3'], 42: ['userId2']};\n * });\n */\nvar groupBy = doLimit(groupByLimit, Infinity);\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time.\n *\n * @name groupBySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n */\nvar groupBySeries = doLimit(groupByLimit, 1);\n\n/**\n * Logs the result of an `async` function to the `console`. Only works in\n * Node.js or in browsers that support `console.log` and `console.error` (such\n * as FF and Chrome). If multiple arguments are returned from the async\n * function, `console.log` is called on each argument in order.\n *\n * @name log\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} function - The function you want to eventually apply\n * all arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, 'hello ' + name);\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.log(hello, 'world');\n * 'hello world'\n */\nvar log = consoleFunc('log');\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name mapValuesLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nfunction mapValuesLimit(obj, limit, iteratee, callback) {\n    callback = once(callback || noop);\n    var newObj = {};\n    var _iteratee = wrapAsync(iteratee);\n    eachOfLimit(obj, limit, function(val, key, next) {\n        _iteratee(val, key, function (err, result) {\n            if (err) return next(err);\n            newObj[key] = result;\n            next();\n        });\n    }, function (err) {\n        callback(err, newObj);\n    });\n}\n\n/**\n * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n *\n * Produces a new Object by mapping each value of `obj` through the `iteratee`\n * function. The `iteratee` is called each `value` and `key` from `obj` and a\n * callback for when it has finished processing. Each of these callbacks takes\n * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n * passes an error to its callback, the main `callback` (for the `mapValues`\n * function) is immediately called with the error.\n *\n * Note, the order of the keys in the result is not guaranteed.  The keys will\n * be roughly in the order they complete, (but this is very engine-specific)\n *\n * @name mapValues\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @example\n *\n * async.mapValues({\n *     f1: 'file1',\n *     f2: 'file2',\n *     f3: 'file3'\n * }, function (file, key, callback) {\n *   fs.stat(file, callback);\n * }, function(err, result) {\n *     // result is now a map of stats for each file, e.g.\n *     // {\n *     //     f1: [stats for file1],\n *     //     f2: [stats for file2],\n *     //     f3: [stats for file3]\n *     // }\n * });\n */\n\nvar mapValues = doLimit(mapValuesLimit, Infinity);\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n *\n * @name mapValuesSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n */\nvar mapValuesSeries = doLimit(mapValuesLimit, 1);\n\nfunction has(obj, key) {\n    return key in obj;\n}\n\n/**\n * Caches the results of an async function. When creating a hash to store\n * function results against, the callback is omitted from the hash and an\n * optional hash function can be used.\n *\n * If no hash function is specified, the first argument is used as a hash key,\n * which may work reasonably if it is a string or a data type that converts to a\n * distinct string. Note that objects and arrays will not behave reasonably.\n * Neither will cases where the other arguments are significant. In such cases,\n * specify your own hash function.\n *\n * The cache of results is exposed as the `memo` property of the function\n * returned by `memoize`.\n *\n * @name memoize\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function to proxy and cache results from.\n * @param {Function} hasher - An optional function for generating a custom hash\n * for storing results. It has all the arguments applied to it apart from the\n * callback, and must be synchronous.\n * @returns {AsyncFunction} a memoized version of `fn`\n * @example\n *\n * var slow_fn = function(name, callback) {\n *     // do something\n *     callback(null, result);\n * };\n * var fn = async.memoize(slow_fn);\n *\n * // fn can now be used as if it were slow_fn\n * fn('some name', function() {\n *     // callback\n * });\n */\nfunction memoize(fn, hasher) {\n    var memo = Object.create(null);\n    var queues = Object.create(null);\n    hasher = hasher || identity;\n    var _fn = wrapAsync(fn);\n    var memoized = initialParams(function memoized(args, callback) {\n        var key = hasher.apply(null, args);\n        if (has(memo, key)) {\n            setImmediate$1(function() {\n                callback.apply(null, memo[key]);\n            });\n        } else if (has(queues, key)) {\n            queues[key].push(callback);\n        } else {\n            queues[key] = [callback];\n            _fn.apply(null, args.concat(function(/*args*/) {\n                var args = slice(arguments);\n                memo[key] = args;\n                var q = queues[key];\n                delete queues[key];\n                for (var i = 0, l = q.length; i < l; i++) {\n                    q[i].apply(null, args);\n                }\n            }));\n        }\n    });\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n}\n\n/**\n * Calls `callback` on a later loop around the event loop. In Node.js this just\n * calls `process.nextTick`.  In the browser it will use `setImmediate` if\n * available, otherwise `setTimeout(callback, 0)`, which means other higher\n * priority events may precede the execution of `callback`.\n *\n * This is used internally for browser-compatibility purposes.\n *\n * @name nextTick\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.setImmediate]{@link module:Utils.setImmediate}\n * @category Util\n * @param {Function} callback - The function to call on a later loop around\n * the event loop. Invoked with (args...).\n * @param {...*} args... - any number of additional arguments to pass to the\n * callback on the next tick.\n * @example\n *\n * var call_order = [];\n * async.nextTick(function() {\n *     call_order.push('two');\n *     // call_order now equals ['one','two']\n * });\n * call_order.push('one');\n *\n * async.setImmediate(function (a, b, c) {\n *     // a, b, and c equal 1, 2, and 3\n * }, 1, 2, 3);\n */\nvar _defer$1;\n\nif (hasNextTick) {\n    _defer$1 = process.nextTick;\n} else if (hasSetImmediate) {\n    _defer$1 = setImmediate;\n} else {\n    _defer$1 = fallback;\n}\n\nvar nextTick = wrap(_defer$1);\n\nfunction _parallel(eachfn, tasks, callback) {\n    callback = callback || noop;\n    var results = isArrayLike(tasks) ? [] : {};\n\n    eachfn(tasks, function (task, key, callback) {\n        wrapAsync(task)(function (err, result) {\n            if (arguments.length > 2) {\n                result = slice(arguments, 1);\n            }\n            results[key] = result;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, results);\n    });\n}\n\n/**\n * Run the `tasks` collection of functions in parallel, without waiting until\n * the previous function has completed. If any of the functions pass an error to\n * its callback, the main `callback` is immediately called with the value of the\n * error. Once the `tasks` have completed, the results are passed to the final\n * `callback` as an array.\n *\n * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n * parallel execution of code.  If your tasks do not use any timers or perform\n * any I/O, they will actually be executed in series.  Any synchronous setup\n * sections for each task will happen one after the other.  JavaScript remains\n * single-threaded.\n *\n * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the\n * execution of other tasks when a task fails.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n * results from {@link async.parallel}.\n *\n * @name parallel\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n *\n * @example\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // the results array will equal ['one','two'] even though\n *     // the second function had a shorter timeout.\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equals to: {one: 1, two: 2}\n * });\n */\nfunction parallelLimit(tasks, callback) {\n    _parallel(eachOf, tasks, callback);\n}\n\n/**\n * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name parallelLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.parallel]{@link module:ControlFlow.parallel}\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n */\nfunction parallelLimit$1(tasks, limit, callback) {\n    _parallel(_eachOfLimit(limit), tasks, callback);\n}\n\n/**\n * A queue of tasks for the worker function to complete.\n * @typedef {Object} QueueObject\n * @memberOf module:ControlFlow\n * @property {Function} length - a function returning the number of items\n * waiting to be processed. Invoke with `queue.length()`.\n * @property {boolean} started - a boolean indicating whether or not any\n * items have been pushed and processed by the queue.\n * @property {Function} running - a function returning the number of items\n * currently being processed. Invoke with `queue.running()`.\n * @property {Function} workersList - a function returning the array of items\n * currently being processed. Invoke with `queue.workersList()`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n * @property {number} concurrency - an integer for determining how many `worker`\n * functions should be run in parallel. This property can be changed after a\n * `queue` is created to alter the concurrency on-the-fly.\n * @property {Function} push - add a new task to the `queue`. Calls `callback`\n * once the `worker` has finished processing the task. Instead of a single task,\n * a `tasks` array can be submitted. The respective callback is used for every\n * task in the list. Invoke with `queue.push(task, [callback])`,\n * @property {Function} unshift - add a new task to the front of the `queue`.\n * Invoke with `queue.unshift(task, [callback])`.\n * @property {Function} remove - remove items from the queue that match a test\n * function.  The test function will be passed an object with a `data` property,\n * and a `priority` property, if this is a\n * [priorityQueue]{@link module:ControlFlow.priorityQueue} object.\n * Invoked with `queue.remove(testFn)`, where `testFn` is of the form\n * `function ({data, priority}) {}` and returns a Boolean.\n * @property {Function} saturated - a callback that is called when the number of\n * running workers hits the `concurrency` limit, and further tasks will be\n * queued.\n * @property {Function} unsaturated - a callback that is called when the number\n * of running workers is less than the `concurrency` & `buffer` limits, and\n * further tasks will not be queued.\n * @property {number} buffer - A minimum threshold buffer in order to say that\n * the `queue` is `unsaturated`.\n * @property {Function} empty - a callback that is called when the last item\n * from the `queue` is given to a `worker`.\n * @property {Function} drain - a callback that is called when the last item\n * from the `queue` has returned from the `worker`.\n * @property {Function} error - a callback that is called when a task errors.\n * Has the signature `function(error, task)`.\n * @property {boolean} paused - a boolean for determining whether the queue is\n * in a paused state.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke with `queue.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. No more tasks\n * should be pushed to the queue after calling this function. Invoke with `queue.kill()`.\n */\n\n/**\n * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n * `queue` are processed in parallel (up to the `concurrency` limit). If all\n * `worker`s are in progress, the task is queued until one becomes available.\n * Once a `worker` completes a `task`, that `task`'s callback is called.\n *\n * @name queue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} worker - An async function for processing a queued task.\n * If you want to handle errors from an individual task, pass a callback to\n * `q.push()`. Invoked with (task, callback).\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the queue.\n * @example\n *\n * // create a queue object with concurrency 2\n * var q = async.queue(function(task, callback) {\n *     console.log('hello ' + task.name);\n *     callback();\n * }, 2);\n *\n * // assign a callback\n * q.drain = function() {\n *     console.log('all items have been processed');\n * };\n *\n * // add some items to the queue\n * q.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * q.push({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n *\n * // add some items to the queue (batch-wise)\n * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n *     console.log('finished processing item');\n * });\n *\n * // add some items to the front of the queue\n * q.unshift({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n */\nvar queue$1 = function (worker, concurrency) {\n    var _worker = wrapAsync(worker);\n    return queue(function (items, cb) {\n        _worker(items[0], cb);\n    }, concurrency, 1);\n};\n\n/**\n * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n * completed in ascending priority order.\n *\n * @name priorityQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {AsyncFunction} worker - An async function for processing a queued task.\n * If you want to handle errors from an individual task, pass a callback to\n * `q.push()`.\n * Invoked with (task, callback).\n * @param {number} concurrency - An `integer` for determining how many `worker`\n * functions should be run in parallel.  If omitted, the concurrency defaults to\n * `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two\n * differences between `queue` and `priorityQueue` objects:\n * * `push(task, priority, [callback])` - `priority` should be a number. If an\n *   array of `tasks` is given, all tasks will be assigned the same priority.\n * * The `unshift` method was removed.\n */\nvar priorityQueue = function(worker, concurrency) {\n    // Start with a normal queue\n    var q = queue$1(worker, concurrency);\n\n    // Override push to accept second parameter representing priority\n    q.push = function(data, priority, callback) {\n        if (callback == null) callback = noop;\n        if (typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(function() {\n                q.drain();\n            });\n        }\n\n        priority = priority || 0;\n        var nextNode = q._tasks.head;\n        while (nextNode && priority >= nextNode.priority) {\n            nextNode = nextNode.next;\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                priority: priority,\n                callback: callback\n            };\n\n            if (nextNode) {\n                q._tasks.insertBefore(nextNode, item);\n            } else {\n                q._tasks.push(item);\n            }\n        }\n        setImmediate$1(q.process);\n    };\n\n    // Remove unshift function\n    delete q.unshift;\n\n    return q;\n};\n\n/**\n * Runs the `tasks` array of functions in parallel, without waiting until the\n * previous function has completed. Once any of the `tasks` complete or pass an\n * error to its callback, the main `callback` is immediately called. It's\n * equivalent to `Promise.race()`.\n *\n * @name race\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array containing [async functions]{@link AsyncFunction}\n * to run. Each function can complete with an optional `result` value.\n * @param {Function} callback - A callback to run once any of the functions have\n * completed. This function gets an error or result from the first function that\n * completed. Invoked with (err, result).\n * @returns undefined\n * @example\n *\n * async.race([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // main callback\n * function(err, result) {\n *     // the result will be equal to 'two' as it finishes earlier\n * });\n */\nfunction race(tasks, callback) {\n    callback = once(callback || noop);\n    if (!isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));\n    if (!tasks.length) return callback();\n    for (var i = 0, l = tasks.length; i < l; i++) {\n        wrapAsync(tasks[i])(callback);\n    }\n}\n\n/**\n * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n *\n * @name reduceRight\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reduce]{@link module:Collections.reduce}\n * @alias foldr\n * @category Collection\n * @param {Array} array - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee complete with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n */\nfunction reduceRight (array, memo, iteratee, callback) {\n    var reversed = slice(array).reverse();\n    reduce(reversed, memo, iteratee, callback);\n}\n\n/**\n * Wraps the async function in another function that always completes with a\n * result object, even when it errors.\n *\n * The result object has either the property `error` or `value`.\n *\n * @name reflect\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function you want to wrap\n * @returns {Function} - A function that always passes null to it's callback as\n * the error. The second argument to the callback will be an `object` with\n * either an `error` or a `value` property.\n * @example\n *\n * async.parallel([\n *     async.reflect(function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff but error ...\n *         callback('bad stuff happened');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     })\n * ],\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = 'bad stuff happened'\n *     // results[2].value = 'two'\n * });\n */\nfunction reflect(fn) {\n    var _fn = wrapAsync(fn);\n    return initialParams(function reflectOn(args, reflectCallback) {\n        args.push(function callback(error, cbArg) {\n            if (error) {\n                reflectCallback(null, { error: error });\n            } else {\n                var value;\n                if (arguments.length <= 2) {\n                    value = cbArg;\n                } else {\n                    value = slice(arguments, 1);\n                }\n                reflectCallback(null, { value: value });\n            }\n        });\n\n        return _fn.apply(this, args);\n    });\n}\n\n/**\n * A helper function that wraps an array or an object of functions with `reflect`.\n *\n * @name reflectAll\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.reflect]{@link module:Utils.reflect}\n * @category Util\n * @param {Array|Object|Iterable} tasks - The collection of\n * [async functions]{@link AsyncFunction} to wrap in `async.reflect`.\n * @returns {Array} Returns an array of async functions, each wrapped in\n * `async.reflect`\n * @example\n *\n * let tasks = [\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         // do some more stuff but error ...\n *         callback(new Error('bad stuff happened'));\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ];\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = Error('bad stuff happened')\n *     // results[2].value = 'two'\n * });\n *\n * // an example using an object instead of an array\n * let tasks = {\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         callback('two');\n *     },\n *     three: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'three');\n *         }, 100);\n *     }\n * };\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results.one.value = 'one'\n *     // results.two.error = 'two'\n *     // results.three.value = 'three'\n * });\n */\nfunction reflectAll(tasks) {\n    var results;\n    if (isArray(tasks)) {\n        results = arrayMap(tasks, reflect);\n    } else {\n        results = {};\n        baseForOwn(tasks, function(task, key) {\n            results[key] = reflect.call(this, task);\n        });\n    }\n    return results;\n}\n\nfunction reject$1(eachfn, arr, iteratee, callback) {\n    _filter(eachfn, arr, function(value, cb) {\n        iteratee(value, function(err, v) {\n            cb(err, !v);\n        });\n    }, callback);\n}\n\n/**\n * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n *\n * @name reject\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @example\n *\n * async.reject(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, results) {\n *     // results now equals an array of missing files\n *     createFiles(results);\n * });\n */\nvar reject = doParallel(reject$1);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name rejectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar rejectLimit = doParallelLimit(reject$1);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n *\n * @name rejectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n */\nvar rejectSeries = doLimit(rejectLimit, 1);\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant$1(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * Attempts to get a successful response from `task` no more than `times` times\n * before returning an error. If the task is successful, the `callback` will be\n * passed the result of the successful task. If all attempts fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name retry\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @see [async.retryable]{@link module:ControlFlow.retryable}\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n * object with `times` and `interval` or a number.\n * * `times` - The number of attempts to make before giving up.  The default\n *   is `5`.\n * * `interval` - The time to wait between retries, in milliseconds.  The\n *   default is `0`. The interval may also be specified as a function of the\n *   retry count (see example).\n * * `errorFilter` - An optional synchronous function that is invoked on\n *   erroneous result. If it returns `true` the retry attempts will continue;\n *   if the function returns `false` the retry flow is aborted with the current\n *   attempt's error and result being returned to the final callback.\n *   Invoked with (err).\n * * If `opts` is a number, the number specifies the number of times to retry,\n *   with the default interval of `0`.\n * @param {AsyncFunction} task - An async function to retry.\n * Invoked with (callback).\n * @param {Function} [callback] - An optional callback which is called when the\n * task has succeeded, or after the final failed attempt. It receives the `err`\n * and `result` arguments of the last attempt at completing the `task`. Invoked\n * with (err, results).\n *\n * @example\n *\n * // The `retry` function can be used as a stand-alone control flow by passing\n * // a callback, as shown below:\n *\n * // try calling apiMethod 3 times\n * async.retry(3, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 3 times, waiting 200 ms between each retry\n * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 10 times with exponential backoff\n * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n * async.retry({\n *   times: 10,\n *   interval: function(retryCount) {\n *     return 50 * Math.pow(2, retryCount);\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod the default 5 times no delay between each retry\n * async.retry(apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod only when error condition satisfies, all other\n * // errors will abort the retry control flow and return to final callback\n * async.retry({\n *   errorFilter: function(err) {\n *     return err.message === 'Temporary error'; // only retry on a specific error\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // to retry individual methods that are not as reliable within other\n * // control flow functions, use the `retryable` wrapper:\n * async.auto({\n *     users: api.getUsers.bind(api),\n *     payments: async.retryable(3, api.getPayments.bind(api))\n * }, function(err, results) {\n *     // do something with the results\n * });\n *\n */\nfunction retry(opts, task, callback) {\n    var DEFAULT_TIMES = 5;\n    var DEFAULT_INTERVAL = 0;\n\n    var options = {\n        times: DEFAULT_TIMES,\n        intervalFunc: constant$1(DEFAULT_INTERVAL)\n    };\n\n    function parseTimes(acc, t) {\n        if (typeof t === 'object') {\n            acc.times = +t.times || DEFAULT_TIMES;\n\n            acc.intervalFunc = typeof t.interval === 'function' ?\n                t.interval :\n                constant$1(+t.interval || DEFAULT_INTERVAL);\n\n            acc.errorFilter = t.errorFilter;\n        } else if (typeof t === 'number' || typeof t === 'string') {\n            acc.times = +t || DEFAULT_TIMES;\n        } else {\n            throw new Error(\"Invalid arguments for async.retry\");\n        }\n    }\n\n    if (arguments.length < 3 && typeof opts === 'function') {\n        callback = task || noop;\n        task = opts;\n    } else {\n        parseTimes(options, opts);\n        callback = callback || noop;\n    }\n\n    if (typeof task !== 'function') {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n\n    var _task = wrapAsync(task);\n\n    var attempt = 1;\n    function retryAttempt() {\n        _task(function(err) {\n            if (err && attempt++ < options.times &&\n                (typeof options.errorFilter != 'function' ||\n                    options.errorFilter(err))) {\n                setTimeout(retryAttempt, options.intervalFunc(attempt));\n            } else {\n                callback.apply(null, arguments);\n            }\n        });\n    }\n\n    retryAttempt();\n}\n\n/**\n * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method\n * wraps a task and makes it retryable, rather than immediately calling it\n * with retries.\n *\n * @name retryable\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.retry]{@link module:ControlFlow.retry}\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n * options, exactly the same as from `retry`\n * @param {AsyncFunction} task - the asynchronous function to wrap.\n * This function will be passed any arguments passed to the returned wrapper.\n * Invoked with (...args, callback).\n * @returns {AsyncFunction} The wrapped function, which when invoked, will\n * retry on an error, based on the parameters specified in `opts`.\n * This function will accept the same parameters as `task`.\n * @example\n *\n * async.auto({\n *     dep1: async.retryable(3, getFromFlakyService),\n *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n *         maybeProcessData(results.dep1, cb);\n *     })]\n * }, callback);\n */\nvar retryable = function (opts, task) {\n    if (!task) {\n        task = opts;\n        opts = null;\n    }\n    var _task = wrapAsync(task);\n    return initialParams(function (args, callback) {\n        function taskFn(cb) {\n            _task.apply(null, args.concat(cb));\n        }\n\n        if (opts) retry(opts, taskFn, callback);\n        else retry(taskFn, callback);\n\n    });\n};\n\n/**\n * Run the functions in the `tasks` collection in series, each one running once\n * the previous function has completed. If any functions in the series pass an\n * error to its callback, no more functions are run, and `callback` is\n * immediately called with the value of the error. Otherwise, `callback`\n * receives an array of results when `tasks` have completed.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function, and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n *  results from {@link async.series}.\n *\n * **Note** that while many implementations preserve the order of object\n * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n * explicitly states that\n *\n * > The mechanics and order of enumerating the properties is not specified.\n *\n * So if you rely on the order in which your series of functions are executed,\n * and want this to work on all platforms, consider using an array.\n *\n * @name series\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing\n * [async functions]{@link AsyncFunction} to run in series.\n * Each function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This function gets a results array (or object)\n * containing all the result arguments passed to the `task` callbacks. Invoked\n * with (err, result).\n * @example\n * async.series([\n *     function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     },\n *     function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // results is now equal to ['one', 'two']\n * });\n *\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback){\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equal to: {one: 1, two: 2}\n * });\n */\nfunction series(tasks, callback) {\n    _parallel(eachOfSeries, tasks, callback);\n}\n\n/**\n * Returns `true` if at least one element in the `coll` satisfies an async test.\n * If any iteratee call returns `true`, the main `callback` is immediately\n * called.\n *\n * @name some\n * @static\n * @memberOf module:Collections\n * @method\n * @alias any\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @example\n *\n * async.some(['file1','file2','file3'], function(filePath, callback) {\n *     fs.access(filePath, function(err) {\n *         callback(null, !err)\n *     });\n * }, function(err, result) {\n *     // if result is true then at least one of the files exists\n * });\n */\nvar some = doParallel(_createTester(Boolean, identity));\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n *\n * @name someLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anyLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n */\nvar someLimit = doParallelLimit(_createTester(Boolean, identity));\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n *\n * @name someSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anySeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in series.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n */\nvar someSeries = doLimit(someLimit, 1);\n\n/**\n * Sorts a list by the results of running each `coll` value through an async\n * `iteratee`.\n *\n * @name sortBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a value to use as the sort criteria as\n * its `result`.\n * Invoked with (item, callback).\n * @param {Function} callback - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is the items\n * from the original `coll` sorted by the values returned by the `iteratee`\n * calls. Invoked with (err, results).\n * @example\n *\n * async.sortBy(['file1','file2','file3'], function(file, callback) {\n *     fs.stat(file, function(err, stats) {\n *         callback(err, stats.mtime);\n *     });\n * }, function(err, results) {\n *     // results is now the original array of files sorted by\n *     // modified date\n * });\n *\n * // By modifying the callback parameter the\n * // sorting order can be influenced:\n *\n * // ascending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x);\n * }, function(err,result) {\n *     // result callback\n * });\n *\n * // descending order\n * async.sortBy([1,9,3,5], function(x, callback) {\n *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around\n * }, function(err,result) {\n *     // result callback\n * });\n */\nfunction sortBy (coll, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    map(coll, function (x, callback) {\n        _iteratee(x, function (err, criteria) {\n            if (err) return callback(err);\n            callback(null, {value: x, criteria: criteria});\n        });\n    }, function (err, results) {\n        if (err) return callback(err);\n        callback(null, arrayMap(results.sort(comparator), baseProperty('value')));\n    });\n\n    function comparator(left, right) {\n        var a = left.criteria, b = right.criteria;\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n}\n\n/**\n * Sets a time limit on an asynchronous function. If the function does not call\n * its callback within the specified milliseconds, it will be called with a\n * timeout error. The code property for the error object will be `'ETIMEDOUT'`.\n *\n * @name timeout\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} asyncFn - The async function to limit in time.\n * @param {number} milliseconds - The specified time limit.\n * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)\n * to timeout Error for more information..\n * @returns {AsyncFunction} Returns a wrapped function that can be used with any\n * of the control flow functions.\n * Invoke this function with the same parameters as you would `asyncFunc`.\n * @example\n *\n * function myFunction(foo, callback) {\n *     doAsyncTask(foo, function(err, data) {\n *         // handle errors\n *         if (err) return callback(err);\n *\n *         // do some stuff ...\n *\n *         // return processed data\n *         return callback(null, data);\n *     });\n * }\n *\n * var wrapped = async.timeout(myFunction, 1000);\n *\n * // call `wrapped` as you would `myFunction`\n * wrapped({ bar: 'bar' }, function(err, data) {\n *     // if `myFunction` takes < 1000 ms to execute, `err`\n *     // and `data` will have their expected values\n *\n *     // else `err` will be an Error with the code 'ETIMEDOUT'\n * });\n */\nfunction timeout(asyncFn, milliseconds, info) {\n    var fn = wrapAsync(asyncFn);\n\n    return initialParams(function (args, callback) {\n        var timedOut = false;\n        var timer;\n\n        function timeoutCallback() {\n            var name = asyncFn.name || 'anonymous';\n            var error  = new Error('Callback function \"' + name + '\" timed out.');\n            error.code = 'ETIMEDOUT';\n            if (info) {\n                error.info = info;\n            }\n            timedOut = true;\n            callback(error);\n        }\n\n        args.push(function () {\n            if (!timedOut) {\n                callback.apply(null, arguments);\n                clearTimeout(timer);\n            }\n        });\n\n        // setup timer and call original function\n        timer = setTimeout(timeoutCallback, milliseconds);\n        fn.apply(null, args);\n    });\n}\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil;\nvar nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name timesLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} count - The number of times to run the function.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n */\nfunction timeLimit(count, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    mapLimit(baseRange(0, count, 1), limit, _iteratee, callback);\n}\n\n/**\n * Calls the `iteratee` function `n` times, and accumulates results in the same\n * manner you would use with [map]{@link module:Collections.map}.\n *\n * @name times\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @example\n *\n * // Pretend this is some complicated async factory\n * var createUser = function(id, callback) {\n *     callback(null, {\n *         id: 'user' + id\n *     });\n * };\n *\n * // generate 5 users\n * async.times(5, function(n, next) {\n *     createUser(n, function(err, user) {\n *         next(err, user);\n *     });\n * }, function(err, users) {\n *     // we should now have 5 users\n * });\n */\nvar times = doLimit(timeLimit, Infinity);\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n *\n * @name timesSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n */\nvar timesSeries = doLimit(timeLimit, 1);\n\n/**\n * A relative of `reduce`.  Takes an Object or Array, and iterates over each\n * element in series, each step potentially mutating an `accumulator` value.\n * The type of the accumulator defaults to the type of collection passed in.\n *\n * @name transform\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {*} [accumulator] - The initial state of the transform.  If omitted,\n * it will default to an empty Object or Array, depending on the type of `coll`\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * collection that potentially modifies the accumulator.\n * Invoked with (accumulator, item, key, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the transformed accumulator.\n * Invoked with (err, result).\n * @example\n *\n * async.transform([1,2,3], function(acc, item, index, callback) {\n *     // pointless async:\n *     process.nextTick(function() {\n *         acc.push(item * 2)\n *         callback(null)\n *     });\n * }, function(err, result) {\n *     // result is now equal to [2, 4, 6]\n * });\n *\n * @example\n *\n * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {\n *     setImmediate(function () {\n *         obj[key] = val * 2;\n *         callback();\n *     })\n * }, function (err, result) {\n *     // result is equal to {a: 2, b: 4, c: 6}\n * })\n */\nfunction transform (coll, accumulator, iteratee, callback) {\n    if (arguments.length <= 3) {\n        callback = iteratee;\n        iteratee = accumulator;\n        accumulator = isArray(coll) ? [] : {};\n    }\n    callback = once(callback || noop);\n    var _iteratee = wrapAsync(iteratee);\n\n    eachOf(coll, function(v, k, cb) {\n        _iteratee(accumulator, v, k, cb);\n    }, function(err) {\n        callback(err, accumulator);\n    });\n}\n\n/**\n * It runs each task in series but stops whenever any of the functions were\n * successful. If one of the tasks were successful, the `callback` will be\n * passed the result of the successful task. If all tasks fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name tryEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing functions to\n * run, each function is passed a `callback(err, result)` it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {Function} [callback] - An optional callback which is called when one\n * of the tasks has succeeded, or all have failed. It receives the `err` and\n * `result` arguments of the last attempt at completing the `task`. Invoked with\n * (err, results).\n * @example\n * async.tryEach([\n *     function getDataFromFirstWebsite(callback) {\n *         // Try getting the data from the first website\n *         callback(err, data);\n *     },\n *     function getDataFromSecondWebsite(callback) {\n *         // First website failed,\n *         // Try getting the data from the backup website\n *         callback(err, data);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     Now do something with the data.\n * });\n *\n */\nfunction tryEach(tasks, callback) {\n    var error = null;\n    var result;\n    callback = callback || noop;\n    eachSeries(tasks, function(task, callback) {\n        wrapAsync(task)(function (err, res/*, ...args*/) {\n            if (arguments.length > 2) {\n                result = slice(arguments, 1);\n            } else {\n                result = res;\n            }\n            error = err;\n            callback(!err);\n        });\n    }, function () {\n        callback(error, result);\n    });\n}\n\n/**\n * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n * unmemoized form. Handy for testing.\n *\n * @name unmemoize\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.memoize]{@link module:Utils.memoize}\n * @category Util\n * @param {AsyncFunction} fn - the memoized function\n * @returns {AsyncFunction} a function that calls the original unmemoized function\n */\nfunction unmemoize(fn) {\n    return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n    };\n}\n\n/**\n * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs.\n *\n * @name whilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` passes. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns undefined\n * @example\n *\n * var count = 0;\n * async.whilst(\n *     function() { return count < 5; },\n *     function(callback) {\n *         count++;\n *         setTimeout(function() {\n *             callback(null, count);\n *         }, 1000);\n *     },\n *     function (err, n) {\n *         // 5 seconds have passed, n = 5\n *     }\n * );\n */\nfunction whilst(test, iteratee, callback) {\n    callback = onlyOnce(callback || noop);\n    var _iteratee = wrapAsync(iteratee);\n    if (!test()) return callback(null);\n    var next = function(err/*, ...args*/) {\n        if (err) return callback(err);\n        if (test()) return _iteratee(next);\n        var args = slice(arguments, 1);\n        callback.apply(null, [null].concat(args));\n    };\n    _iteratee(next);\n}\n\n/**\n * Repeatedly call `iteratee` until `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs. `callback` will be passed an error and any\n * arguments passed to the final `iteratee`'s callback.\n *\n * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n *\n * @name until\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n */\nfunction until(test, iteratee, callback) {\n    whilst(function() {\n        return !test.apply(this, arguments);\n    }, iteratee, callback);\n}\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}\n * to run.\n * Each function should complete with any number of `result` values.\n * The `result` values will be passed as arguments, in order, to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns undefined\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */\nvar waterfall = function(tasks, callback) {\n    callback = once(callback || noop);\n    if (!isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        var task = wrapAsync(tasks[taskIndex++]);\n        args.push(onlyOnce(next));\n        task.apply(null, args);\n    }\n\n    function next(err/*, ...args*/) {\n        if (err || taskIndex === tasks.length) {\n            return callback.apply(null, arguments);\n        }\n        nextTask(slice(arguments, 1));\n    }\n\n    nextTask([]);\n};\n\n/**\n * An \"async function\" in the context of Async is an asynchronous function with\n * a variable number of parameters, with the final parameter being a callback.\n * (`function (arg1, arg2, ..., callback) {}`)\n * The final callback is of the form `callback(err, results...)`, which must be\n * called once the function is completed.  The callback should be called with a\n * Error as its first argument to signal that an error occurred.\n * Otherwise, if no error occurred, it should be called with `null` as the first\n * argument, and any additional `result` arguments that may apply, to signal\n * successful completion.\n * The callback must be called exactly once, ideally on a later tick of the\n * JavaScript event loop.\n *\n * This type of function is also referred to as a \"Node-style async function\",\n * or a \"continuation passing-style function\" (CPS). Most of the methods of this\n * library are themselves CPS/Node-style async functions, or functions that\n * return CPS/Node-style async functions.\n *\n * Wherever we accept a Node-style async function, we also directly accept an\n * [ES2017 `async` function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function}.\n * In this case, the `async` function will not be passed a final callback\n * argument, and any thrown error will be used as the `err` argument of the\n * implicit callback, and the return value will be used as the `result` value.\n * (i.e. a `rejected` of the returned Promise becomes the `err` callback\n * argument, and a `resolved` value becomes the `result`.)\n *\n * Note, due to JavaScript limitations, we can only detect native `async`\n * functions and not transpilied implementations.\n * Your environment must have `async`/`await` support for this to work.\n * (e.g. Node > v7.6, or a recent version of a modern browser).\n * If you are using `async` functions through a transpiler (e.g. Babel), you\n * must still wrap the function with [asyncify]{@link module:Utils.asyncify},\n * because the `async function` will be compiled to an ordinary function that\n * returns a promise.\n *\n * @typedef {Function} AsyncFunction\n * @static\n */\n\n/**\n * Async is a utility module which provides straight-forward, powerful functions\n * for working with asynchronous JavaScript. Although originally designed for\n * use with [Node.js](http://nodejs.org) and installable via\n * `npm install --save async`, it can also be used directly in the browser.\n * @module async\n * @see AsyncFunction\n */\n\n\n/**\n * A collection of `async` functions for manipulating collections, such as\n * arrays and objects.\n * @module Collections\n */\n\n/**\n * A collection of `async` functions for controlling the flow through a script.\n * @module ControlFlow\n */\n\n/**\n * A collection of `async` utility functions.\n * @module Utils\n */\n\nvar index = {\n    apply: apply,\n    applyEach: applyEach,\n    applyEachSeries: applyEachSeries,\n    asyncify: asyncify,\n    auto: auto,\n    autoInject: autoInject,\n    cargo: cargo,\n    compose: compose,\n    concat: concat,\n    concatLimit: concatLimit,\n    concatSeries: concatSeries,\n    constant: constant,\n    detect: detect,\n    detectLimit: detectLimit,\n    detectSeries: detectSeries,\n    dir: dir,\n    doDuring: doDuring,\n    doUntil: doUntil,\n    doWhilst: doWhilst,\n    during: during,\n    each: eachLimit,\n    eachLimit: eachLimit$1,\n    eachOf: eachOf,\n    eachOfLimit: eachOfLimit,\n    eachOfSeries: eachOfSeries,\n    eachSeries: eachSeries,\n    ensureAsync: ensureAsync,\n    every: every,\n    everyLimit: everyLimit,\n    everySeries: everySeries,\n    filter: filter,\n    filterLimit: filterLimit,\n    filterSeries: filterSeries,\n    forever: forever,\n    groupBy: groupBy,\n    groupByLimit: groupByLimit,\n    groupBySeries: groupBySeries,\n    log: log,\n    map: map,\n    mapLimit: mapLimit,\n    mapSeries: mapSeries,\n    mapValues: mapValues,\n    mapValuesLimit: mapValuesLimit,\n    mapValuesSeries: mapValuesSeries,\n    memoize: memoize,\n    nextTick: nextTick,\n    parallel: parallelLimit,\n    parallelLimit: parallelLimit$1,\n    priorityQueue: priorityQueue,\n    queue: queue$1,\n    race: race,\n    reduce: reduce,\n    reduceRight: reduceRight,\n    reflect: reflect,\n    reflectAll: reflectAll,\n    reject: reject,\n    rejectLimit: rejectLimit,\n    rejectSeries: rejectSeries,\n    retry: retry,\n    retryable: retryable,\n    seq: seq,\n    series: series,\n    setImmediate: setImmediate$1,\n    some: some,\n    someLimit: someLimit,\n    someSeries: someSeries,\n    sortBy: sortBy,\n    timeout: timeout,\n    times: times,\n    timesLimit: timeLimit,\n    timesSeries: timesSeries,\n    transform: transform,\n    tryEach: tryEach,\n    unmemoize: unmemoize,\n    until: until,\n    waterfall: waterfall,\n    whilst: whilst,\n\n    // aliases\n    all: every,\n    allLimit: everyLimit,\n    allSeries: everySeries,\n    any: some,\n    anyLimit: someLimit,\n    anySeries: someSeries,\n    find: detect,\n    findLimit: detectLimit,\n    findSeries: detectSeries,\n    forEach: eachLimit,\n    forEachSeries: eachSeries,\n    forEachLimit: eachLimit$1,\n    forEachOf: eachOf,\n    forEachOfSeries: eachOfSeries,\n    forEachOfLimit: eachOfLimit,\n    inject: reduce,\n    foldl: reduce,\n    foldr: reduceRight,\n    select: filter,\n    selectLimit: filterLimit,\n    selectSeries: filterSeries,\n    wrapSync: asyncify\n};\n\nexports['default'] = index;\nexports.apply = apply;\nexports.applyEach = applyEach;\nexports.applyEachSeries = applyEachSeries;\nexports.asyncify = asyncify;\nexports.auto = auto;\nexports.autoInject = autoInject;\nexports.cargo = cargo;\nexports.compose = compose;\nexports.concat = concat;\nexports.concatLimit = concatLimit;\nexports.concatSeries = concatSeries;\nexports.constant = constant;\nexports.detect = detect;\nexports.detectLimit = detectLimit;\nexports.detectSeries = detectSeries;\nexports.dir = dir;\nexports.doDuring = doDuring;\nexports.doUntil = doUntil;\nexports.doWhilst = doWhilst;\nexports.during = during;\nexports.each = eachLimit;\nexports.eachLimit = eachLimit$1;\nexports.eachOf = eachOf;\nexports.eachOfLimit = eachOfLimit;\nexports.eachOfSeries = eachOfSeries;\nexports.eachSeries = eachSeries;\nexports.ensureAsync = ensureAsync;\nexports.every = every;\nexports.everyLimit = everyLimit;\nexports.everySeries = everySeries;\nexports.filter = filter;\nexports.filterLimit = filterLimit;\nexports.filterSeries = filterSeries;\nexports.forever = forever;\nexports.groupBy = groupBy;\nexports.groupByLimit = groupByLimit;\nexports.groupBySeries = groupBySeries;\nexports.log = log;\nexports.map = map;\nexports.mapLimit = mapLimit;\nexports.mapSeries = mapSeries;\nexports.mapValues = mapValues;\nexports.mapValuesLimit = mapValuesLimit;\nexports.mapValuesSeries = mapValuesSeries;\nexports.memoize = memoize;\nexports.nextTick = nextTick;\nexports.parallel = parallelLimit;\nexports.parallelLimit = parallelLimit$1;\nexports.priorityQueue = priorityQueue;\nexports.queue = queue$1;\nexports.race = race;\nexports.reduce = reduce;\nexports.reduceRight = reduceRight;\nexports.reflect = reflect;\nexports.reflectAll = reflectAll;\nexports.reject = reject;\nexports.rejectLimit = rejectLimit;\nexports.rejectSeries = rejectSeries;\nexports.retry = retry;\nexports.retryable = retryable;\nexports.seq = seq;\nexports.series = series;\nexports.setImmediate = setImmediate$1;\nexports.some = some;\nexports.someLimit = someLimit;\nexports.someSeries = someSeries;\nexports.sortBy = sortBy;\nexports.timeout = timeout;\nexports.times = times;\nexports.timesLimit = timeLimit;\nexports.timesSeries = timesSeries;\nexports.transform = transform;\nexports.tryEach = tryEach;\nexports.unmemoize = unmemoize;\nexports.until = until;\nexports.waterfall = waterfall;\nexports.whilst = whilst;\nexports.all = every;\nexports.allLimit = everyLimit;\nexports.allSeries = everySeries;\nexports.any = some;\nexports.anyLimit = someLimit;\nexports.anySeries = someSeries;\nexports.find = detect;\nexports.findLimit = detectLimit;\nexports.findSeries = detectSeries;\nexports.forEach = eachLimit;\nexports.forEachSeries = eachSeries;\nexports.forEachLimit = eachLimit$1;\nexports.forEachOf = eachOf;\nexports.forEachOfSeries = eachOfSeries;\nexports.forEachOfLimit = eachOfLimit;\nexports.inject = reduce;\nexports.foldl = reduce;\nexports.foldr = reduceRight;\nexports.select = filter;\nexports.selectLimit = filterLimit;\nexports.selectSeries = filterSeries;\nexports.wrapSync = asyncify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar doublearray = require(\"doublearray\");\nvar TokenInfoDictionary = require(\"./TokenInfoDictionary\");\nvar ConnectionCosts = require(\"./ConnectionCosts\");\nvar UnknownDictionary = require(\"./UnknownDictionary\");\n\n/**\n * Dictionaries container for Tokenizer\n * @param {DoubleArray} trie\n * @param {TokenInfoDictionary} token_info_dictionary\n * @param {ConnectionCosts} connection_costs\n * @param {UnknownDictionary} unknown_dictionary\n * @constructor\n */\nfunction DynamicDictionaries(trie, token_info_dictionary, connection_costs, unknown_dictionary) {\n    if (trie != null) {\n        this.trie = trie;\n    } else {\n        this.trie = doublearray.builder(0).build([\n            {k: \"\", v: 1}\n        ]);\n    }\n    if (token_info_dictionary != null) {\n        this.token_info_dictionary = token_info_dictionary;\n    } else {\n        this.token_info_dictionary = new TokenInfoDictionary();\n    }\n    if (connection_costs != null) {\n        this.connection_costs = connection_costs;\n    } else {\n        // backward_size * backward_size\n        this.connection_costs = new ConnectionCosts(0, 0);\n    }\n    if (unknown_dictionary != null) {\n        this.unknown_dictionary = unknown_dictionary;\n    } else {\n        this.unknown_dictionary = new UnknownDictionary();\n    }\n}\n\n// from base.dat & check.dat\nDynamicDictionaries.prototype.loadTrie = function (base_buffer, check_buffer) {\n    this.trie = doublearray.load(base_buffer, check_buffer);\n    return this;\n};\n\nDynamicDictionaries.prototype.loadTokenInfoDictionaries = function (token_info_buffer, pos_buffer, target_map_buffer) {\n    this.token_info_dictionary.loadDictionary(token_info_buffer);\n    this.token_info_dictionary.loadPosVector(pos_buffer);\n    this.token_info_dictionary.loadTargetMap(target_map_buffer);\n    return this;\n};\n\nDynamicDictionaries.prototype.loadConnectionCosts = function (cc_buffer) {\n    this.connection_costs.loadConnectionCosts(cc_buffer);\n    return this;\n};\n\nDynamicDictionaries.prototype.loadUnknownDictionaries = function (unk_buffer, unk_pos_buffer, unk_map_buffer, cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer) {\n    this.unknown_dictionary.loadUnknownDictionaries(unk_buffer, unk_pos_buffer, unk_map_buffer, cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer);\n    return this;\n};\n\nmodule.exports = DynamicDictionaries;\n","// Copyright (c) 2014 Takuya Asano All Rights Reserved.\n\n(function () {\n\n    \"use strict\";\n\n    var TERM_CHAR = \"\\u0000\", // terminal character\n        TERM_CODE = 0,        // terminal character code\n        ROOT_ID = 0,          // index of root node\n        NOT_FOUND = -1,       // traverse() returns if no nodes found\n        BASE_SIGNED = true,\n        CHECK_SIGNED = true,\n        BASE_BYTES = 4,\n        CHECK_BYTES = 4,\n        MEMORY_EXPAND_RATIO = 2;\n\n\n    var newBC = function (initial_size) {\n\n        if (initial_size == null) {\n            initial_size = 1024;\n        }\n\n        var initBase = function (_base, start, end) {  // 'end' index does not include\n            for (var i = start; i < end; i++) {\n                _base[i] = - i + 1;  // inversed previous empty node index\n            }\n            if (0 < check.array[check.array.length - 1]) {\n                var last_used_id = check.array.length - 2;\n                while (0 < check.array[last_used_id]) {\n                    last_used_id--;\n                }\n                _base[start] = - last_used_id;\n            }\n        };\n\n        var initCheck = function (_check, start, end) {\n            for (var i = start; i < end; i++) {\n                _check[i] = - i - 1;  // inversed next empty node index\n            }\n        };\n\n        var realloc = function (min_size) {\n            // expand arrays size by given ratio\n            var new_size = min_size * MEMORY_EXPAND_RATIO;\n            // console.log('re-allocate memory to ' + new_size);\n\n            var base_new_array = newArrayBuffer(base.signed, base.bytes, new_size);\n            initBase(base_new_array, base.array.length, new_size);  // init BASE in new range\n            base_new_array.set(base.array);\n            base.array = null;  // explicit GC\n            base.array = base_new_array;\n\n            var check_new_array = newArrayBuffer(check.signed, check.bytes, new_size);\n            initCheck(check_new_array, check.array.length, new_size);  // init CHECK in new range\n            check_new_array.set(check.array);\n            check.array = null;  // explicit GC\n            check.array = check_new_array;\n        };\n\n        var first_unused_node = ROOT_ID + 1;\n\n        var base = {\n            signed: BASE_SIGNED,\n            bytes: BASE_BYTES,\n            array: newArrayBuffer(BASE_SIGNED, BASE_BYTES, initial_size)\n        };\n\n        var check = {\n            signed: CHECK_SIGNED,\n            bytes: CHECK_BYTES,\n            array: newArrayBuffer(CHECK_SIGNED, CHECK_BYTES, initial_size)\n        };\n\n        // init root node\n        base.array[ROOT_ID] = 1;\n        check.array[ROOT_ID] = ROOT_ID;\n\n        // init BASE\n        initBase(base.array, ROOT_ID + 1, base.array.length);\n\n        // init CHECK\n        initCheck(check.array, ROOT_ID + 1, check.array.length);\n\n        return {\n            getBaseBuffer: function () {\n                return base.array;\n            },\n            getCheckBuffer: function () {\n                return check.array;\n            },\n            loadBaseBuffer: function (base_buffer) {\n                base.array = base_buffer;\n                return this;\n            },\n            loadCheckBuffer: function (check_buffer) {\n                check.array = check_buffer;\n                return this;\n            },\n            size: function () {\n                return Math.max(base.array.length, check.array.length);\n            },\n            getBase: function (index) {\n                if (base.array.length - 1 < index) {\n                    return - index + 1;\n                    // realloc(index);\n                }\n                // if (!Number.isFinite(base.array[index])) {\n                //     console.log('getBase:' + index);\n                //     throw 'getBase' + index;\n                // }\n                return base.array[index];\n            },\n            getCheck: function (index) {\n                if (check.array.length - 1 < index) {\n                    return - index - 1;\n                    // realloc(index);\n                }\n                // if (!Number.isFinite(check.array[index])) {\n                //     console.log('getCheck:' + index);\n                //     throw 'getCheck' + index;\n                // }\n                return check.array[index];\n            },\n            setBase: function (index, base_value) {\n                if (base.array.length - 1 < index) {\n                    realloc(index);\n                }\n                base.array[index] = base_value;\n            },\n            setCheck: function (index, check_value) {\n                if (check.array.length - 1 < index) {\n                    realloc(index);\n                }\n                check.array[index] = check_value;\n            },\n            setFirstUnusedNode: function (index) {\n                // if (!Number.isFinite(index)) {\n                //     throw 'assertion error: setFirstUnusedNode ' + index + ' is not finite number';\n                // }\n                first_unused_node = index;\n            },\n            getFirstUnusedNode: function () {\n                // if (!Number.isFinite(first_unused_node)) {\n                //     throw 'assertion error: getFirstUnusedNode ' + first_unused_node + ' is not finite number';\n                // }\n                return first_unused_node;\n            },\n            shrink: function () {\n                var last_index = this.size() - 1;\n                while (true) {\n                    if (0 <= check.array[last_index]) {\n                        break;\n                    }\n                    last_index--;\n                }\n                base.array = base.array.subarray(0, last_index + 2);   // keep last unused node\n                check.array = check.array.subarray(0, last_index + 2); // keep last unused node\n            },\n            calc: function () {\n                var unused_count = 0;\n                var size = check.array.length;\n                for (var i = 0; i < size; i++) {\n                    if (check.array[i] < 0) {\n                        unused_count++;\n                    }\n                }\n                return {\n                    all: size,\n                    unused: unused_count,\n                    efficiency: (size - unused_count) / size\n                };\n            },\n            dump: function () {\n                // for debug\n                var dump_base = \"\";\n                var dump_check = \"\";\n\n                var i;\n                for (i = 0; i < base.array.length; i++) {\n                    dump_base = dump_base + \" \" + this.getBase(i);\n                }\n                for (i = 0; i < check.array.length; i++) {\n                    dump_check = dump_check + \" \" + this.getCheck(i);\n                }\n\n                console.log(\"base:\" + dump_base);\n                console.log(\"chck:\" + dump_check);\n\n                return \"base:\" + dump_base + \" chck:\" + dump_check;\n            }\n        };\n    };\n\n\n    /**\n     * Factory method of double array\n     */\n    function DoubleArrayBuilder(initial_size) {\n        this.bc = newBC(initial_size);  // BASE and CHECK\n        this.keys = [];\n    }\n\n\n    /**\n     * Append a key to initialize set\n     * (This method should be called by dictionary ordered key)\n     *\n     * @param {String} key\n     * @param {Number} value Integer value from 0 to max signed integer number - 1\n     */\n    DoubleArrayBuilder.prototype.append = function (key, record) {\n        this.keys.push({ k: key, v: record });\n        return this;\n    };\n\n    /**\n     * Build double array for given keys\n     *\n     * @param {Array} keys Array of keys. A key is a Object which has properties 'k', 'v'.\n     * 'k' is a key string, 'v' is a record assigned to that key.\n     * @return {DoubleArray} Compiled double array\n     */\n    DoubleArrayBuilder.prototype.build = function (keys, sorted) {\n\n        if (keys == null) {\n            keys = this.keys;\n        }\n\n        if (keys == null) {\n            return new DoubleArray(this.bc);\n        }\n\n        if (sorted == null) {\n            sorted = false;\n        }\n\n        // Convert key string to ArrayBuffer\n        var buff_keys =\n            keys.map(function (k) {\n                return {\n                    k: stringToUtf8Bytes(k.k + TERM_CHAR),\n                    v: k.v\n                };\n            });\n\n        // Sort keys by byte order\n        if (sorted) {\n            this.keys = buff_keys;\n        } else {\n            this.keys =\n                buff_keys.sort(function (k1, k2) {\n                    var b1 = k1.k;\n                    var b2 = k2.k;\n                    var min_length = Math.min(b1.length, b2.length);\n                    for (var pos = 0; pos < min_length; pos++) {\n                        if (b1[pos] === b2[pos]) {\n                            continue;\n                        }\n                        return b1[pos] - b2[pos];\n                    }\n                    return b1.length - b2.length;\n                });\n        }\n\n        buff_keys = null;  // explicit GC\n\n        this._build(ROOT_ID, 0, 0, this.keys.length);\n        return new DoubleArray(this.bc);\n    };\n\n    /**\n     * Append nodes to BASE and CHECK array recursively\n     */\n    DoubleArrayBuilder.prototype._build = function (parent_index, position, start, length) {\n\n        var children_info = this.getChildrenInfo(position, start, length);\n        var _base = this.findAllocatableBase(children_info);\n\n        this.setBC(parent_index, children_info, _base);\n\n        for (var i = 0; i < children_info.length; i = i + 3) {\n            var child_code = children_info[i];\n            if (child_code === TERM_CODE) {\n                continue;\n            }\n            var child_start = children_info[i + 1];\n            var child_len = children_info[i + 2];\n            var child_index = _base + child_code;\n            this._build(child_index, position + 1, child_start, child_len);\n        }\n    };\n\n    DoubleArrayBuilder.prototype.getChildrenInfo = function (position, start, length) {\n        var current_char = this.keys[start].k[position];\n        var i = 0;\n        var children_info = new Int32Array(length * 3);\n\n        children_info[i++] = current_char;  // char (current)\n        children_info[i++] = start;         // start index (current)\n\n        var next_pos = start;\n        var start_pos = start;\n        for (; next_pos < start + length; next_pos++) {\n            var next_char = this.keys[next_pos].k[position];\n            if (current_char !== next_char) {\n                children_info[i++] = next_pos - start_pos;  // length (current)\n\n                children_info[i++] = next_char;             // char (next)\n                children_info[i++] = next_pos;              // start index (next)\n                current_char = next_char;\n                start_pos = next_pos;\n            }\n        }\n        children_info[i++] = next_pos - start_pos;\n        children_info = children_info.subarray(0, i);\n\n        return children_info;\n    };\n\n    DoubleArrayBuilder.prototype.setBC = function (parent_id, children_info, _base) {\n\n        var bc = this.bc;\n\n        bc.setBase(parent_id, _base);  // Update BASE of parent node\n\n        var i;\n        for (i = 0; i < children_info.length; i = i + 3) {\n            var code = children_info[i];\n            var child_id = _base + code;\n\n            // Update linked list of unused nodes\n\n            // Assertion\n            // if (child_id < 0) {\n            //     throw 'assertion error: child_id is negative'\n            // }\n\n            var prev_unused_id = - bc.getBase(child_id);\n            var next_unused_id = - bc.getCheck(child_id);\n            // if (prev_unused_id < 0) {\n            //     throw 'assertion error: setBC'\n            // }\n            // if (next_unused_id < 0) {\n            //     throw 'assertion error: setBC'\n            // }\n            if (child_id !== bc.getFirstUnusedNode()) {\n                bc.setCheck(prev_unused_id, - next_unused_id);\n            } else {\n                // Update first_unused_node\n                bc.setFirstUnusedNode(next_unused_id);\n            }\n            bc.setBase(next_unused_id, - prev_unused_id);\n\n            var check = parent_id;         // CHECK is parent node index\n            bc.setCheck(child_id, check);  // Update CHECK of child node\n\n            // Update record\n            if (code === TERM_CODE) {\n                var start_pos = children_info[i + 1];\n                // var len = children_info[i + 2];\n                // if (len != 1) {\n                //     throw 'assertion error: there are multiple terminal nodes. len:' + len;\n                // }\n                var value = this.keys[start_pos].v;\n\n                if (value == null) {\n                    value = 0;\n                }\n\n                var base = - value - 1;       // BASE is inverted record value\n                bc.setBase(child_id, base);  // Update BASE of child(leaf) node\n            }\n        }\n    };\n\n\n    /**\n     * Find BASE value that all children are allocatable in double array's region\n     */\n    DoubleArrayBuilder.prototype.findAllocatableBase = function (children_info) {\n\n        var bc = this.bc;\n\n        // Assertion: keys are sorted by byte order\n        // var c = -1;\n        // for (var i = 0; i < children_info.length; i = i + 3) {\n        //     if (children_info[i] < c) {\n        //         throw 'assertion error: not sort key'\n        //     }\n        //     c = children_info[i];\n        // }\n\n        // iterate linked list of unused nodes\n        var _base;\n        var curr = bc.getFirstUnusedNode();  // current index\n        // if (curr < 0) {\n        //     throw 'assertion error: getFirstUnusedNode returns negative value'\n        // }\n\n        while (true) {\n            _base = curr - children_info[0];\n\n            if (_base < 0) {\n                curr = - bc.getCheck(curr);  // next\n\n                // if (curr < 0) {\n                //     throw 'assertion error: getCheck returns negative value'\n                // }\n\n                continue;\n            }\n\n            var empty_area_found = true;\n            for (var i = 0; i < children_info.length; i = i + 3) {\n                var code = children_info[i];\n                var candidate_id = _base + code;\n\n                if (!this.isUnusedNode(candidate_id)) {\n                    // candidate_id is used node\n                    // next\n                    curr = - bc.getCheck(curr);\n                    // if (curr < 0) {\n                    //     throw 'assertion error: getCheck returns negative value'\n                    // }\n\n                    empty_area_found = false;\n                    break;\n                }\n            }\n            if (empty_area_found) {\n                // Area is free\n                return _base;\n            }\n        }\n    };\n\n    /**\n     * Check this double array index is unused or not\n     */\n    DoubleArrayBuilder.prototype.isUnusedNode = function (index) {\n        var bc = this.bc;\n        var check = bc.getCheck(index);\n\n        // if (index < 0) {\n        //     throw 'assertion error: isUnusedNode index:' + index;\n        // }\n\n        if (index === ROOT_ID) {\n            // root node\n            return false;\n        }\n        if (check < 0) {\n            // unused\n            return true;\n        }\n\n        // used node (incl. leaf)\n        return false;\n    };\n\n\n    /**\n     * Factory method of double array\n     */\n    function DoubleArray(bc) {\n        this.bc = bc;       // BASE and CHECK\n        this.bc.shrink();\n    }\n\n\n    /**\n     * Look up a given key in this trie\n     *\n     * @param {String} key\n     * @return {Boolean} True if this trie contains a given key\n     */\n    DoubleArray.prototype.contain = function (key) {\n\n        var bc = this.bc;\n\n        key += TERM_CHAR;\n        var buffer = stringToUtf8Bytes(key);\n\n        var parent = ROOT_ID;\n        var child = NOT_FOUND;\n\n        for (var i = 0; i < buffer.length; i++) {\n            var code = buffer[i];\n\n            child = this.traverse(parent, code);\n            if (child === NOT_FOUND) {\n                return false;\n            }\n\n            if (bc.getBase(child) <= 0) {\n                // leaf node\n                return true;\n            } else {\n                // not leaf\n                parent = child;\n                continue;\n            }\n        }\n        return false;\n    };\n\n\n    /**\n     * Look up a given key in this trie\n     *\n     * @param {String} key\n     * @return {Number} Record value assgned to this key, -1 if this key does not contain\n     */\n    DoubleArray.prototype.lookup = function (key) {\n\n        key += TERM_CHAR;\n        var buffer = stringToUtf8Bytes(key);\n\n        var parent = ROOT_ID;\n        var child = NOT_FOUND;\n\n        for (var i = 0; i < buffer.length; i++) {\n            var code = buffer[i];\n            child = this.traverse(parent, code);\n            if (child === NOT_FOUND) {\n                return NOT_FOUND;\n            }\n            parent = child;\n        }\n\n        var base = this.bc.getBase(child);\n        if (base <= 0) {\n            // leaf node\n            return - base - 1;\n        } else {\n            // not leaf\n            return NOT_FOUND;\n        }\n    };\n\n\n    /**\n     * Common prefix search\n     *\n     * @param {String} key\n     * @return {Array} Each result object has 'k' and 'v' (key and record,\n     * respectively) properties assigned to matched string\n     */\n    DoubleArray.prototype.commonPrefixSearch = function (key) {\n\n        var buffer = stringToUtf8Bytes(key);\n\n        var parent = ROOT_ID;\n        var child = NOT_FOUND;\n\n        var result = [];\n\n        for (var i = 0; i < buffer.length; i++) {\n            var code = buffer[i];\n\n            child = this.traverse(parent, code);\n\n            if (child !== NOT_FOUND) {\n                parent = child;\n\n                // look forward by terminal character code to check this node is a leaf or not\n                var grand_child = this.traverse(child, TERM_CODE);\n\n                if (grand_child !== NOT_FOUND) {\n                    var base = this.bc.getBase(grand_child);\n\n                    var r = {};\n\n                    if (base <= 0) {\n                        // If child is a leaf node, add record to result\n                        r.v = - base - 1;\n                    }\n\n                    // If child is a leaf node, add word to result\n                    r.k = utf8BytesToString(arrayCopy(buffer, 0, i + 1));\n\n                    result.push(r);\n                }\n                continue;\n            } else {\n                break;\n            }\n        }\n\n        return result;\n    };\n\n    DoubleArray.prototype.traverse = function (parent, code) {\n        var child = this.bc.getBase(parent) + code;\n        if (this.bc.getCheck(child) === parent) {\n            return child;\n        } else {\n            return NOT_FOUND;\n        }\n    };\n\n    DoubleArray.prototype.size = function () {\n        return this.bc.size();\n    };\n\n    DoubleArray.prototype.calc = function () {\n        return this.bc.calc();\n    };\n\n    DoubleArray.prototype.dump = function () {\n        return this.bc.dump();\n    };\n\n\n    // Array utility functions\n\n    var newArrayBuffer = function (signed, bytes, size) {\n        if (signed) {\n            switch(bytes) {\n                case 1:\n                return new Int8Array(size);\n                case 2:\n                return new Int16Array(size);\n                case 4:\n                return new Int32Array(size);\n                default:\n                throw new RangeError(\"Invalid newArray parameter element_bytes:\" + bytes);\n            }\n        } else {\n            switch(bytes) {\n                case 1:\n                return new Uint8Array(size);\n                case 2:\n                return new Uint16Array(size);\n                case 4:\n                return new Uint32Array(size);\n                default:\n                throw new RangeError(\"Invalid newArray parameter element_bytes:\" + bytes);\n            }\n        }\n    };\n\n    var arrayCopy = function (src, src_offset, length) {\n        var buffer = new ArrayBuffer(length);\n        var dstU8 = new Uint8Array(buffer, 0, length);\n        var srcU8 = src.subarray(src_offset, length);\n        dstU8.set(srcU8);\n        return dstU8;\n    };\n\n\n    /**\n     * Convert String (UTF-16) to UTF-8 ArrayBuffer\n     *\n     * @param {String} str UTF-16 string to convert\n     * @return {Uint8Array} Byte sequence encoded by UTF-8\n     */\n    var stringToUtf8Bytes = function (str) {\n\n        // Max size of 1 character is 4 bytes\n        var bytes = new Uint8Array(new ArrayBuffer(str.length * 4));\n\n        var i = 0, j = 0;\n\n        while (i < str.length) {\n            var unicode_code;\n\n            var utf16_code = str.charCodeAt(i++);\n            if (utf16_code >= 0xD800 && utf16_code <= 0xDBFF) {\n                // surrogate pair\n                var upper = utf16_code;           // high surrogate\n                var lower = str.charCodeAt(i++);  // low surrogate\n\n                if (lower >= 0xDC00 && lower <= 0xDFFF) {\n                    unicode_code =\n                        (upper - 0xD800) * (1 << 10) + (1 << 16) +\n                        (lower - 0xDC00);\n                } else {\n                    // malformed surrogate pair\n                    return null;\n                }\n            } else {\n                // not surrogate code\n                unicode_code = utf16_code;\n            }\n\n            if (unicode_code < 0x80) {\n                // 1-byte\n                bytes[j++] = unicode_code;\n\n            } else if (unicode_code < (1 << 11)) {\n                // 2-byte\n                bytes[j++] = (unicode_code >>> 6) | 0xC0;\n                bytes[j++] = (unicode_code & 0x3F) | 0x80;\n\n            } else if (unicode_code < (1 << 16)) {\n                // 3-byte\n                bytes[j++] = (unicode_code >>> 12) | 0xE0;\n                bytes[j++] = ((unicode_code >> 6) & 0x3f) | 0x80;\n                bytes[j++] = (unicode_code & 0x3F) | 0x80;\n\n            } else if (unicode_code < (1 << 21)) {\n                // 4-byte\n                bytes[j++] = (unicode_code >>> 18) | 0xF0;\n                bytes[j++] = ((unicode_code >> 12) & 0x3F) | 0x80;\n                bytes[j++] = ((unicode_code >> 6) & 0x3F) | 0x80;\n                bytes[j++] = (unicode_code & 0x3F) | 0x80;\n\n            } else {\n                // malformed UCS4 code\n            }\n        }\n\n        return bytes.subarray(0, j);\n    };\n\n\n    /**\n     * Convert UTF-8 ArrayBuffer to String (UTF-16)\n     *\n     * @param {Uint8Array} bytes UTF-8 byte sequence to convert\n     * @return {String} String encoded by UTF-16\n     */\n    var utf8BytesToString = function (bytes) {\n\n        var str = \"\";\n        var code, b1, b2, b3, b4, upper, lower;\n        var i = 0;\n\n        while (i < bytes.length) {\n\n            b1 = bytes[i++];\n\n            if (b1 < 0x80) {\n                // 1 byte\n                code = b1;\n            } else if ((b1 >> 5) === 0x06) {\n                // 2 bytes\n                b2 = bytes[i++];\n                code = ((b1 & 0x1f) << 6) | (b2 & 0x3f);\n            } else if ((b1 >> 4) === 0x0e) {\n                // 3 bytes\n                b2 = bytes[i++];\n                b3 = bytes[i++];\n                code = ((b1 & 0x0f) << 12) | ((b2 & 0x3f) << 6) | (b3 & 0x3f);\n            } else {\n                // 4 bytes\n                b2 = bytes[i++];\n                b3 = bytes[i++];\n                b4 = bytes[i++];\n                code = ((b1 & 0x07) << 18) | ((b2 & 0x3f) << 12) | ((b3 & 0x3f) << 6) | (b4 & 0x3f);\n            }\n\n            if (code < 0x10000) {\n\t            str += String.fromCharCode(code);\n            } else {\n\t            // surrogate pair\n\t            code -= 0x10000;\n\t            upper = (0xD800 | (code >> 10));\n\t            lower = (0xDC00 | (code & 0x3FF));\n\t            str += String.fromCharCode(upper, lower);\n            }\n        }\n\n        return str;\n    };\n\n\n    // public methods\n    var doublearray = {\n        builder: function (initial_size) {\n            return new DoubleArrayBuilder(initial_size);\n        },\n        load: function (base_buffer, check_buffer) {\n            var bc = newBC(0);\n            bc.loadBaseBuffer(base_buffer);\n            bc.loadCheckBuffer(check_buffer);\n            return new DoubleArray(bc);\n        }\n    };\n\n    if (\"undefined\" === typeof module) {\n\t    // In browser\n        window.doublearray = doublearray;\n    } else {\n\t    // In node\n        module.exports = doublearray;\n    }\n\n})();\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ByteBuffer = require(\"../util/ByteBuffer\");\n\n/**\n * TokenInfoDictionary\n * @constructor\n */\nfunction TokenInfoDictionary() {\n    this.dictionary = new ByteBuffer(10 * 1024 * 1024);\n    this.target_map = {};  // trie_id (of surface form) -> token_info_id (of token)\n    this.pos_buffer = new ByteBuffer(10 * 1024 * 1024);\n}\n\n// left_id right_id word_cost ...\n// ^ this position is token_info_id\nTokenInfoDictionary.prototype.buildDictionary = function (entries) {\n    var dictionary_entries = {};  // using as hashmap, string -> string (word_id -> surface_form) to build dictionary\n\n    for (var i = 0; i < entries.length; i++) {\n        var entry = entries[i];\n\n        if (entry.length < 4) {\n            continue;\n        }\n\n        var surface_form = entry[0];\n        var left_id = entry[1];\n        var right_id = entry[2];\n        var word_cost = entry[3];\n        var feature = entry.slice(4).join(\",\");  // TODO Optimize\n\n        // Assertion\n        if (!isFinite(left_id) || !isFinite(right_id) || !isFinite(word_cost)) {\n            console.log(entry);\n        }\n\n        var token_info_id = this.put(left_id, right_id, word_cost, surface_form, feature);\n        dictionary_entries[token_info_id] = surface_form;\n    }\n\n    // Remove last unused area\n    this.dictionary.shrink();\n    this.pos_buffer.shrink();\n\n    return dictionary_entries;\n};\n\nTokenInfoDictionary.prototype.put = function (left_id, right_id, word_cost, surface_form, feature) {\n    var token_info_id = this.dictionary.position;\n    var pos_id = this.pos_buffer.position;\n\n    this.dictionary.putShort(left_id);\n    this.dictionary.putShort(right_id);\n    this.dictionary.putShort(word_cost);\n    this.dictionary.putInt(pos_id);\n    this.pos_buffer.putString(surface_form + \",\" + feature);\n\n    return token_info_id;\n};\n\nTokenInfoDictionary.prototype.addMapping = function (source, target) {\n    var mapping = this.target_map[source];\n    if (mapping == null) {\n        mapping = [];\n    }\n    mapping.push(target);\n\n    this.target_map[source] = mapping;\n};\n\nTokenInfoDictionary.prototype.targetMapToBuffer = function () {\n    var buffer = new ByteBuffer();\n    var map_keys_size = Object.keys(this.target_map).length;\n    buffer.putInt(map_keys_size);\n    for (var key in this.target_map) {\n        var values = this.target_map[key];  // Array\n        var map_values_size = values.length;\n        buffer.putInt(parseInt(key));\n        buffer.putInt(map_values_size);\n        for (var i = 0; i < values.length; i++) {\n            buffer.putInt(values[i]);\n        }\n    }\n    return buffer.shrink();  // Shrink-ed Typed Array\n};\n\n// from tid.dat\nTokenInfoDictionary.prototype.loadDictionary = function (array_buffer) {\n    this.dictionary = new ByteBuffer(array_buffer);\n    return this;\n};\n\n// from tid_pos.dat\nTokenInfoDictionary.prototype.loadPosVector = function (array_buffer) {\n    this.pos_buffer = new ByteBuffer(array_buffer);\n    return this;\n};\n\n// from tid_map.dat\nTokenInfoDictionary.prototype.loadTargetMap = function (array_buffer) {\n    var buffer = new ByteBuffer(array_buffer);\n    buffer.position = 0;\n    this.target_map = {};\n    buffer.readInt();  // map_keys_size\n    while (true) {\n        if (buffer.buffer.length < buffer.position + 1) {\n            break;\n        }\n        var key = buffer.readInt();\n        var map_values_size = buffer.readInt();\n        for (var i = 0; i < map_values_size; i++) {\n            var value = buffer.readInt();\n            this.addMapping(key, value);\n        }\n    }\n    return this;\n};\n\n/**\n * Look up features in the dictionary\n * @param {string} token_info_id_str Word ID to look up\n * @returns {string} Features string concatenated by \",\"\n */\nTokenInfoDictionary.prototype.getFeatures = function (token_info_id_str) {\n    var token_info_id = parseInt(token_info_id_str);\n    if (isNaN(token_info_id)) {\n        // TODO throw error\n        return \"\";\n    }\n    var pos_id = this.dictionary.getInt(token_info_id + 6);\n    return this.pos_buffer.getString(pos_id);\n};\n\nmodule.exports = TokenInfoDictionary;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Convert String (UTF-16) to UTF-8 ArrayBuffer\n *\n * @param {String} str UTF-16 string to convert\n * @return {Uint8Array} Byte sequence encoded by UTF-8\n */\nvar stringToUtf8Bytes = function (str) {\n\n    // Max size of 1 character is 4 bytes\n    var bytes = new Uint8Array(str.length * 4);\n\n    var i = 0, j = 0;\n\n    while (i < str.length) {\n        var unicode_code;\n\n        var utf16_code = str.charCodeAt(i++);\n        if (utf16_code >= 0xD800 && utf16_code <= 0xDBFF) {\n            // surrogate pair\n            var upper = utf16_code;           // high surrogate\n            var lower = str.charCodeAt(i++);  // low surrogate\n\n            if (lower >= 0xDC00 && lower <= 0xDFFF) {\n                unicode_code =\n                    (upper - 0xD800) * (1 << 10) + (1 << 16) +\n                    (lower - 0xDC00);\n            } else {\n                // malformed surrogate pair\n                return null;\n            }\n        } else {\n            // not surrogate code\n            unicode_code = utf16_code;\n        }\n\n        if (unicode_code < 0x80) {\n            // 1-byte\n            bytes[j++] = unicode_code;\n\n        } else if (unicode_code < (1 << 11)) {\n            // 2-byte\n            bytes[j++] = (unicode_code >>> 6) | 0xC0;\n            bytes[j++] = (unicode_code & 0x3F) | 0x80;\n\n        } else if (unicode_code < (1 << 16)) {\n            // 3-byte\n            bytes[j++] = (unicode_code >>> 12) | 0xE0;\n            bytes[j++] = ((unicode_code >> 6) & 0x3f) | 0x80;\n            bytes[j++] = (unicode_code & 0x3F) | 0x80;\n\n        } else if (unicode_code < (1 << 21)) {\n            // 4-byte\n            bytes[j++] = (unicode_code >>> 18) | 0xF0;\n            bytes[j++] = ((unicode_code >> 12) & 0x3F) | 0x80;\n            bytes[j++] = ((unicode_code >> 6) & 0x3F) | 0x80;\n            bytes[j++] = (unicode_code & 0x3F) | 0x80;\n\n        } else {\n            // malformed UCS4 code\n        }\n    }\n\n    return bytes.subarray(0, j);\n};\n\n/**\n * Convert UTF-8 ArrayBuffer to String (UTF-16)\n *\n * @param {Array} bytes UTF-8 byte sequence to convert\n * @return {String} String encoded by UTF-16\n */\nvar utf8BytesToString = function (bytes) {\n\n    var str = \"\";\n    var code, b1, b2, b3, b4, upper, lower;\n    var i = 0;\n\n    while (i < bytes.length) {\n\n        b1 = bytes[i++];\n\n        if (b1 < 0x80) {\n            // 1 byte\n            code = b1;\n        } else if ((b1 >> 5) === 0x06) {\n            // 2 bytes\n            b2 = bytes[i++];\n            code = ((b1 & 0x1f) << 6) | (b2 & 0x3f);\n        } else if ((b1 >> 4) === 0x0e) {\n            // 3 bytes\n            b2 = bytes[i++];\n            b3 = bytes[i++];\n            code = ((b1 & 0x0f) << 12) | ((b2 & 0x3f) << 6) | (b3 & 0x3f);\n        } else {\n            // 4 bytes\n            b2 = bytes[i++];\n            b3 = bytes[i++];\n            b4 = bytes[i++];\n            code = ((b1 & 0x07) << 18) | ((b2 & 0x3f) << 12) | ((b3 & 0x3f) << 6) | (b4 & 0x3f);\n        }\n\n        if (code < 0x10000) {\n            str += String.fromCharCode(code);\n        } else {\n            // surrogate pair\n            code -= 0x10000;\n            upper = (0xD800 | (code >> 10));\n            lower = (0xDC00 | (code & 0x3FF));\n            str += String.fromCharCode(upper, lower);\n        }\n    }\n\n    return str;\n};\n\n/**\n * Utilities to manipulate byte sequence\n * @param {(number|Uint8Array)} arg Initial size of this buffer (number), or buffer to set (Uint8Array)\n * @constructor\n */\nfunction ByteBuffer(arg) {\n    var initial_size;\n    if (arg == null) {\n        initial_size = 1024 * 1024;\n    } else if (typeof arg === \"number\") {\n        initial_size = arg;\n    } else if (arg instanceof Uint8Array) {\n        this.buffer = arg;\n        this.position = 0;  // Overwrite\n        return;\n    } else {\n        // typeof arg -> String\n        throw typeof arg + \" is invalid parameter type for ByteBuffer constructor\";\n    }\n    // arg is null or number\n    this.buffer = new Uint8Array(initial_size);\n    this.position = 0;\n}\n\nByteBuffer.prototype.size = function () {\n    return this.buffer.length;\n};\n\nByteBuffer.prototype.reallocate = function () {\n    var new_array = new Uint8Array(this.buffer.length * 2);\n    new_array.set(this.buffer);\n    this.buffer = new_array;\n};\n\nByteBuffer.prototype.shrink = function () {\n    this.buffer = this.buffer.subarray(0, this.position);\n    return this.buffer;\n};\n\nByteBuffer.prototype.put = function (b) {\n    if (this.buffer.length < this.position + 1) {\n        this.reallocate();\n    }\n    this.buffer[this.position++] = b;\n};\n\nByteBuffer.prototype.get = function (index) {\n    if (index == null) {\n        index = this.position;\n        this.position += 1;\n    }\n    if (this.buffer.length < index + 1) {\n        return 0;\n    }\n    return this.buffer[index];\n};\n\n// Write short to buffer by little endian\nByteBuffer.prototype.putShort = function (num) {\n    if (0xFFFF < num) {\n        throw num + \" is over short value\";\n    }\n    var lower = (0x00FF & num);\n    var upper = (0xFF00 & num) >> 8;\n    this.put(lower);\n    this.put(upper);\n};\n\n// Read short from buffer by little endian\nByteBuffer.prototype.getShort = function (index) {\n    if (index == null) {\n        index = this.position;\n        this.position += 2;\n    }\n    if (this.buffer.length < index + 2) {\n        return 0;\n    }\n    var lower = this.buffer[index];\n    var upper = this.buffer[index + 1];\n    var value = (upper << 8) + lower;\n    if (value & 0x8000) {\n\tvalue = -((value - 1) ^ 0xFFFF);\n    }\n    return value;\n};\n\n// Write integer to buffer by little endian\nByteBuffer.prototype.putInt = function (num) {\n    if (0xFFFFFFFF < num) {\n        throw num + \" is over integer value\";\n    }\n    var b0 = (0x000000FF & num);\n    var b1 = (0x0000FF00 & num) >> 8;\n    var b2 = (0x00FF0000 & num) >> 16;\n    var b3 = (0xFF000000 & num) >> 24;\n    this.put(b0);\n    this.put(b1);\n    this.put(b2);\n    this.put(b3);\n};\n\n// Read integer from buffer by little endian\nByteBuffer.prototype.getInt = function (index) {\n    if (index == null) {\n        index = this.position;\n        this.position += 4;\n    }\n    if (this.buffer.length < index + 4) {\n        return 0;\n    }\n    var b0 = this.buffer[index];\n    var b1 = this.buffer[index + 1];\n    var b2 = this.buffer[index + 2];\n    var b3 = this.buffer[index + 3];\n\n    return (b3 << 24) + (b2 << 16) + (b1 << 8) + b0;\n};\n\nByteBuffer.prototype.readInt = function () {\n    var pos = this.position;\n    this.position += 4;\n    return this.getInt(pos);\n};\n\nByteBuffer.prototype.putString = function (str) {\n    var bytes = stringToUtf8Bytes(str);\n    for (var i = 0; i < bytes.length; i++) {\n        this.put(bytes[i]);\n    }\n    // put null character as terminal character\n    this.put(0);\n};\n\nByteBuffer.prototype.getString = function (index) {\n    var buf = [],\n        ch;\n    if (index == null) {\n        index = this.position;\n    }\n    while (true) {\n        if (this.buffer.length < index + 1) {\n            break;\n        }\n        ch = this.get(index++);\n        if (ch === 0) {\n            break;\n        } else {\n            buf.push(ch);\n        }\n    }\n    this.position = index;\n    return utf8BytesToString(buf);\n};\n\nmodule.exports = ByteBuffer;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * Connection costs matrix from cc.dat file.\n * 2 dimension matrix [forward_id][backward_id] -> cost\n * @constructor\n * @param {number} forward_dimension\n * @param {number} backward_dimension\n */\nfunction ConnectionCosts(forward_dimension, backward_dimension) {\n    this.forward_dimension = forward_dimension;\n    this.backward_dimension = backward_dimension;\n\n    // leading 2 integers for forward_dimension, backward_dimension, respectively\n    this.buffer = new Int16Array(forward_dimension * backward_dimension + 2);\n    this.buffer[0] = forward_dimension;\n    this.buffer[1] = backward_dimension;\n}\n\nConnectionCosts.prototype.put = function (forward_id, backward_id, cost) {\n    var index = forward_id * this.backward_dimension + backward_id + 2;\n    if (this.buffer.length < index + 1) {\n        throw \"ConnectionCosts buffer overflow\";\n    }\n    this.buffer[index] = cost;\n};\n\nConnectionCosts.prototype.get = function (forward_id, backward_id) {\n    var index = forward_id * this.backward_dimension + backward_id + 2;\n    if (this.buffer.length < index + 1) {\n        throw \"ConnectionCosts buffer overflow\";\n    }\n    return this.buffer[index];\n};\n\nConnectionCosts.prototype.loadConnectionCosts = function (connection_costs_buffer) {\n    this.forward_dimension = connection_costs_buffer[0];\n    this.backward_dimension = connection_costs_buffer[1];\n    this.buffer = connection_costs_buffer;\n};\n\nmodule.exports = ConnectionCosts;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar TokenInfoDictionary = require(\"./TokenInfoDictionary\");\nvar CharacterDefinition = require(\"./CharacterDefinition\");\nvar ByteBuffer = require(\"../util/ByteBuffer\");\n\n/**\n * UnknownDictionary\n * @constructor\n */\nfunction UnknownDictionary() {\n    this.dictionary = new ByteBuffer(10 * 1024 * 1024);\n    this.target_map = {};  // class_id (of CharacterClass) -> token_info_id (of unknown class)\n    this.pos_buffer = new ByteBuffer(10 * 1024 * 1024);\n    this.character_definition = null;\n}\n\n// Inherit from TokenInfoDictionary as a super class\nUnknownDictionary.prototype = Object.create(TokenInfoDictionary.prototype);\n\nUnknownDictionary.prototype.characterDefinition = function (character_definition) {\n    this.character_definition = character_definition;\n    return this;\n};\n\nUnknownDictionary.prototype.lookup = function (ch) {\n    return this.character_definition.lookup(ch);\n};\n\nUnknownDictionary.prototype.lookupCompatibleCategory = function (ch) {\n    return this.character_definition.lookupCompatibleCategory(ch);\n};\n\nUnknownDictionary.prototype.loadUnknownDictionaries = function (unk_buffer, unk_pos_buffer, unk_map_buffer, cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer) {\n    this.loadDictionary(unk_buffer);\n    this.loadPosVector(unk_pos_buffer);\n    this.loadTargetMap(unk_map_buffer);\n    this.character_definition = CharacterDefinition.load(cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer);\n};\n\nmodule.exports = UnknownDictionary;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar InvokeDefinitionMap = require(\"./InvokeDefinitionMap\");\nvar CharacterClass = require(\"./CharacterClass\");\nvar SurrogateAwareString = require(\"../util/SurrogateAwareString\");\n\nvar DEFAULT_CATEGORY = \"DEFAULT\";\n\n/**\n * CharacterDefinition represents char.def file and\n * defines behavior of unknown word processing\n * @constructor\n */\nfunction CharacterDefinition() {\n    this.character_category_map = new Uint8Array(65536);  // for all UCS2 code points\n    this.compatible_category_map = new Uint32Array(65536);  // for all UCS2 code points\n    this.invoke_definition_map = null;\n}\n\n/**\n * Load CharacterDefinition\n * @param {Uint8Array} cat_map_buffer\n * @param {Uint32Array} compat_cat_map_buffer\n * @param {InvokeDefinitionMap} invoke_def_buffer\n * @returns {CharacterDefinition}\n */\nCharacterDefinition.load = function (cat_map_buffer, compat_cat_map_buffer, invoke_def_buffer) {\n    var char_def = new CharacterDefinition();\n    char_def.character_category_map = cat_map_buffer;\n    char_def.compatible_category_map = compat_cat_map_buffer;\n    char_def.invoke_definition_map = InvokeDefinitionMap.load(invoke_def_buffer);\n    return char_def;\n};\n\nCharacterDefinition.parseCharCategory = function (class_id, parsed_category_def) {\n    var category = parsed_category_def[1];\n    var invoke = parseInt(parsed_category_def[2]);\n    var grouping = parseInt(parsed_category_def[3]);\n    var max_length = parseInt(parsed_category_def[4]);\n    if (!isFinite(invoke) || (invoke !== 0 && invoke !== 1)) {\n        console.log(\"char.def parse error. INVOKE is 0 or 1 in:\" + invoke);\n        return null;\n    }\n    if (!isFinite(grouping) || (grouping !== 0 && grouping !== 1)) {\n        console.log(\"char.def parse error. GROUP is 0 or 1 in:\" + grouping);\n        return null;\n    }\n    if (!isFinite(max_length) || max_length < 0) {\n        console.log(\"char.def parse error. LENGTH is 1 to n:\" + max_length);\n        return null;\n    }\n    var is_invoke = (invoke === 1);\n    var is_grouping = (grouping === 1);\n\n    return new CharacterClass(class_id, category, is_invoke, is_grouping, max_length);\n};\n\nCharacterDefinition.parseCategoryMapping = function (parsed_category_mapping) {\n    var start = parseInt(parsed_category_mapping[1]);\n    var default_category = parsed_category_mapping[2];\n    var compatible_category = (3 < parsed_category_mapping.length) ? parsed_category_mapping.slice(3) : [];\n    if (!isFinite(start) || start < 0 || start > 0xFFFF) {\n        console.log(\"char.def parse error. CODE is invalid:\" + start);\n    }\n    return { start: start, default: default_category, compatible: compatible_category};\n};\n\nCharacterDefinition.parseRangeCategoryMapping = function (parsed_category_mapping) {\n    var start = parseInt(parsed_category_mapping[1]);\n    var end = parseInt(parsed_category_mapping[2]);\n    var default_category = parsed_category_mapping[3];\n    var compatible_category = (4 < parsed_category_mapping.length) ? parsed_category_mapping.slice(4) : [];\n    if (!isFinite(start) || start < 0 || start > 0xFFFF) {\n        console.log(\"char.def parse error. CODE is invalid:\" + start);\n    }\n    if (!isFinite(end) || end < 0 || end > 0xFFFF) {\n        console.log(\"char.def parse error. CODE is invalid:\" + end);\n    }\n    return { start: start, end: end, default: default_category, compatible: compatible_category};\n};\n\n/**\n * Initializing method\n * @param {Array} category_mapping Array of category mapping\n */\nCharacterDefinition.prototype.initCategoryMappings = function (category_mapping) {\n    // Initialize map by DEFAULT class\n    var code_point;\n    if (category_mapping != null) {\n        for (var i = 0; i < category_mapping.length; i++) {\n            var mapping = category_mapping[i];\n            var end = mapping.end || mapping.start;\n            for (code_point = mapping.start; code_point <= end; code_point++) {\n\n                // Default Category class ID\n                this.character_category_map[code_point] = this.invoke_definition_map.lookup(mapping.default);\n\n                for (var j = 0; j < mapping.compatible.length; j++) {\n                    var bitset = this.compatible_category_map[code_point];\n                    var compatible_category = mapping.compatible[j];\n                    if (compatible_category == null) {\n                        continue;\n                    }\n                    var class_id = this.invoke_definition_map.lookup(compatible_category);  // Default Category\n                    if (class_id == null) {\n                        continue;\n                    }\n                    var class_id_bit = 1 << class_id;\n                    bitset = bitset | class_id_bit;  // Set a bit of class ID 例えば、class_idが3のとき、3ビット目に1を立てる\n                    this.compatible_category_map[code_point] = bitset;\n                }\n            }\n        }\n    }\n    var default_id = this.invoke_definition_map.lookup(DEFAULT_CATEGORY);\n    if (default_id == null) {\n        return;\n    }\n    for (code_point = 0; code_point < this.character_category_map.length; code_point++) {\n        // 他に何のクラスも定義されていなかったときだけ DEFAULT\n        if (this.character_category_map[code_point] === 0) {\n            // DEFAULT class ID に対応するビットだけ1を立てる\n            this.character_category_map[code_point] = 1 << default_id;\n        }\n    }\n};\n\n/**\n * Lookup compatible categories for a character (not included 1st category)\n * @param {string} ch UCS2 character (just 1st character is effective)\n * @returns {Array.<CharacterClass>} character classes\n */\nCharacterDefinition.prototype.lookupCompatibleCategory = function (ch) {\n    var classes = [];\n\n    /*\n     if (SurrogateAwareString.isSurrogatePair(ch)) {\n     // Surrogate pair character codes can not be defined by char.def\n     return classes;\n     }*/\n    var code = ch.charCodeAt(0);\n    var integer;\n    if (code < this.compatible_category_map.length) {\n        integer = this.compatible_category_map[code];  // Bitset\n    }\n\n    if (integer == null || integer === 0) {\n        return classes;\n    }\n\n    for (var bit = 0; bit < 32; bit++) {  // Treat \"bit\" as a class ID\n        if (((integer << (31 - bit)) >>> 31) === 1) {\n            var character_class = this.invoke_definition_map.getCharacterClass(bit);\n            if (character_class == null) {\n                continue;\n            }\n            classes.push(character_class);\n        }\n    }\n    return classes;\n};\n\n\n/**\n * Lookup category for a character\n * @param {string} ch UCS2 character (just 1st character is effective)\n * @returns {CharacterClass} character class\n */\nCharacterDefinition.prototype.lookup = function (ch) {\n\n    var class_id;\n\n    var code = ch.charCodeAt(0);\n    if (SurrogateAwareString.isSurrogatePair(ch)) {\n        // Surrogate pair character codes can not be defined by char.def, so set DEFAULT category\n        class_id = this.invoke_definition_map.lookup(DEFAULT_CATEGORY);\n    } else if (code < this.character_category_map.length) {\n        class_id = this.character_category_map[code];  // Read as integer value\n    }\n\n    if (class_id == null) {\n        class_id = this.invoke_definition_map.lookup(DEFAULT_CATEGORY);\n    }\n\n    return this.invoke_definition_map.getCharacterClass(class_id);\n};\n\nmodule.exports = CharacterDefinition;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ByteBuffer = require(\"../util/ByteBuffer\");\nvar CharacterClass = require(\"./CharacterClass\");\n\n/**\n * InvokeDefinitionMap represents invoke definition a part of char.def\n * @constructor\n */\nfunction InvokeDefinitionMap() {\n    this.map = [];\n    this.lookup_table = {};  // Just for building dictionary\n}\n\n/**\n * Load InvokeDefinitionMap from buffer\n * @param {Uint8Array} invoke_def_buffer\n * @returns {InvokeDefinitionMap}\n */\nInvokeDefinitionMap.load = function (invoke_def_buffer) {\n    var invoke_def = new InvokeDefinitionMap();\n    var character_category_definition = [];\n\n    var buffer = new ByteBuffer(invoke_def_buffer);\n    while (buffer.position + 1 < buffer.size()) {\n        var class_id = character_category_definition.length;\n        var is_always_invoke = buffer.get();\n        var is_grouping = buffer.get();\n        var max_length = buffer.getInt();\n        var class_name = buffer.getString();\n        character_category_definition.push(new CharacterClass(class_id, class_name, is_always_invoke, is_grouping, max_length));\n    }\n\n    invoke_def.init(character_category_definition);\n\n    return invoke_def;\n};\n\n/**\n * Initializing method\n * @param {Array.<CharacterClass>} character_category_definition Array of CharacterClass\n */\nInvokeDefinitionMap.prototype.init = function (character_category_definition) {\n    if (character_category_definition == null) {\n        return;\n    }\n    for (var i = 0; i < character_category_definition.length; i++) {\n        var character_class = character_category_definition[i];\n        this.map[i] = character_class;\n        this.lookup_table[character_class.class_name] = i;\n    }\n};\n\n/**\n * Get class information by class ID\n * @param {number} class_id\n * @returns {CharacterClass}\n */\nInvokeDefinitionMap.prototype.getCharacterClass = function (class_id) {\n    return this.map[class_id];\n};\n\n/**\n * For building character definition dictionary\n * @param {string} class_name character\n * @returns {number} class_id\n */\nInvokeDefinitionMap.prototype.lookup = function (class_name) {\n    var class_id = this.lookup_table[class_name];\n    if (class_id == null) {\n        return null;\n    }\n    return class_id;\n};\n\n/**\n * Transform from map to binary buffer\n * @returns {Uint8Array}\n */\nInvokeDefinitionMap.prototype.toBuffer = function () {\n    var buffer = new ByteBuffer();\n    for (var i = 0; i < this.map.length; i++) {\n        var char_class = this.map[i];\n        buffer.put(char_class.is_always_invoke);\n        buffer.put(char_class.is_grouping);\n        buffer.putInt(char_class.max_length);\n        buffer.putString(char_class.class_name);\n    }\n    buffer.shrink();\n    return buffer.buffer;\n};\n\nmodule.exports = InvokeDefinitionMap;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\n/**\n * CharacterClass\n * @param {number} class_id\n * @param {string} class_name\n * @param {boolean} is_always_invoke\n * @param {boolean} is_grouping\n * @param {number} max_length\n * @constructor\n */\nfunction CharacterClass(class_id, class_name, is_always_invoke, is_grouping, max_length) {\n    this.class_id = class_id;\n    this.class_name = class_name;\n    this.is_always_invoke = is_always_invoke;\n    this.is_grouping = is_grouping;\n    this.max_length = max_length;\n}\n\nmodule.exports = CharacterClass;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar doublearray = require(\"doublearray\");\nvar DynamicDictionaries = require(\"../DynamicDictionaries\");\nvar TokenInfoDictionary = require(\"../TokenInfoDictionary\");\nvar ConnectionCostsBuilder = require(\"./ConnectionCostsBuilder\");\nvar CharacterDefinitionBuilder = require(\"./CharacterDefinitionBuilder\");\nvar UnknownDictionary = require(\"../UnknownDictionary\");\n\n/**\n * Build dictionaries (token info, connection costs)\n *\n * Generates from matrix.def\n * cc.dat: Connection costs\n *\n * Generates from *.csv\n * dat.dat: Double array\n * tid.dat: Token info dictionary\n * tid_map.dat: targetMap\n * tid_pos.dat: posList (part of speech)\n */\nfunction DictionaryBuilder() {\n    // Array of entries, each entry in Mecab form\n    // (0: surface form, 1: left id, 2: right id, 3: word cost, 4: part of speech id, 5-: other features)\n    this.tid_entries = [];\n    this.unk_entries = [];\n    this.cc_builder = new ConnectionCostsBuilder();\n    this.cd_builder = new CharacterDefinitionBuilder();\n}\n\nDictionaryBuilder.prototype.addTokenInfoDictionary = function (line) {\n    var new_entry = line.split(\",\");\n    this.tid_entries.push(new_entry);\n    return this;\n};\n\n/**\n * Put one line of \"matrix.def\" file for building ConnectionCosts object\n * @param {string} line is a line of \"matrix.def\"\n */\nDictionaryBuilder.prototype.putCostMatrixLine = function (line) {\n    this.cc_builder.putLine(line);\n    return this;\n};\n\nDictionaryBuilder.prototype.putCharDefLine = function (line) {\n    this.cd_builder.putLine(line);\n    return this;\n};\n\n/**\n * Put one line of \"unk.def\" file for building UnknownDictionary object\n * @param {string} line is a line of \"unk.def\"\n */\nDictionaryBuilder.prototype.putUnkDefLine = function (line) {\n    this.unk_entries.push(line.split(\",\"));\n    return this;\n};\n\nDictionaryBuilder.prototype.build = function () {\n    var dictionaries = this.buildTokenInfoDictionary();\n    var unknown_dictionary = this.buildUnknownDictionary();\n\n    return new DynamicDictionaries(dictionaries.trie, dictionaries.token_info_dictionary, this.cc_builder.build(), unknown_dictionary);\n};\n\n/**\n * Build TokenInfoDictionary\n *\n * @returns {{trie: *, token_info_dictionary: *}}\n */\nDictionaryBuilder.prototype.buildTokenInfoDictionary = function () {\n\n    var token_info_dictionary = new TokenInfoDictionary();\n\n    // using as hashmap, string -> string (word_id -> surface_form) to build dictionary\n    var dictionary_entries = token_info_dictionary.buildDictionary(this.tid_entries);\n\n    var trie = this.buildDoubleArray();\n\n    for (var token_info_id in dictionary_entries) {\n        var surface_form = dictionary_entries[token_info_id];\n        var trie_id = trie.lookup(surface_form);\n\n        // Assertion\n        // if (trie_id < 0) {\n        //     console.log(\"Not Found:\" + surface_form);\n        // }\n\n        token_info_dictionary.addMapping(trie_id, token_info_id);\n    }\n\n    return {\n        trie: trie,\n        token_info_dictionary: token_info_dictionary\n    };\n};\n\nDictionaryBuilder.prototype.buildUnknownDictionary = function () {\n\n    var unk_dictionary = new UnknownDictionary();\n\n    // using as hashmap, string -> string (word_id -> surface_form) to build dictionary\n    var dictionary_entries = unk_dictionary.buildDictionary(this.unk_entries);\n\n    var char_def = this.cd_builder.build(); // Create CharacterDefinition\n\n    unk_dictionary.characterDefinition(char_def);\n\n    for (var token_info_id in dictionary_entries) {\n        var class_name = dictionary_entries[token_info_id];\n        var class_id = char_def.invoke_definition_map.lookup(class_name);\n\n        // Assertion\n        // if (trie_id < 0) {\n        //     console.log(\"Not Found:\" + surface_form);\n        // }\n\n        unk_dictionary.addMapping(class_id, token_info_id);\n    }\n\n    return unk_dictionary;\n};\n\n/**\n * Build double array trie\n *\n * @returns {DoubleArray} Double-Array trie\n */\nDictionaryBuilder.prototype.buildDoubleArray = function () {\n    var trie_id = 0;\n    var words = this.tid_entries.map(function (entry) {\n        var surface_form = entry[0];\n        return { k: surface_form, v: trie_id++ };\n    });\n\n    var builder = doublearray.builder(1024 * 1024);\n    return builder.build(words);\n};\n\nmodule.exports = DictionaryBuilder;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar ConnectionCosts = require(\"../ConnectionCosts\");\n\n/**\n * Builder class for constructing ConnectionCosts object\n * @constructor\n */\nfunction ConnectionCostsBuilder() {\n    this.lines = 0;\n    this.connection_cost = null;\n}\n\nConnectionCostsBuilder.prototype.putLine = function (line) {\n    if (this.lines === 0) {\n        var dimensions = line.split(\" \");\n        var forward_dimension = dimensions[0];\n        var backward_dimension = dimensions[1];\n\n        if (forward_dimension < 0 || backward_dimension < 0) {\n            throw \"Parse error of matrix.def\";\n        }\n\n        this.connection_cost = new ConnectionCosts(forward_dimension, backward_dimension);\n        this.lines++;\n        return this;\n    }\n\n    var costs = line.split(\" \");\n\n    if (costs.length !== 3) {\n        return this;\n    }\n\n    var forward_id = parseInt(costs[0]);\n    var backward_id = parseInt(costs[1]);\n    var cost = parseInt(costs[2]);\n\n    if (forward_id < 0 || backward_id < 0 || !isFinite(forward_id) || !isFinite(backward_id) ||\n        this.connection_cost.forward_dimension <= forward_id || this.connection_cost.backward_dimension <= backward_id) {\n        throw \"Parse error of matrix.def\";\n    }\n\n    this.connection_cost.put(forward_id, backward_id, cost);\n    this.lines++;\n    return this;\n};\n\nConnectionCostsBuilder.prototype.build = function () {\n    return this.connection_cost;\n};\n\nmodule.exports = ConnectionCostsBuilder;\n","/*\n * Copyright 2014 Takuya Asano\n * Copyright 2010-2014 Atilika Inc. and contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\n\nvar CharacterDefinition = require(\"../CharacterDefinition\");\nvar InvokeDefinitionMap = require(\"../InvokeDefinitionMap\");\n\nvar CATEGORY_DEF_PATTERN = /^(\\w+)\\s+(\\d)\\s+(\\d)\\s+(\\d)/;\nvar CATEGORY_MAPPING_PATTERN = /^(0x[0-9A-F]{4})(?:\\s+([^#\\s]+))(?:\\s+([^#\\s]+))*/;\nvar RANGE_CATEGORY_MAPPING_PATTERN = /^(0x[0-9A-F]{4})\\.\\.(0x[0-9A-F]{4})(?:\\s+([^#\\s]+))(?:\\s+([^#\\s]+))*/;\n\n/**\n * CharacterDefinitionBuilder\n * @constructor\n */\nfunction CharacterDefinitionBuilder() {\n    this.char_def = new CharacterDefinition();\n    this.char_def.invoke_definition_map = new InvokeDefinitionMap();\n    this.character_category_definition = [];\n    this.category_mapping = [];\n}\n\nCharacterDefinitionBuilder.prototype.putLine = function (line) {\n    var parsed_category_def = CATEGORY_DEF_PATTERN.exec(line);\n    if (parsed_category_def != null) {\n        var class_id = this.character_category_definition.length;\n        var char_class = CharacterDefinition.parseCharCategory(class_id, parsed_category_def);\n        if (char_class == null) {\n            return;\n        }\n        this.character_category_definition.push(char_class);\n        return;\n    }\n    var parsed_category_mapping = CATEGORY_MAPPING_PATTERN.exec(line);\n    if (parsed_category_mapping != null) {\n        var mapping = CharacterDefinition.parseCategoryMapping(parsed_category_mapping);\n        this.category_mapping.push(mapping);\n    }\n    var parsed_range_category_mapping = RANGE_CATEGORY_MAPPING_PATTERN.exec(line);\n    if (parsed_range_category_mapping != null) {\n        var range_mapping = CharacterDefinition.parseRangeCategoryMapping(parsed_range_category_mapping);\n        this.category_mapping.push(range_mapping);\n    }\n};\n\nCharacterDefinitionBuilder.prototype.build = function () {\n    // TODO If DEFAULT category does not exist, throw error\n    this.char_def.invoke_definition_map.init(this.character_category_definition);\n    this.char_def.initCategoryMappings(this.category_mapping);\n    return this.char_def;\n};\n\nmodule.exports = CharacterDefinitionBuilder;\n"],"names":["$4972fefe23bc5a85$var$kuromoji","builder","option","$fUU5n","dictionaryBuilder","$eUQm1","module","exports","$b967976e8cb61571$var$TokenizerBuilder","dicPath","this","dic_path","prototype","build","callback","$bvut4","load","err","dic","$j4i5o","$de1c6b8bee24ef63$var$PUNCTUATION","$de1c6b8bee24ef63$var$Tokenizer","token_info_dictionary","unknown_dictionary","viterbi_builder","$l4QRj","viterbi_searcher","$kMaoV","connection_costs","formatter","$8fikg","splitByPunctuation","input","sentences","tail","index","search","push","substring","tokenize","text","tokens","i","length","sentence","tokenizeForSentence","lattice","getLattice","best_path","last_pos","word_position","j","token","features","features_line","node","type","getFeatures","name","split","formatEntry","start_pos","formatUnknownEntry","surface_form","$f582f9646fb529cc$var$ViterbiBuilder","trie","sentence_str","key","trie_id","left_id","right_id","word_cost","$fzzyu","$5ixay","pos","slice","vocabulary","commonPrefixSearch","n","v","k","token_info_ids","target_map","token_info_id","parseInt","dictionary","getShort","append","$EiQ3F","surrogate_aware_tail","head_char","charAt","head_char_class","lookup","toString","is_always_invoke","is_grouping","next_char","next_char_class","class_name","unk_ids","class_id","unk_id","appendEos","node_name","node_cost","cost","prev","shortest_cost","Number","MAX_VALUE","$b565b472b15816b6$var$ViterbiLattice","nodes_end_at","eos_pos","prev_nodes","last_index","$3db85cee23c38ac8$var$SurrogateAwareString","str","index_mapping","ch","isSurrogatePair","surrogate_aware_index","surrogate_aware_start_index","surrogate_aware_end_index","charCodeAt","NaN","lower","upper","utf16_code","$f2005bc27674e0c6$var$ViterbiSearcher","forward","backward","nodes","shortest_prev_node","edge_cost","prev_node","console","log","get","_cost","shortest_path","node_back","reverse","$600df09864e235b2$var$IpadicFormatter","word_id","position","word_type","pos_detail_1","pos_detail_2","pos_detail_3","conjugated_type","conjugated_form","basic_form","reading","pronunciation","$860a3940f990c4b1$var$BrowserDictionaryLoader","$5FDCP","apply","Object","create","loadArrayBuffer","url","xhr","XMLHttpRequest","open","responseType","onload","status","statusText","arraybuffer","response","typed_array","$7TSj6","Zlib","Gunzip","Uint8Array","decompress","buffer","onerror","send","e","p","aa","t","b","a","d","c","execScript","shift","y","x","Uint16Array","Uint32Array","DataView","Array","A","B","f","C","D","E","G","l","m","r","q","g","h","POSITIVE_INFINITY","getName","getData","data","H","K","J","ca","L","o","M","w","bufferSize","bufferType","resize","N","Error","P","set","subarray","da","ea","s","F","Z","Q","z","O","I","u","R","W","la","S","fa","ga","ha","T","ia","ja","ka","U","V","Y","ma","X","$","Date","String","fromCharCode","join","concat","call","$420f84d84ada4101$var$DictionaryLoader","$3rte0","file","load_callback","$4U4KJ","parallel","map","filename","_callback","$59kwG","buffers","base_buffer","Int32Array","check_buffer","loadTrie","token_info_buffer","pos_buffer","target_map_buffer","loadTokenInfoDictionaries","cc_buffer","Int16Array","loadConnectionCosts","unk_buffer","unk_pos_buffer","unk_map_buffer","cat_map_buffer","compat_cat_map_buffer","invoke_def_buffer","loadUnknownDictionaries","$3bfdb7183e8721d6$var$assertPath","path","TypeError","JSON","stringify","$3bfdb7183e8721d6$var$normalizeStringPosix","allowAboveRoot","code","res","lastSegmentLength","lastSlash","dots","lastSlashIndex","lastIndexOf","$3bfdb7183e8721d6$var$posix","resolve","cwd","resolvedPath","resolvedAbsolute","arguments","undefined","$hPtJY","normalize","isAbsolute","trailingSeparator","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","dir","root","base","$3bfdb7183e8721d6$var$_format","parse","ret","delimiter","win32","posix","$cfae44f0dfdf62c0$var$cachedSetTimeout","$cfae44f0dfdf62c0$var$cachedClearTimeout","$cfae44f0dfdf62c0$var$process","$cfae44f0dfdf62c0$var$defaultSetTimout","$cfae44f0dfdf62c0$var$defaultClearTimeout","$cfae44f0dfdf62c0$var$runTimeout","fun","setTimeout","e1","clearTimeout","$cfae44f0dfdf62c0$var$currentQueue","$cfae44f0dfdf62c0$var$queue","$cfae44f0dfdf62c0$var$draining","$cfae44f0dfdf62c0$var$queueIndex","$cfae44f0dfdf62c0$var$cleanUpNextTick","$cfae44f0dfdf62c0$var$drainQueue","timeout","len","run","marker","$cfae44f0dfdf62c0$var$runClearTimeout","$cfae44f0dfdf62c0$var$Item","array","$cfae44f0dfdf62c0$var$noop","nextTick","args","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","umask","parcelRequire","exports1","arrayLike","newLen","Math","max","newArr","idx","fn","callArgs","initialParams","pop","isObject","value","hasSetImmediate","setImmediate","hasNextTick","fallback","wrap","defer","setImmediate$1","asyncify","func","result","then","invokeCallback","message","error","rethrow","supportsSymbol","Symbol","isAsync","toStringTag","wrapAsync","asyncFn","applyEach$1","eachfn","fns","go","that","cb","freeGlobal","$parcel$global","freeSelf","self","Function","Symbol$1","objectProto","hasOwnProperty","nativeObjectToString","symToStringTag$1","getRawTag","isOwn","tag","unmasked","nativeObjectToString$1","objectToString","nullTag","undefinedTag","symToStringTag","baseGetTag","asyncTag","funcTag","genTag","proxyTag","isFunction","MAX_SAFE_INTEGER","isLength","isArrayLike","breakLoop","noop","callFn","iteratorSymbol","iterator","getIterator","coll","baseTimes","iteratee","isObjectLike","argsTag","baseIsArguments","objectProto$3","hasOwnProperty$2","propertyIsEnumerable","isArguments","isArray","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","MAX_SAFE_INTEGER$1","reIsUint","isIndex","test","argsTag$1","arrayTag","boolTag","dateTag","errorTag","funcTag$1","mapTag","numberTag","objectTag","regexpTag","setTag","stringTag","weakMapTag","arrayBufferTag","dataViewTag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","typedArrayTags","baseIsTypedArray","baseUnary","freeExports$1","freeModule$1","freeProcess","process","nodeUtil","types","require","nodeIsTypedArray","isTypedArray","hasOwnProperty$1","arrayLikeKeys","inherited","isArr","isArg","isBuff","isType","skipIndexes","objectProto$5","isPrototype","Ctor","constructor","overArg","transform","nativeKeys","keys","hasOwnProperty$3","baseKeys","object","createArrayIterator","createES2015Iterator","item","next","done","createObjectIterator","obj","okeys","onlyOnce","_eachOfLimit","limit","nextElem","running","looping","iterateeCallback","replenish","elem","eachOfLimit","doLimit","iterable","eachOfArrayLike","completed","iteratorCallback","eachOfGeneric","Infinity","eachOf","doParallel","_asyncMap","arr","results","counter","_iteratee","_","applyEach","doParallelLimit","mapLimit","mapSeries","applyEachSeries","arrayEach","createBaseFor","fromRight","keysFunc","props","baseFor","baseForOwn","baseFindIndex","predicate","fromIndex","baseIsNaN","strictIndexOf","baseIndexOf","auto","tasks","concurrency","numTasks","runningTasks","hasError","readyTasks","readyToCheck","uncheckedDependencies","enqueueTask","task","runTask","processQueue","taskName","taskListeners","taskComplete","taskCallback","safeResults","val","rkey","taskFn","checkForDeadlocks","getDependents","dependent","dependencies","remainingDependencies","dependencyName","arrayMap","symbolTag","isSymbol","INFINITY","symbolProto","symbolToString","baseToString","baseSlice","castSlice","charsEndIndex","strSymbols","chrSymbols","charsStartIndex","asciiToArray","string","reHasUnicode","RegExp","hasUnicode","rsAstralRange$1","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsModifier","rsOptVar","rsOptJoin","rsSeq","rsSymbol","reUnicode","unicodeToArray","match","stringToArray","reTrim","trim","chars","guard","replace","FN_ARGS","FN_ARG_SPLIT","FN_ARG","STRIP_COMMENTS","parseParams","autoInject","newTasks","params","fnIsAsync","hasNoDeps","newTask","taskCb","newArgs","DLL","head","setInitial","dll","queue","worker","payload","_worker","numRunning","workersList","processingScheduled","_insert","insertAtFront","started","idle","drain","_tasks","unshift","_next","splice","unsaturated","isProcessing","saturated","empty","paused","kill","remove","testFn","min","pause","resume","cargo","removeLink","insertAfter","newNode","insertBefore","toArray","curr","eachOfSeries","reduce","memo","seq","_functions","newargs","nextargs","compose","_concat","concatLimit","mapResults","concatSeries","constant","values","identity","_createTester","check","getResult","testResult","testPassed","_findGetResult","detect","detectLimit","detectSeries","consoleFunc","doDuring","_fn","_test","truth","doWhilst","doUntil","during","_withoutIndex","eachLimit","eachLimit$1","eachSeries","ensureAsync","sync","innerArgs","notId","every","everyLimit","everySeries","baseProperty","filterArray","truthValues","filterGeneric","sort","_filter","filter","filterLimit","filterSeries","forever","errback","groupByLimit","groupBy","groupBySeries","mapValuesLimit","newObj","mapValues","mapValuesSeries","has","memoize","hasher","queues","memoized","unmemoized","_parallel","parallelLimit","parallelLimit$1","queue$1","items","priorityQueue","priority","nextNode","race","reduceRight","reflect","reflectCallback","cbArg","reflectAll","reject$1","reject","rejectLimit","rejectSeries","constant$1","retry","opts","DEFAULT_TIMES","DEFAULT_INTERVAL","options","times","intervalFunc","parseTimes","acc","interval","errorFilter","_task","attempt","retryAttempt","retryable","series","some","Boolean","someLimit","someSeries","sortBy","comparator","left","right","criteria","milliseconds","info","timer","timedOut","timeoutCallback","nativeCeil","ceil","nativeMax","baseRange","step","timeLimit","count","timesSeries","accumulator","tryEach","unmemoize","whilst","until","waterfall","taskIndex","nextTask","each","timesLimit","all","allLimit","allSeries","any","anyLimit","anySeries","find","findLimit","findSeries","forEach","forEachSeries","forEachLimit","forEachOf","forEachOfSeries","forEachOfLimit","inject","foldl","foldr","select","selectLimit","selectSeries","wrapSync","defineProperty","factory","$281a90319f0269e0$var$DynamicDictionaries","$kOFgG","$4ywfc","$60iX8","$1RjjU","loadDictionary","loadPosVector","loadTargetMap","NOT_FOUND","newBC","initial_size","initBase","_base","last_used_id","initCheck","_check","realloc","min_size","new_size","base_new_array","newArrayBuffer","signed","bytes","check_new_array","first_unused_node","ROOT_ID","getBaseBuffer","getCheckBuffer","loadBaseBuffer","loadCheckBuffer","size","getBase","getCheck","setBase","base_value","setCheck","check_value","setFirstUnusedNode","getFirstUnusedNode","shrink","calc","unused_count","unused","efficiency","dump","dump_base","dump_check","DoubleArrayBuilder","bc","DoubleArray","record","sorted","buff_keys","stringToUtf8Bytes","k1","k2","b1","b2","min_length","_build","parent_index","children_info","getChildrenInfo","findAllocatableBase","setBC","child_code","child_start","child_len","child_index","current_char","next_pos","parent_id","child_id","prev_unused_id","next_unused_id","empty_area_found","candidate_id","isUnusedNode","contain","parent","child","traverse","grand_child","utf8BytesToString","arrayCopy","Int8Array","RangeError","src","src_offset","ArrayBuffer","dstU8","srcU8","unicode_code","doublearray","$3513596fa4efb26b$var$TokenInfoDictionary","$lm78j","buildDictionary","entries","dictionary_entries","entry","feature","isFinite","put","pos_id","putShort","putInt","putString","addMapping","source","target","mapping","targetMapToBuffer","map_keys_size","map_values_size","array_buffer","readInt","token_info_id_str","isNaN","getInt","getString","$f8c12f87daee3a62$var$ByteBuffer","reallocate","new_array","num","b0","b3","$f8c12f87daee3a62$var$stringToUtf8Bytes","buf","$f8c12f87daee3a62$var$utf8BytesToString","$45f171ced0eb4615$var$ConnectionCosts","forward_dimension","backward_dimension","forward_id","backward_id","connection_costs_buffer","$15a9ba3c38e27ac0$var$UnknownDictionary","character_definition","characterDefinition","lookupCompatibleCategory","$7o4yF","$560e4f6c1a4a4d27$var$DEFAULT_CATEGORY","$560e4f6c1a4a4d27$var$CharacterDefinition","character_category_map","compatible_category_map","invoke_definition_map","char_def","$2drkx","parseCharCategory","parsed_category_def","category","invoke","grouping","max_length","$jpEDu","parseCategoryMapping","parsed_category_mapping","default_category","compatible_category","default","compatible","parseRangeCategoryMapping","initCategoryMappings","category_mapping","code_point","bitset","default_id","integer","classes","bit","character_class","getCharacterClass","$19d1fee0f394d067$var$InvokeDefinitionMap","lookup_table","invoke_def","character_category_definition","init","toBuffer","char_class","$adbee818e074c498$var$DictionaryBuilder","tid_entries","unk_entries","cc_builder","$2LDd9","cd_builder","$44KmZ","addTokenInfoDictionary","line","new_entry","putCostMatrixLine","putLine","putCharDefLine","putUnkDefLine","dictionaries","buildTokenInfoDictionary","buildUnknownDictionary","buildDoubleArray","unk_dictionary","words","$203e63161ed92a4a$var$ConnectionCostsBuilder","lines","connection_cost","dimensions","costs","$2f7b81342e03a404$var$CATEGORY_DEF_PATTERN","$2f7b81342e03a404$var$CATEGORY_MAPPING_PATTERN","$2f7b81342e03a404$var$RANGE_CATEGORY_MAPPING_PATTERN","$2f7b81342e03a404$var$CharacterDefinitionBuilder","exec","parsed_range_category_mapping","range_mapping"],"version":3,"file":"kuromoji.c82d710c.js.map"}